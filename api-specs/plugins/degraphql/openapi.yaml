components:
  parameters:
    Degraphql_routeIdOrName:
      description: ID or name of the Degraphql_route to lookup
      example: ''
      in: path
      name: Degraphql_routeIdOrName
      required: true
      schema:
        type: string
    PaginationOffset:
      allowEmptyValue: true
      description: >-
        Offset from which to return the next set of resources. Use the value of
        the 'offset' field from the response of a list operation as input here
        to paginate through all the resources
      in: query
      name: offset
      schema:
        type: string
    PaginationSize:
      description: Number of resources to be returned.
      in: query
      name: size
      schema:
        default: 100
        maximum: 1000
        minimum: 1
        type: integer
    PaginationTagsFilter:
      allowEmptyValue: true
      description: >-
        A list of tags to filter the list of resources on. Multiple tags can be
        concatenated using ',' to mean AND or using '/' to mean OR.
      example: tag1,tag2
      in: query
      name: tags
      schema:
        type: string
    ServiceIdOrName:
      description: ID or name of the Service to lookup
      example: 7fca84d6-7d37-4a74-a7b0-93e576089a41
      in: path
      name: ServiceIdOrName
      required: true
      schema:
        type: string
  responses:
    HTTP401Error:
      content:
        application/json:
          examples:
            DuplicateApiKey:
              summary: Duplicate API key found
              value:
                message: Duplicate API key found
                status: 401
            InvalidAuthCred:
              summary: Invalid authentication credentials
              value:
                message: Unauthorized
                status: 401
            NoAPIKey:
              summary: No API key found
              value:
                message: No API key found in request
                status: 401
          schema:
            $ref: '#/components/schemas/GatewayUnauthorizedError'
      description: Unauthorized
  schemas:
    Degraphql_route:
      additionalProperties: false
      example:
        id: 56c4566c-14cc-4132-9011-4139fcbbe50a
        query: query{ user { email } }
        service:
          id: bd380f99-659d-415e-b0e7-72ea05df3218
        uri: /users
      properties:
        created_at:
          description: Unix epoch when the resource was created.
          nullable: true
          type: integer
        id:
          nullable: true
          type: string
        methods:
          default:
            - GET
          items:
            type: string
          nullable: true
          type: array
        query:
          type: string
        service:
          properties:
            id:
              type: string
          type: object
          x-foreign: true
        updated_at:
          description: Unix epoch when the resource was last updated.
          nullable: true
          type: integer
        uri:
          type: string
      required:
        - service
        - uri
        - query
      type: object
    Degraphql_routeWithoutParents:
      additionalProperties: false
      example:
        id: 56c4566c-14cc-4132-9011-4139fcbbe50a
        query: query{ user { email } }
        uri: /users
      properties:
        created_at:
          description: Unix epoch when the resource was created.
          nullable: true
          type: integer
        id:
          nullable: true
          type: string
        methods:
          default:
            - GET
          items:
            type: string
          nullable: true
          type: array
        query:
          type: string
        service:
          properties:
            id:
              type: string
          type: object
          x-foreign: true
        updated_at:
          description: Unix epoch when the resource was last updated.
          nullable: true
          type: integer
        uri:
          type: string
      required:
        - uri
        - query
      type: object
    GatewayUnauthorizedError:
      properties:
        message:
          type: string
        status:
          type: integer
      required:
        - message
        - status
      type: object
    PaginationNextResponse:
      description: URI to the next page (may be null)
      type: string
    PaginationOffsetResponse:
      description: >-
        Offset is used to paginate through the API. Provide this value to the
        next list operation to fetch the next page
      type: string
externalDocs:
  description: DeGraphQL Plugin API Specification
  url: https://developer.konghq.com
info:
  contact:
    email: support@konghq.com
    name: Kong Inc
    url: https://konghq.com
  description: >-
    Manage URI-to-GraphQL mappings for services using the DeGraphQL plugin.

    You can lean more about Kong Gateway at
    [developer.konghq.com](https://developer.konghq.com).

    Give Kong a star at [Kong/kong](https://github.com/kong/kong) repository.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: DeGraphQL Plugin API
  version: 0.0.1
openapi: 3.0.0
paths:
  /degraphql_routes:
    get:
      description: List all Degraphql_routes
      operationId: list-degraphql_route
      parameters:
        - $ref: '#/components/parameters/PaginationSize'
        - $ref: '#/components/parameters/PaginationOffset'
        - $ref: '#/components/parameters/PaginationTagsFilter'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Degraphql_route'
                    type: array
                  next:
                    $ref: '#/components/schemas/PaginationNextResponse'
                  offset:
                    $ref: '#/components/schemas/PaginationOffsetResponse'
                type: object
          description: A successful response listing Degraphql_routes
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: List all Degraphql_routes
      tags:
        - Degraphql_routes
    post:
      description: Create a new Degraphql_route
      operationId: create-degraphql_route
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Degraphql_route'
        description: Description of the new Degraphql_route for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Degraphql_route'
          description: Successfully created Degraphql_route
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a new Degraphql_route
      tags:
        - Degraphql_routes
  /degraphql_routes/{Degraphql_routeIdOrName}:
    delete:
      description: Delete a Degraphql_route
      operationId: delete-degraphql_route
      parameters:
        - $ref: '#/components/parameters/Degraphql_routeIdOrName'
      responses:
        '204':
          description: Successfully deleted Degraphql_route or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Degraphql_route
      tags:
        - Degraphql_routes
    get:
      description: Get a Degraphql_route using ID or name.
      operationId: get-degraphql_route
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Degraphql_route'
          description: Successfully fetched Degraphql_route
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Degraphql_route
      tags:
        - Degraphql_routes
    parameters:
      - $ref: '#/components/parameters/Degraphql_routeIdOrName'
    patch:
      description: Update a Degraphql_route
      operationId: update-degraphql_route
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Degraphql_route'
        description: Fields of the Degraphql_route that need to be updated
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Degraphql_route'
          description: Successfully updated Degraphql_route
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Update a Degraphql_route
      tags:
        - Degraphql_routes
    put:
      description: Create or Update Degraphql_route using ID or name.
      operationId: upsert-degraphql_route
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Degraphql_route'
        description: Description of the Degraphql_route
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Degraphql_route'
          description: Successfully upserted Degraphql_route
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Degraphql_route
      tags:
        - Degraphql_routes
  /services/{ServiceIdOrName}/degraphql/routes:
    get:
      description: List all Degraphql_routes associated with a Service
      operationId: list-degraphql_route-with-service
      parameters:
        - $ref: '#/components/parameters/ServiceIdOrName'
        - $ref: '#/components/parameters/PaginationSize'
        - $ref: '#/components/parameters/PaginationOffset'
        - $ref: '#/components/parameters/PaginationTagsFilter'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Degraphql_route'
                    type: array
                  next:
                    $ref: '#/components/schemas/PaginationNextResponse'
                  offset:
                    $ref: '#/components/schemas/PaginationOffsetResponse'
                type: object
          description: A successful response listing Degraphql_routes
      summary: List all Degraphql_routes associated with a Service
      tags:
        - Degraphql_routes
    post:
      description: Create a new Degraphql_route associated with a Service
      operationId: create-degraphql_route-with-service
      parameters:
        - $ref: '#/components/parameters/ServiceIdOrName'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Degraphql_routeWithoutParents'
        description: Description of new Degraphql_route for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Degraphql_route'
          description: Successfully created Degraphql_route
      summary: Create a new Degraphql_route associated with a Service
      tags:
        - Degraphql_routes
  /services/{ServiceIdOrName}/degraphql/routes/{Degraphql_routeIdOrName}:
    delete:
      description: Delete a a Degraphql_route associated with a Service using ID or name.
      operationId: delete-degraphql_route-with-service
      parameters:
        - $ref: '#/components/parameters/ServiceIdOrName'
        - $ref: '#/components/parameters/Degraphql_routeIdOrName'
      responses:
        '204':
          description: Successfully deleted Degraphql_route or the resource didn't exist
      summary: Delete a a Degraphql_route associated with a Service
      tags:
        - Degraphql_routes
    get:
      description: Get a Degraphql_route associated with a Service using ID or name.
      operationId: get-degraphql_route-with-service
      parameters:
        - $ref: '#/components/parameters/ServiceIdOrName'
        - $ref: '#/components/parameters/Degraphql_routeIdOrName'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Degraphql_route'
          description: Successfully fetched Degraphql_route
        '404':
          description: Resource does not exist
      summary: Fetch a Degraphql_route associated with a Service
      tags:
        - Degraphql_routes
    patch:
      description: Update a a Degraphql_route associated with a Service using ID or name.
      operationId: update-degraphql_route-with-service
      parameters:
        - $ref: '#/components/parameters/ServiceIdOrName'
        - $ref: '#/components/parameters/Degraphql_routeIdOrName'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Degraphql_route'
        description: Fields of the Degraphql_route that need to be updated
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Degraphql_route'
          description: Successfully updated Degraphql_route
        '404':
          description: Resource does not exist
      summary: Update a a Degraphql_route associated with a Service
      tags:
        - Degraphql_routes
    put:
      description: >-
        Create or Update a Degraphql_route associated with a Service using ID or
        name.
      operationId: upsert-degraphql_route-with-service
      parameters:
        - $ref: '#/components/parameters/ServiceIdOrName'
        - $ref: '#/components/parameters/Degraphql_routeIdOrName'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Degraphql_routeWithoutParents'
        description: Description of the Degraphql_route
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Degraphql_route'
          description: Successfully upserted Degraphql_route
      summary: Upsert a Degraphql_route associated with a Service
      tags:
        - Degraphql_routes
  /{workspace}/degraphql_routes:
    get:
      description: List all Degraphql_routes in a workspace
      operationId: list-degraphql_route-in-workspace
      parameters:
        - $ref: '#/components/parameters/PaginationSize'
        - $ref: '#/components/parameters/PaginationOffset'
        - $ref: '#/components/parameters/PaginationTagsFilter'
        - description: Name or ID of workspace
          example: team-a
          in: path
          name: workspace
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Degraphql_route'
                    type: array
                  next:
                    $ref: '#/components/schemas/PaginationNextResponse'
                  offset:
                    $ref: '#/components/schemas/PaginationOffsetResponse'
                type: object
          description: A successful response listing Degraphql_routes
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: List all Degraphql_routes in a workspace
      tags:
        - Degraphql_routes
    post:
      description: Create a new Degraphql_route in a workspace
      operationId: create-degraphql_route-in-workspace
      parameters:
        - description: Name or ID of workspace
          example: team-a
          in: path
          name: workspace
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Degraphql_route'
        description: Description of the new Degraphql_route for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Degraphql_route'
          description: Successfully created Degraphql_route
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a new Degraphql_route in a workspace
      tags:
        - Degraphql_routes
  /{workspace}/degraphql_routes/{Degraphql_routeIdOrName}:
    delete:
      description: Delete a Degraphql_route in a workspace
      operationId: delete-degraphql_route-in-workspace
      parameters:
        - $ref: '#/components/parameters/Degraphql_routeIdOrName'
        - description: Name or ID of workspace
          example: team-a
          in: path
          name: workspace
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted Degraphql_route or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Degraphql_route in a workspace
      tags:
        - Degraphql_routes
    get:
      description: Get a Degraphql_route using ID or name in a workspace.
      operationId: get-degraphql_route-in-workspace
      parameters:
        - description: Name or ID of workspace
          example: team-a
          in: path
          name: workspace
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Degraphql_route'
          description: Successfully fetched Degraphql_route
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Degraphql_route in a workspace
      tags:
        - Degraphql_routes
    parameters:
      - $ref: '#/components/parameters/Degraphql_routeIdOrName'
    patch:
      description: Update a Degraphql_route in a workspace
      operationId: update-degraphql_route-in-workspace
      parameters:
        - description: Name or ID of workspace
          example: team-a
          in: path
          name: workspace
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Degraphql_route'
        description: Fields of the Degraphql_route that need to be updated
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Degraphql_route'
          description: Successfully updated Degraphql_route
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Update a Degraphql_route in a workspace
      tags:
        - Degraphql_routes
    put:
      description: Create or Update Degraphql_route using ID or name in a workspace.
      operationId: upsert-degraphql_route-in-workspace
      parameters:
        - description: Name or ID of workspace
          example: team-a
          in: path
          name: workspace
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Degraphql_route'
        description: Description of the Degraphql_route
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Degraphql_route'
          description: Successfully upserted Degraphql_route
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Degraphql_route in a workspace
      tags:
        - Degraphql_routes
  /{workspace}/services/{ServiceIdOrName}/degraphql/routes:
    get:
      description: List all Degraphql_routes associated with a Service in a workspace
      operationId: list-degraphql_route-with-service-in-workspace
      parameters:
        - $ref: '#/components/parameters/ServiceIdOrName'
        - $ref: '#/components/parameters/PaginationSize'
        - $ref: '#/components/parameters/PaginationOffset'
        - $ref: '#/components/parameters/PaginationTagsFilter'
        - description: Name or ID of workspace
          example: team-a
          in: path
          name: workspace
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Degraphql_route'
                    type: array
                  next:
                    $ref: '#/components/schemas/PaginationNextResponse'
                  offset:
                    $ref: '#/components/schemas/PaginationOffsetResponse'
                type: object
          description: A successful response listing Degraphql_routes
      summary: List all Degraphql_routes associated with a Service in a workspace
      tags:
        - Degraphql_routes
    post:
      description: Create a new Degraphql_route associated with a Service in a workspace
      operationId: create-degraphql_route-with-service-in-workspace
      parameters:
        - $ref: '#/components/parameters/ServiceIdOrName'
        - description: Name or ID of workspace
          example: team-a
          in: path
          name: workspace
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Degraphql_routeWithoutParents'
        description: Description of new Degraphql_route for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Degraphql_route'
          description: Successfully created Degraphql_route
      summary: Create a new Degraphql_route associated with a Service in a workspace
      tags:
        - Degraphql_routes
  /{workspace}/services/{ServiceIdOrName}/degraphql/routes/{Degraphql_routeIdOrName}:
    delete:
      description: >-
        Delete a a Degraphql_route associated with a Service using ID or name in
        a workspace.
      operationId: delete-degraphql_route-with-service-in-workspace
      parameters:
        - $ref: '#/components/parameters/ServiceIdOrName'
        - $ref: '#/components/parameters/Degraphql_routeIdOrName'
        - description: Name or ID of workspace
          example: team-a
          in: path
          name: workspace
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted Degraphql_route or the resource didn't exist
      summary: Delete a a Degraphql_route associated with a Service in a workspace
      tags:
        - Degraphql_routes
    get:
      description: >-
        Get a Degraphql_route associated with a Service using ID or name in a
        workspace.
      operationId: get-degraphql_route-with-service-in-workspace
      parameters:
        - $ref: '#/components/parameters/ServiceIdOrName'
        - $ref: '#/components/parameters/Degraphql_routeIdOrName'
        - description: Name or ID of workspace
          example: team-a
          in: path
          name: workspace
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Degraphql_route'
          description: Successfully fetched Degraphql_route
        '404':
          description: Resource does not exist
      summary: Fetch a Degraphql_route associated with a Service in a workspace
      tags:
        - Degraphql_routes
    patch:
      description: >-
        Update a a Degraphql_route associated with a Service using ID or name in
        a workspace.
      operationId: update-degraphql_route-with-service-in-workspace
      parameters:
        - $ref: '#/components/parameters/ServiceIdOrName'
        - $ref: '#/components/parameters/Degraphql_routeIdOrName'
        - description: Name or ID of workspace
          example: team-a
          in: path
          name: workspace
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Degraphql_route'
        description: Fields of the Degraphql_route that need to be updated
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Degraphql_route'
          description: Successfully updated Degraphql_route
        '404':
          description: Resource does not exist
      summary: Update a a Degraphql_route associated with a Service in a workspace
      tags:
        - Degraphql_routes
    put:
      description: >-
        Create or Update a Degraphql_route associated with a Service using ID or
        name in a workspace.
      operationId: upsert-degraphql_route-with-service-in-workspace
      parameters:
        - $ref: '#/components/parameters/ServiceIdOrName'
        - $ref: '#/components/parameters/Degraphql_routeIdOrName'
        - description: Name or ID of workspace
          example: team-a
          in: path
          name: workspace
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Degraphql_routeWithoutParents'
        description: Description of the Degraphql_route
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Degraphql_route'
          description: Successfully upserted Degraphql_route
      summary: Upsert a Degraphql_route associated with a Service in a workspace
      tags:
        - Degraphql_routes
servers:
  - description: Default Admin API URL
    url: '{protocol}://{hostname}:{port}{path}'
    variables:
      hostname:
        default: localhost
        description: Hostname for Kong's Admin API
      path:
        default: /
        description: Base path for Kong's Admin API
      port:
        default: '8001'
        description: Port for Kong's Admin API
      protocol:
        default: http
        description: Protocol for requests to Kong's Admin API
        enum:
          - http
          - https
tags:
  - name: Degraphql_routes

