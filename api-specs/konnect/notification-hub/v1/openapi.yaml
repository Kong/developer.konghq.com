---
openapi: 3.0.2
info:
  title: Konnect Notification Hub
  version: 1.0.0
  description: Notification Hub API for Konnect.
  contact:
    name: Kong
    url: https://konghq.com
servers:
- url: https://global.api.konghq.com/v1
  description: Global Base URL
security:
- personalAccessToken: []
tags:
- name: Notifications
  description: Operations related to notifications
paths:
  "/notifications/inbox":
    get:
      summary: List available notifications.
      description: List available notifications.
      operationId: list-notifications
      parameters:
      - "$ref": "#/components/parameters/PageBefore"
      - "$ref": "#/components/parameters/PageAfter"
      - "$ref": "#/components/parameters/NotificationFilter"
      responses:
        '200':
          "$ref": "#/components/responses/NotificationListResponse"
        '400':
          "$ref": "#/components/responses/BadRequest"
        '401':
          "$ref": "#/components/responses/Unauthorized"
        '403':
          "$ref": "#/components/responses/Forbidden"
        '404':
          "$ref": "#/components/responses/NotFound"
      tags:
      - Notifications
  "/notifications/inbox/{notificationId}":
    get:
      summary: Get notification details.
      description: Get notification details.
      operationId: get-notification-details
      parameters:
      - "$ref": "#/components/parameters/notificationId"
      responses:
        '200':
          "$ref": "#/components/responses/NotificationResponse"
        '401':
          "$ref": "#/components/responses/Unauthorized"
        '403':
          "$ref": "#/components/responses/Forbidden"
        '404':
          "$ref": "#/components/responses/NotFound"
      tags:
      - Notifications
    patch:
      summary: Update notification.
      description: Update notification.
      operationId: update-notification
      parameters:
      - "$ref": "#/components/parameters/notificationId"
      requestBody:
        "$ref": "#/components/requestBodies/NotificationUpdateRequest"
      responses:
        '200':
          "$ref": "#/components/responses/NotificationResponse"
        '400':
          "$ref": "#/components/responses/BadRequest"
        '401':
          "$ref": "#/components/responses/Unauthorized"
        '403':
          "$ref": "#/components/responses/Forbidden"
        '404':
          "$ref": "#/components/responses/NotFound"
      tags:
      - Notifications
    delete:
      summary: Delete notification.
      description: Delete notification.
      operationId: delete-notification
      parameters:
      - "$ref": "#/components/parameters/notificationId"
      responses:
        '204':
          description: No Content
        '401':
          "$ref": "#/components/responses/Unauthorized"
        '403':
          "$ref": "#/components/responses/Forbidden"
        '404':
          "$ref": "#/components/responses/NotFound"
      tags:
      - Notifications
  "/notifications/inbox/bulk":
    post:
      summary: Mark a list of notifications to a status.
      description: Mark a list of notifications to a status.
      operationId: bulk-notifications
      requestBody:
        "$ref": "#/components/requestBodies/BulkRequest"
      responses:
        '200':
          description: No Content
        '400':
          "$ref": "#/components/responses/BadRequest"
        '401':
          "$ref": "#/components/responses/Unauthorized"
        '403':
          "$ref": "#/components/responses/Forbidden"
        '404':
          "$ref": "#/components/responses/NotFound"
      tags:
      - Notifications
  "/notifications/configurations":
    get:
      summary: List available user configurations.
      description: List available user configurations.
      operationId: list-user-configurations
      parameters:
      - "$ref": "#/components/parameters/ConfigurationFilter"
      responses:
        '200':
          "$ref": "#/components/responses/UserConfigurationListResponse"
        '400':
          "$ref": "#/components/responses/BadRequest"
        '401':
          "$ref": "#/components/responses/Unauthorized"
        '403':
          "$ref": "#/components/responses/Forbidden"
        '404':
          "$ref": "#/components/responses/NotFound"
      tags:
      - Notifications
  "/notifications/configurations/{eventId}/subscriptions":
    get:
      summary: List event subscriptions.
      description: List event subscriptions.
      operationId: list-event-subscriptions
      parameters:
      - "$ref": "#/components/parameters/eventId"
      responses:
        '200':
          "$ref": "#/components/responses/EventSubscriptionListResponse"
        '400':
          "$ref": "#/components/responses/BadRequest"
        '401':
          "$ref": "#/components/responses/Unauthorized"
        '403':
          "$ref": "#/components/responses/Forbidden"
        '404':
          "$ref": "#/components/responses/NotFound"
      tags:
      - Notifications
    post:
      summary: Create a new subscription for an event.
      description: Create a new subscription for an event.
      operationId: create-event-subscription
      parameters:
      - "$ref": "#/components/parameters/eventId"
      requestBody:
        "$ref": "#/components/requestBodies/EventSubscriptionRequest"
      responses:
        '201':
          "$ref": "#/components/responses/EventSubscriptionResponse"
        '400':
          "$ref": "#/components/responses/BadRequest"
        '401':
          "$ref": "#/components/responses/Unauthorized"
        '403':
          "$ref": "#/components/responses/Forbidden"
        '404':
          "$ref": "#/components/responses/NotFound"
      tags:
      - Notifications
  "/notifications/configurations/{eventId}/subscriptions/{subscriptionId}":
    parameters:
    - "$ref": "#/components/parameters/eventId"
    - "$ref": "#/components/parameters/subscriptionId"
    get:
      summary: Get subscription for an event.
      description: Get subscription for an event.
      operationId: get-event-subscription
      responses:
        '200':
          "$ref": "#/components/responses/EventSubscriptionResponse"
        '400':
          "$ref": "#/components/responses/BadRequest"
        '401':
          "$ref": "#/components/responses/Unauthorized"
        '403':
          "$ref": "#/components/responses/Forbidden"
        '404':
          "$ref": "#/components/responses/NotFound"
      tags:
      - Notifications
    patch:
      summary: Update subscription for an event.
      description: Update subscription for an event.
      operationId: update-event-subscription
      requestBody:
        "$ref": "#/components/requestBodies/EventSubscriptionRequest"
      responses:
        '200':
          "$ref": "#/components/responses/EventSubscriptionResponse"
        '400':
          "$ref": "#/components/responses/BadRequest"
        '401':
          "$ref": "#/components/responses/Unauthorized"
        '403':
          "$ref": "#/components/responses/Forbidden"
        '404':
          "$ref": "#/components/responses/NotFound"
      tags:
      - Notifications
    delete:
      summary: Delete subscription associated with event.
      description: Delete subscription associated with event.
      operationId: delete-event-subscription
      responses:
        '204':
          description: No Content
        '401':
          "$ref": "#/components/responses/Unauthorized"
        '403':
          "$ref": "#/components/responses/Forbidden"
        '404':
          "$ref": "#/components/responses/NotFound"
      tags:
      - Notifications
components:
  parameters:
    notificationId:
      name: notificationId
      in: path
      required: true
      description: ID of the notification.
      schema:
        type: string
    eventId:
      name: eventId
      in: path
      required: true
      description: Formatted string ID of the notification event.
      schema:
        type: string
        example: invoice-ready
    subscriptionId:
      name: subscriptionId
      in: path
      required: true
      description: Subscription ID of the user configuration.
      schema:
        type: string
    NotificationFilter:
      name: filter
      description: Filters a collection of notifications.
      required: false
      in: query
      schema:
        "$ref": "#/components/schemas/NotificationFilterParameters"
      style: deepObject
    ConfigurationFilter:
      name: filter
      description: Filters a collection of configurations.
      required: false
      in: query
      schema:
        "$ref": "#/components/schemas/ConfigurationFilterParameters"
      style: deepObject
    PageBefore:
      name: page[before]
      description: Request the next page of data, starting with the item before this
        parameter.
      required: false
      in: query
      allowEmptyValue: true
      schema:
        type: string
        example: ewogICJpZCI6ICJoZWxsbyB3b3JsZCIKfQ
    PageAfter:
      name: page[after]
      description: Request the next page of data, starting with the item after this
        parameter.
      required: false
      in: query
      allowEmptyValue: true
      schema:
        type: string
        example: ewogICJpZCI6ICJoZWxsbyB3b3JsZCIKfQ
  requestBodies:
    NotificationUpdateRequest:
      description: Request body schema for updating notification status.
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/NotificationUpdatePayload"
          examples:
            Example Request Body:
              "$ref": "#/components/examples/NotificationUpdatePayload"
    EventSubscriptionRequest:
      description: Request body schema for creating/updating event subscription.
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/EventSubscription"
          examples:
            Example Request Body:
              "$ref": "#/components/examples/EventSubscriptionPayload"
    BulkRequest:
      description: Request body schema for bulk status update.
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/BulkPayload"
          examples:
            Example Request Body:
              "$ref": "#/components/examples/BulkPayload"
  responses:
    NotificationResponse:
      description: View a single notification.
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Notification"
          examples:
            Notification:
              "$ref": "#/components/examples/NotificationResponse"
    NotificationListResponse:
      description: A paginated list response for a collection of notifications
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            required:
            - data
            - meta
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Notification"
              meta:
                "$ref": "#/components/schemas/CursorMetaPage"
          examples:
            Notifications List:
              "$ref": "#/components/examples/NotificationListResponse"
    UserConfigurationListResponse:
      description: A paginated list response for all notification events and user
        subscriptions.
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            required:
            - data
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/UserConfiguration"
          examples:
            User Configurations List:
              "$ref": "#/components/examples/UserConfigurationListResponse"
    EventSubscriptionListResponse:
      description: A paginated list response for all subscriptions associated with
        an event.
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            required:
            - data
            - meta
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/EventSubscriptionResponse"
              meta:
                "$ref": "#/components/schemas/CursorMetaPage"
          examples:
            Event Subscriptions List:
              "$ref": "#/components/examples/EventSubscriptionListResponse"
    EventSubscriptionResponse:
      description: Response containing specific subscription details associated with
        an event.
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/EventSubscriptionResponse"
          examples:
            Event Subscription:
              "$ref": "#/components/examples/EventSubscriptionResponse"
    BadRequest:
      description: Bad Request
      content:
        application/problem+json:
          schema:
            "$ref": "#/components/schemas/BadRequestError"
    Unauthorized:
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            "$ref": "#/components/schemas/UnauthorizedError"
          examples:
            UnauthorizedExample:
              "$ref": "#/components/examples/UnauthorizedExample"
    Forbidden:
      description: Forbidden
      content:
        application/problem+json:
          schema:
            "$ref": "#/components/schemas/ForbiddenError"
          examples:
            UnauthorizedExample:
              "$ref": "#/components/examples/ForbiddenExample"
    NotFound:
      description: Not Found
      content:
        application/problem+json:
          schema:
            "$ref": "#/components/schemas/NotFoundError"
          examples:
            NotFoundExample:
              "$ref": "#/components/examples/NotFoundExample"
  schemas:
    NotificationFilterParameters:
      title: NotificationFilterParameters
      type: object
      additionalProperties: false
      properties:
        title:
          "$ref": "#/components/schemas/StringFieldFilter"
        description:
          "$ref": "#/components/schemas/StringFieldFilter"
        namespace:
          "$ref": "#/components/schemas/StringFieldFilter"
        region:
          "$ref": "#/components/schemas/StringFieldFilter"
        status:
          "$ref": "#/components/schemas/StringFieldFilter"
    ConfigurationFilterParameters:
      title: ConfigurationFilterParameters
      type: object
      additionalProperties: false
      properties:
        event_title:
          "$ref": "#/components/schemas/StringFieldFilter"
        event_description:
          "$ref": "#/components/schemas/StringFieldFilter"
        event_namespace:
          "$ref": "#/components/schemas/StringFieldFilter"
        region:
          "$ref": "#/components/schemas/StringFieldFilter"
    Notification:
      type: object
      description: Properties of a notification.
      additionalProperties: false
      required:
      - id
      - title
      - description
      - status
      - region
      - namespace
      - entity_id
      - details
      - created_at
      - updated_at
      properties:
        id:
          "$ref": "#/components/schemas/UUID"
        title:
          type: string
        description:
          type: string
        status:
          "$ref": "#/components/schemas/NotificationStatus"
        region:
          "$ref": "#/components/schemas/NotificationRegion"
        namespace:
          "$ref": "#/components/schemas/NotificationNamespace"
        entity_id:
          type: string
          description: ID of the entity. Use '*' to represent all entities of this
            type.
        details:
          type: object
          description: Metadata associated with the notification to build actionable
            links.
        created_at:
          "$ref": "#/components/schemas/CreatedAt"
        updated_at:
          "$ref": "#/components/schemas/UpdatedAt"
    NotificationUpdatePayload:
      description: Status of the notification.
      type: object
      required:
      - status
      properties:
        status:
          "$ref": "#/components/schemas/NotificationStatus"
    NotificationStatus:
      type: string
      description: Status of the notification.
      enum:
      - READ
      - UNREAD
      - ARCHIVED
    NotificationRegion:
      type: string
      description: Region associated to a notification.
      enum:
      - US
      - EU
      - AU
      - "*"
    NotificationChannel:
      type: object
      description: Channel subscription details for an event.
      required:
      - type
      - enabled
      properties:
        type:
          "$ref": "#/components/schemas/NotificationChannelType"
        enabled:
          type: boolean
    NotificationChannelType:
      type: string
      enum:
      - EMAIL
      - IN_APP
    NotificationNamespace:
      type: string
      enum:
      - plan-and-usage
      - organization
    UserConfiguration:
      description: Properties of an event.
      type: object
      required:
      - event_id
      - event_title
      - event_description
      - event_namespace
      - event_subscription_count
      - default_subscription
      properties:
        event_id:
          type: string
        event_title:
          type: string
        event_description:
          type: string
        event_namespace:
          "$ref": "#/components/schemas/NotificationNamespace"
        event_subscription_count:
          type: integer
          default: 0
        default_subscription:
          type: array
          items:
            "$ref": "#/components/schemas/DefaultSubscription"
    DefaultSubscription:
      type: object
      required:
      - channel
      - enabled
      properties:
        channel:
          "$ref": "#/components/schemas/NotificationChannelType"
        enabled:
          type: boolean
    EventSubscriptionResponse:
      properties:
        id:
          "$ref": "#/components/schemas/UUID"
        created_at:
          "$ref": "#/components/schemas/CreatedAt"
        updated_at:
          "$ref": "#/components/schemas/UpdatedAt"
        regions:
          type: array
          items:
            "$ref": "#/components/schemas/NotificationRegion"
        entities:
          type: array
          items:
            type: string
            description: ID of the entity. Use '*' to represent all entities of this
              type.
        channels:
          type: array
          items:
            "$ref": "#/components/schemas/NotificationChannel"
        enabled:
          type: boolean
          description: Enable/Disable complete subscription within an event.
      description: Properties associated with an event subscription.
      required:
      - id
      - created_at
      - updated_at
      - regions
      - entities
      - channels
      - enabled
      type: object
    EventSubscription:
      description: Properties associated with an event subscription.
      type: object
      required:
      - regions
      - entities
      - channels
      - enabled
      properties:
        regions:
          type: array
          items:
            "$ref": "#/components/schemas/NotificationRegion"
        entities:
          type: array
          items:
            type: string
            description: ID of the entity. Use '*' to represent all entities of this
              type.
        channels:
          type: array
          items:
            "$ref": "#/components/schemas/NotificationChannel"
        enabled:
          type: boolean
          description: Enable/Disable complete subscription within an event.
    BulkPayload:
      description: Request body schema for bulk status update.
      type: object
      required:
      - ids
      - status
      properties:
        ids:
          type: array
          items:
            type: string
          minItems: 1
          maxItems: 100
          uniqueItems: true
        status:
          "$ref": "#/components/schemas/NotificationStatus"
    StringFieldEqualsFilter:
      title: StringFieldEqualsFilter
      description: Filter a string value by exact match.
      type: string
    StringFieldContainsFilter:
      type: object
      title: StringFieldContainsFilter
      description: Filter a string value field by partial contains.
      properties:
        contains:
          type: string
      required:
      - contains
    StringFieldFilter:
      title: StringFieldFilter
      description: Filter a string value field either by exact match or partial contains.
      oneOf:
      - "$ref": "#/components/schemas/StringFieldEqualsFilter"
      - "$ref": "#/components/schemas/StringFieldContainsFilter"
    UUID:
      type: string
      format: uuid
      example: 5f9fd312-a987-4628-b4c5-bb4f4fddd5f7
      description: Contains a unique identifier used for this resource.
      readOnly: true
    CreatedAt:
      type: string
      format: date-time
      example: '2022-11-04T20:10:06.927Z'
      description: An ISO-8601 timestamp representation of entity creation date.
      readOnly: true
    UpdatedAt:
      type: string
      format: date-time
      example: '2022-11-04T20:10:06.927Z'
      description: An ISO-8601 timestamp representation of entity update date.
      readOnly: true
    CursorMetaPage:
      type: object
      required:
      - size
      - next
      - previous
      properties:
        first:
          description: URI to the first page
          type: string
          format: path
        last:
          description: URI to the last page
          type: string
          format: path
        next:
          description: URI to the next page
          type: string
          format: path
          nullable: true
        previous:
          description: URI to the previous page
          type: string
          format: path
          nullable: true
        size:
          description: Requested page size
          type: number
          example: 10
    BaseError:
      type: object
      title: Error
      description: standard error
      required:
      - status
      - title
      - instance
      - detail
      properties:
        status:
          type: integer
          description: |
            The HTTP status code of the error. Useful when passing the response
            body to child properties in a frontend UI. Must be returned as an integer.
          readOnly: true
        title:
          type: string
          description: |
            A short, human-readable summary of the problem. It should not
            change between occurences of a problem, except for localization.
            Should be provided as "Sentence case" for direct use in the UI.
          readOnly: true
        type:
          type: string
          description: The error type.
          readOnly: true
        instance:
          type: string
          description: |
            Used to return the correlation ID back to the user, in the format
            kong:trace:<correlation_id>. This helps us find the relevant logs
            when a customer reports an issue.
          readOnly: true
        detail:
          type: string
          description: |
            A human readable explanation specific to this occurence of the problem.
            This field may contain request/entity data to help the user understand
            what went wrong. Enclose variable values in square brackets. Should be
            provided as "Sentence case" for direct use in the UI.
          readOnly: true
    InvalidRules:
      description: invalid parameters rules
      type: string
      readOnly: true
      nullable: true
      enum:
      - required
      - is_array
      - is_base64
      - is_boolean
      - is_date_time
      - is_integer
      - is_null
      - is_number
      - is_object
      - is_string
      - is_uuid
      - is_fqdn
      - is_arn
      - unknown_property
      - missing_reference
      - is_label
      - matches_regex
      - invalid
      - is_supported_network_availability_zone_list
      - is_supported_network_cidr_block
      - is_supported_provider_region
    InvalidParameterStandard:
      type: object
      additionalProperties: false
      properties:
        field:
          type: string
          example: name
          readOnly: true
        rule:
          "$ref": "#/components/schemas/InvalidRules"
        source:
          type: string
          example: body
        reason:
          type: string
          example: is a required field
          readOnly: true
      required:
      - field
      - reason
    InvalidParameterMinimumLength:
      type: object
      additionalProperties: false
      properties:
        field:
          type: string
          example: name
          readOnly: true
        rule:
          description: invalid parameters rules
          type: string
          readOnly: true
          nullable: false
          enum:
          - min_length
          - min_digits
          - min_lowercase
          - min_uppercase
          - min_symbols
          - min_items
          - min
        minimum:
          type: integer
          example: 8
        source:
          type: string
          example: body
        reason:
          type: string
          example: must have at least 8 characters
          readOnly: true
      required:
      - field
      - reason
      - rule
      - minimum
    InvalidParameterMaximumLength:
      type: object
      additionalProperties: false
      properties:
        field:
          type: string
          example: name
          readOnly: true
        rule:
          description: invalid parameters rules
          type: string
          readOnly: true
          nullable: false
          enum:
          - max_length
          - max_items
          - max
        maximum:
          type: integer
          example: 8
        source:
          type: string
          example: body
        reason:
          type: string
          example: must not have more than 8 characters
          readOnly: true
      required:
      - field
      - reason
      - rule
      - maximum
    InvalidParameterChoiceItem:
      type: object
      additionalProperties: false
      properties:
        field:
          type: string
          example: name
          readOnly: true
        rule:
          description: invalid parameters rules
          type: string
          readOnly: true
          nullable: false
          enum:
          - enum
        reason:
          type: string
          example: is a required field
          readOnly: true
        choices:
          type: array
          uniqueItems: true
          readOnly: true
          nullable: false
          minItems: 1
          items: {}
        source:
          type: string
          example: body
      required:
      - field
      - reason
      - rule
      - choices
    InvalidParameterDependentItem:
      type: object
      additionalProperties: false
      properties:
        field:
          type: string
          example: name
          readOnly: true
        rule:
          description: invalid parameters rules
          type: string
          readOnly: true
          nullable: true
          enum:
          - dependent_fields
        reason:
          type: string
          example: is a required field
          readOnly: true
        dependents:
          type: array
          uniqueItems: true
          nullable: true
          items: {}
          readOnly: true
        source:
          type: string
          example: body
      required:
      - field
      - rule
      - reason
      - dependents
    InvalidParameters:
      type: array
      nullable: false
      uniqueItems: true
      minItems: 1
      description: invalid parameters
      items:
        oneOf:
        - "$ref": "#/components/schemas/InvalidParameterStandard"
        - "$ref": "#/components/schemas/InvalidParameterMinimumLength"
        - "$ref": "#/components/schemas/InvalidParameterMaximumLength"
        - "$ref": "#/components/schemas/InvalidParameterChoiceItem"
        - "$ref": "#/components/schemas/InvalidParameterDependentItem"
    BadRequestError:
      allOf:
      - "$ref": "#/components/schemas/BaseError"
      - type: object
        required:
        - invalid_parameters
        properties:
          invalid_parameters:
            "$ref": "#/components/schemas/InvalidParameters"
    UnauthorizedError:
      allOf:
      - "$ref": "#/components/schemas/BaseError"
      - type: object
        properties:
          status:
            example: 401
          title:
            example: Unauthorized
          type:
            example: https://httpstatuses.com/401
          instance:
            example: kong:trace:1234567890
          detail:
            example: Invalid credentials
    ForbiddenError:
      allOf:
      - "$ref": "#/components/schemas/BaseError"
      - type: object
        properties:
          status:
            example: 403
          title:
            example: Forbidden
          type:
            example: https://httpstatuses.com/403
          instance:
            example: kong:trace:1234567890
          detail:
            example: Forbidden
    NotFoundError:
      allOf:
      - "$ref": "#/components/schemas/BaseError"
      - type: object
        properties:
          status:
            example: 404
          title:
            example: Not Found
          type:
            example: https://httpstatuses.com/404
          instance:
            example: kong:trace:1234567890
          detail:
            example: Not found
  examples:
    NotificationUpdatePayload:
      value:
        status: READ
    NotificationResponse:
      summary: Notification Response
      value:
        id: 93f8380e-7798-4566-99e3-2edf2b57d290
        title: Unpaid invoice reminder
        description: Reminder for an unpaid invoice.
        status: UNREAD
        region: EU
        namespace: plan-and-usage
        entity_id: invoice-1
        details:
          entity_id: invoice-1
          entity_type: invoice
          regions:
          - EU
        created_at: '2023-01-01T00:00:00.000Z'
        updated_at: '2023-01-01T00:00:00.000Z'
    NotificationListResponse:
      summary: List Notifications Response
      value:
        data:
        - id: 93f8380e-7798-4566-99e3-2edf2b57d289
          title: Unpaid invoice reminder
          description: Reminder for an unpaid invoice.
          status: UNREAD
          region: US
          namespace: plan-and-usage
          entity_id: invoice-1
          details:
            entity_id: invoice-1
            entity_type: invoice
          created_at: '2023-01-01T00:00:00.000Z'
          updated_at: '2023-01-01T00:00:00.000Z'
        - id: 93f8380e-7798-4566-99e3-2edf2b57d290
          title: Unpaid invoice reminder
          description: Reminder for an unpaid invoice.
          status: UNREAD
          region: EU
          namespace: plan-and-usage
          entity_id: invoice-2
          details:
            entity_id: invoice-2
            entity_type: invoice
          created_at: '2023-01-01T00:00:00.000Z'
          updated_at: '2023-01-01T00:00:00.000Z'
        meta:
          next: ''
          previous: ''
          size: 10
    EventSubscriptionPayload:
      value:
        regions:
        - US
        - EU
        entities:
        - control-plane-1
        - control-plane-2
        channels:
        - type: IN_APP
          enabled: true
        - type: EMAIL
          enabled: true
        enabled: true
        created_at: '2023-01-01T00:00:00.000Z'
        updated_at: '2023-01-01T00:00:00.000Z'
    UserConfigurationListResponse:
      value:
        data:
        - event_id: billing.invoice.unpaid-reminder
          event_title: Unpaid invoice reminder
          event_description: Reminder for an unpaid invoice
          event_namespace: plan-and-usage
          event_subscription_count: 2
          default_subscription:
          - channel: IN_APP
            enabled: true
          - channel: EMAIL
            enabled: true
    EventSubscriptionListResponse:
      value:
        data:
        - id: 93f8380e-7798-4566-99e3-2edf2b57d291
          regions:
          - US
          - EU
          entities:
          - invoice-1
          - invoice-2
          channels:
          - type: IN_APP
            enabled: true
          - type: EMAIL
            enabled: true
          enabled: true
          created_at: '2023-01-01T00:00:00.000Z'
          updated_at: '2023-01-01T00:00:00.000Z'
        - id: 93f8380e-7798-4566-99e3-2edf2b57d292
          regions:
          - "*"
          entities:
          - "*"
          channels:
          - type: IN_APP
            enabled: true
          - type: EMAIL
            enabled: true
          enabled: true
          created_at: '2023-01-01T00:00:00.000Z'
          updated_at: '2023-01-01T00:00:00.000Z'
        meta:
          next: ''
          previous: ''
          size: 10
    EventSubscriptionResponse:
      value:
        id: 93f8380e-7798-4566-99e3-2edf2b57d292
        regions:
        - "*"
        entities:
        - "*"
        channels:
        - type: IN_APP
          enabled: true
        - type: EMAIL
          enabled: true
        enabled: true
        created_at: '2023-01-01T00:00:00.000Z'
        updated_at: '2023-01-01T00:00:00.000Z'
    BulkPayload:
      value:
        ids:
        - 93f8380e-7798-4566-99e3-2edf2b57d289
        - 93f8380e-7798-4566-99e3-2edf2b57d290
        status: READ
    UnauthorizedExample:
      value:
        status: 401
        title: Unauthorized
        instance: kong:trace:8347343766220159418
        detail: Unauthorized
    ForbiddenExample:
      value:
        status: 403
        title: Forbidden
        instance: kong:trace:2723154947768991354
        detail: You do not have permission to perform this action
    NotFoundExample:
      value:
        status: 404
        title: Not Found
        instance: kong:trace:6816496025408232265
        detail: Not Found
  securitySchemes:
    personalAccessToken:
      type: http
      scheme: bearer
      bearerFormat: Token
      description: |
        The personal access token is meant to be used as an alternative to basic-auth when accessing Konnect via APIs.
        You can generate a Personal Access Token (PAT) from the [personal access token page](https://cloud.konghq.com/global/tokens/) in the Konnect dashboard.
        The PAT token must be passed in the header of a request, for example:
        `curl -X GET 'https://global.api.konghq.com/v2/users/' --header 'Authorization: Bearer kpat_xgfT...'`
