{
  "kong-ee": [
    {
      "message": "Kong Gateway now supports [dynamic plugin ordering](https://docs.konghq.com/gateway/3.0.x/kong-enterprise/plugin-ordering/). You can change a plugin’s static priority by specifying the order in which plugins run. This lets you run plugins such as `rate-limiting` before authentication plugins.",
      "type": "feature",
      "scope": "Core"
    },
    {
      "message": "Kong Gateway now offers a FIPS package. The package replaces the primary library, OpenSSL, with [BoringSSL](https://boringssl.googlesource.com/boringssl/), which at its core uses the FIPS 140-2 compliant BoringCrypto for cryptographic operations.\n\nTo enable FIPS mode, set [`fips`](https://docs.konghq.com/gateway/3.0.x/reference/configuration/#fips) to `on`. FIPS mode is only supported in Ubuntu 20.04.\n\n{:.info}\n> **Note** : The Kong Gateway FIPS package is not currently compatible with SSL connections to PostgreSQL.",
      "type": "feature",
      "scope": "Core"
    },
    {
      "message": "Kong Gateway now includes WebSocket validation functionality. Websockets are a type of persistent connection that works on top of HTTP.\n\nPreviously, Kong Gateway 2.x supported limited WebSocket connections, where plugins only ran during the initial connection phase instead of for each frame. Now, Kong Gateway provides more control over WebSocket traffic by implementing plugins that target WebSocket frames.\n\nThis release includes:\n\n- [Service](https://docs.konghq.com/gateway/3.0.x/admin-api/#service-object) and [route](https://docs.konghq.com/gateway/3.0.x/admin-api/#route-object) support for `ws` and `wss` protocols\n- Two new plugins: [WebSocket Size Limit](/plugins/websocket-size-limit/) and [WebSocket Validator](/plugins/websocket-validator/)\n- WebSocket plugin development capabilities ( **Beta feature** ) \n  - PDK modules: [kong.websocket.client](https://docs.konghq.com/gateway/3.0.x/plugin-development/pdk/kong.websocket.client/) and [kong.websocket.upstream](https://docs.konghq.com/gateway/3.0.x/plugin-development/pdk/kong.websocket.upstream/)\n  - [New plugin handlers](https://docs.konghq.com/gateway/3.0.x/plugin-development/custom-logic/#websocket-plugin-development)\n\nLearn how to develop WebSocket plugins with our [plugin development guide](https://docs.konghq.com/gateway/3.0.x/plugin-development/custom-logic/#websocket-plugin-development).",
      "type": "feature",
      "scope": "Core"
    },
    {
      "message": "In this release, Kong Manager ships a with a refactored design and improved user experience.\n\nNotable changes:\n\n- Reworked workspace dashboards, both for specific workspaces and at the multi-workspace level.\n- License metrics now appear at the top of overview pages.\n- Restructured the layout and navigation to make workspace selection a secondary concern.\n- Grayed out portal buttons when you don’t have permissions.\n- Added license level to phone home metrics.\n- Added more tooltips.",
      "type": "feature",
      "scope": "Core"
    },
    {
      "message": "[Secrets management](https://docs.konghq.com/gateway/3.0.x/kong-enterprise/secrets-management/) is now generally available. \n- Added GCP integration support for the secrets manager. GCP is now available as a vault backend.\n- The `/vaults-beta` entity has been deprecated and replaced with the `/vaults` entity.[#8871](https://github.com/Kong/kong/pull/8871)[#9217](https://github.com/Kong/kong/pull/9217)",
      "type": "feature",
      "scope": "Core"
    },
    {
      "message": "Kong Gateway now provides slim and UBI images. Slim images are docker containers built with a minimal set of installed packages to run Kong Gateway. From 3.0 onward, Kong Docker images will only contain software required to run the Gateway. This ensures that false positive vulnerabilities don’t get flagged during security scanning.\n\nIf you want to retain or add other dependencies, you can [build custom Kong Docker images](https://docs.konghq.com/gateway/3.0.x/install/docker/build-custom-images/).",
      "type": "feature",
      "scope": "Core"
    },
    {
      "message": "The base OS for our convenience docker tags (for example, `latest`, `3.0.0.0`, `3.0`) has switched from Alpine to Debian.",
      "type": "feature",
      "scope": "Core"
    },
    {
      "message": "Added key recovery for keyring encryption. This exposes a new endpoint for the Admin API, [`/keyring/recover`](https://docs.konghq.com/gateway/3.0.x/admin-api/db-encryption/#recover-keyring-from-database), and requires [`keyring_recovery_public_key`](https://docs.konghq.com/gateway/3.0.x/reference/configuration/#keyring_recovery_public_key) to be set in `kong.conf`.",
      "type": "feature",
      "scope": "Core"
    },
    {
      "message": "You can now encrypt declarative configuration files on data planes in DB-less and hybrid modes using [AES-256-GCM](https://www.rfc-editor.org/rfc/rfc5288.html) or [chacha20-poly1305](https://www.rfc-editor.org/rfc/rfc7539.html) encryption algorithms.\n\nSet your desired encryption mode with the [`declarative_config_encryption_mode`](https://docs.konghq.com/gateway/3.0.x/reference/configuration/#declarative_config_encryption_mode) configuration parameter.",
      "type": "feature",
      "scope": "Core"
    },
    {
      "message": "This release introduces a new router implementation: `atc-router`. This router is written in Rust, a powerful routing language that can handle complex routing requirements. The new router can be used in traditional-compatible mode, or use the new expression-based language.\n\nWith the new router, we have:\n\n- Reduced router rebuild time when changing Kong’s configuration\n- Increased runtime performance when routing requests\n- Reduced P99 latency from 1.5s to 0.1s with 10,000 routes\n\nLearn more about the router:\n\n- [Configure routes using expressions](https://docs.konghq.com/gateway/3.0.x/key-concepts/routes/expressions/)\n- [Router Expressions Language reference](https://docs.konghq.com/gateway/3.0.x/reference/expressions-language/language-references/)\n- [#8938](https://github.com/Kong/kong/pull/8938)",
      "type": "feature",
      "scope": "Core"
    },
    {
      "message": "Implemented delayed response in stream mode.[#6878](https://github.com/Kong/kong/pull/6878)",
      "type": "feature",
      "scope": "Core"
    },
    {
      "message": "Added `cache_key` on target entity for uniqueness detection.[#8179](https://github.com/Kong/kong/pull/8179)",
      "type": "feature",
      "scope": "Core"
    },
    {
      "message": "Introduced the tracing API, which is compatible with OpenTelemetry API specs, and adds built-in instrumentations.\n\nThe tracing API is intended to be used with a external exporter plugin. Built-in instrumentation types and sampling rate are configurable through the[`opentelemetry_tracing`](https://docs.konghq.com/gateway/3.0.x/reference/configuration/#opentelemetry_tracing) and [`opentelemetry_tracing_sampling_rate`](https://docs.konghq.com/gateway/3.0.x/reference/configuration/#opentelemetry_tracing_sampling_rate) options.[#8724](https://github.com/Kong/kong/pull/8724)",
      "type": "feature",
      "scope": "Core"
    },
    {
      "message": "Added `path`, `uri_capture`, and `query_arg` options to upstream `hash_on`for load balancing.[#8701](https://github.com/Kong/kong/pull/8701)",
      "type": "feature",
      "scope": "Core"
    },
    {
      "message": "Introduced Unix domain socket-based `lua-resty-events` to replace shared memory-based `lua-resty-worker-events`.[#8890](https://github.com/Kong/kong/pull/8890)",
      "type": "feature",
      "scope": "Core"
    },
    {
      "message": "Introduced the `table_name` field for entities. This field lets you specify a table name. Previously, the name was deduced by the entity `name` attribute.[#9182](https://github.com/Kong/kong/pull/9182)",
      "type": "feature",
      "scope": "Core"
    },
    {
      "message": "Added `headers` on active health checks for upstreams.[#8255](https://github.com/Kong/kong/pull/8255)",
      "type": "feature",
      "scope": "Core"
    },
    {
      "message": "Target entities using hostnames were resolved when they were not needed. Now when a target is removed or updated, the DNS record associated with it is removed from the list of hostnames to be resolved.[#8497](https://github.com/Kong/kong/pull/8497) [9265](https://github.com/Kong/kong/pull/9265)",
      "type": "feature",
      "scope": "Core"
    },
    {
      "message": "Improved error handling and debugging info in the DNS code.[#8902](https://github.com/Kong/kong/pull/8902)",
      "type": "feature",
      "scope": "Core"
    },
    {
      "message": "Kong Gateway will now attempt to recover from an unclean shutdown by detecting and removing dangling Unix sockets in the prefix directory.[#9254](https://github.com/Kong/kong/pull/9254)",
      "type": "feature",
      "scope": "Core"
    },
    {
      "message": "A new CLI command, `kong migrations status`, generates the migration status in a JSON file.",
      "type": "feature",
      "scope": "Core"
    },
    {
      "message": "Removed the warning for `AAAA` being experimental with `dns_order`.",
      "type": "feature",
      "scope": "Core"
    },
    {
      "message": "Kong Gateway does not register unnecessary event handlers on hybrid mode control plane nodes anymore. [#8452](https://github.com/Kong/kong/pull/8452).",
      "type": "feature",
      "scope": "Performance"
    },
    {
      "message": "Use the new timer library to improve performance, except for the plugin server.[#8912](https://github.com/Kong/kong/pull/8912)",
      "type": "feature",
      "scope": "Performance"
    },
    {
      "message": "Increased the use of caching for DNS queries by activating `additional_section` by default.[#8895](https://github.com/Kong/kong/pull/8895)",
      "type": "feature",
      "scope": "Performance"
    },
    {
      "message": "`pdk.request.get_header` has been changed to a faster implementation. It doesn’t fetch all headers every time it’s called.[#8716](https://github.com/Kong/kong/pull/8716)",
      "type": "feature",
      "scope": "Performance"
    },
    {
      "message": "Conditional rebuilding of the router, plugins iterator, and balancer on data planes.[#8519](https://github.com/Kong/kong/pull/8519),[#8671](https://github.com/Kong/kong/pull/8671)",
      "type": "feature",
      "scope": "Performance"
    },
    {
      "message": "Made configuration loading code more cooperative by yielding.[#8888](https://github.com/Kong/kong/pull/8888)",
      "type": "feature",
      "scope": "Performance"
    },
    {
      "message": "Use the LuaJIT encoder instead of JSON to serialize values faster in LMDB.[#8942](https://github.com/Kong/kong/pull/8942)",
      "type": "feature",
      "scope": "Performance"
    },
    {
      "message": "Made inflating and JSON decoding non-concurrent, which avoids blocking and makes data plane reloads faster.[#8959](https://github.com/Kong/kong/pull/8959)",
      "type": "feature",
      "scope": "Performance"
    },
    {
      "message": "Stopped duplication of some events.[#9082](https://github.com/Kong/kong/pull/9082)",
      "type": "feature",
      "scope": "Performance"
    },
    {
      "message": "Improved performance of configuration hash calculation by using `string.buffer` and `tablepool`.[#9073](https://github.com/Kong/kong/pull/9073)",
      "type": "feature",
      "scope": "Performance"
    },
    {
      "message": "Reduced cache usage in DB-less mode by not using the Kong cache for routes and services in LMDB.[#8972](https://github.com/Kong/kong/pull/8972)",
      "type": "feature",
      "scope": "Performance"
    },
    {
      "message": "Added a new `/timers` Admin API endpoint to get timer statistics and worker info.[#8912](https://github.com/Kong/kong/pull/8912)[#8999](https://github.com/Kong/kong/pull/8999)",
      "type": "feature",
      "scope": "Admin API"
    },
    {
      "message": "The `/` endpoint now includes plugin priority.[#8821](https://github.com/Kong/kong/pull/8821)",
      "type": "feature",
      "scope": "Admin API"
    },
    {
      "message": "Added wRPC protocol support. Configuration synchronization now happens over wRPC. wRPC is an RPC protocol that encodes with ProtoBuf and transports with WebSocket.[#8357](https://github.com/Kong/kong/pull/8357)\n- To keep compatibility with earlier versions, added support for the control plane to fall back to the previous protocol to support older data planes.[#8834](https://github.com/Kong/kong/pull/8834)\n- Added support to negotiate services supported with wRPC protocol. We will support more services in the future.[#8926](https://github.com/Kong/kong/pull/8926)",
      "type": "feature",
      "scope": "hybrid-mode"
    },
    {
      "message": "Declarative configuration exports now happen inside a transaction in PostgreSQL.[#8586](https://github.com/Kong/kong/pull/8586)",
      "type": "feature",
      "scope": "hybrid-mode"
    },
    {
      "message": "Starting with version 3.0, all bundled plugin versions are the same as the Kong Gateway version.[#8772](https://github.com/Kong/kong/pull/8772): \n\n[Plugin documentation](/plugins/) now refers to the Kong Gateway version instead of the individual plugin version.",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**New plugins**: \n- \n\n**OpenTelemetry**:\n\nExport tracing instrumentations to any OTLP/HTTP compatible backend.`opentelemetry_tracing` configuration must be enabled to collect the core tracing spans of Kong Gateway.[#8826](https://github.com/Kong/kong/pull/8826)\n\n- \n\n**TLS Handshake Modifier**:\n\nMake certificates available to other plugins acting on the same request.\n\n- \n\n**TLS Metadata Headers**:\n\nProxy TLS client certificate metadata to upstream services via an HTTP headers.\n\n- \n\n**WebSocket Size Limit**:\n\nAllows operators to specify a maximum size for incoming WebSocket messages.\n\n- \n\n**WebSocket Validator**:\n\nValidate individual WebSocket messages against a user-specified schema before proxying them.",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**ACME**: Added the `allow_any_domain` field. It defaults to false and if set to true, the gateway will ignore the `domains` field.[#9047](https://github.com/Kong/kong/pull/9047)",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**AWS Lambda**: Added support for cross-account invocation through the `aws_assume_role_arn` and`aws_role_session_name` configuration parameters.[#8900](https://github.com/Kong/kong/pull/8900)",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**AWS Lambda**: The plugin now accepts string type `statusCode` as a valid return when working in proxy integration mode.[#8765](https://github.com/Kong/kong/pull/8765)",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**AWS Lambda**: The plugin now separates AWS credential cache by the IAM role ARN.[#8907](https://github.com/Kong/kong/pull/8907)",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "Collector (`collector`): The deprecated Collector plugin has been removed.",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**DeGraphQL**: The GraphQL server path is now configurable with the `graphql_server_path` configuration parameter.",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**Kafka Upstream**: Added support for the `SCRAM-SHA-512` authentication mechanism.",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**LDAP Authentication Advanced**: This plugin now allows authorization based on group membership. The new configuration parameter, `groups_required`, is an array of string elements that indicates the groups that users must belong to for the request to be authorized.",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**LDAP Authentication Advanced**: The character `.` is now allowed in group attributes.",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**LDAP Authentication Advanced**: The character `:` is now allowed in the password field.",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**mTLS Authentication**: Introduced certificate revocation list (CRL) and OCSP server support with the following parameters: `http_proxy_host`, `http_proxy_port`, `https_proxy_host`, and `https_proxy_port`.",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**OPA**: New configuration parameter `include_body_in_opa_input`: When enabled, include the raw body as a string in the OPA input at `input.request.http.body` and the body size at `input.request.http.body_size`.",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**OPA**: New configuration parameter `include_parsed_json_body_in_opa_input`: When enabled and content-type is `application/json`, the parsed JSON will be added to the OPA input at `input.request.http.parsed_body`.",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: High cardinality metrics are now disabled by default.",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: Decreased performance penalty to proxy traffic when collecting metrics.",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: The following metric names were adjusted to add units to standardize where possible: \n- `http_status` to `http_requests_total`.\n- \n\n`latency` to `kong_request_latency_ms` (HTTP), `kong_upstream_latency_ms`, `kong_kong_latency_ms`, and `session_duration_ms` (stream).\n\nKong latency and upstream latency can operate at orders of different magnitudes. Separate these buckets to reduce memory overhead.\n\n- `kong_bandwidth` to `kong_bandwidth_bytes`.\n- `nginx_http_current_connections` and `nginx_stream_current_connections` were merged into to `nginx_hconnections_total` (or `nginx_current_connections`?)\n- \n\n`request_count` and `consumer_status` were merged into http\\_requests\\_total.\n\nIf the `per_consumer` config is set to `false`, the `consumer` label will be empty. If the `per_consumer` config is `true`, the `consumer` label will be filled.",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: `http_status` to `http_requests_total`.",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: `latency` to `kong_request_latency_ms` (HTTP), `kong_upstream_latency_ms`, `kong_kong_latency_ms`, and `session_duration_ms` (stream).\n\nKong latency and upstream latency can operate at orders of different magnitudes. Separate these buckets to reduce memory overhead.",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: `kong_bandwidth` to `kong_bandwidth_bytes`.",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: `nginx_http_current_connections` and `nginx_stream_current_connections` were merged into to `nginx_hconnections_total` (or `nginx_current_connections`?)",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: `request_count` and `consumer_status` were merged into http\\_requests\\_total.\n\nIf the `per_consumer` config is set to `false`, the `consumer` label will be empty. If the `per_consumer` config is `true`, the `consumer` label will be filled.",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: Removed the following metric: `http_consumer_status`",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: New metrics: \n- `session_duration_ms`: monitoring stream connections.\n- `node_info`: Single gauge set to 1 that outputs the node’s ID and Kong Gateway version.",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: `session_duration_ms`: monitoring stream connections.",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: `node_info`: Single gauge set to 1 that outputs the node’s ID and Kong Gateway version.",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: `http_requests_total` has a new label, `source`. It can be set to `exit`, `error`, or `service`.",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: All memory metrics have a new label: `node_id`.",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: Updated the Grafana dashboard that comes packaged with Kong",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**StatsD**: **Newly open-sourced plugin capabilities** : All capabilities of the StatsD Advanced plugin are now bundled in the [StatsD](/plugins/statsd) plugin.[#9046](https://github.com/Kong/kong/pull/9046)",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**Zipkin**: Added support for including the HTTP path in the span name with the`http_span_name` configuration parameter.[#8150](https://github.com/Kong/kong/pull/8150)",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "**Zipkin**: Added support for socket connect and send/read timeouts through the `connect_timeout`, `send_timeout`, and `read_timeout` configuration parameters. This can help mitigate`ngx.timer` saturation when upstream collectors are unavailable or slow.[#8735](https://github.com/Kong/kong/pull/8735)",
      "type": "feature",
      "scope": "Plugin"
    },
    {
      "message": "You can now configure `openresty_path` to allow developers and operators to specify the OpenResty installation to use when running Kong Gateway, instead of using the system-installed OpenResty.[#8412](https://github.com/Kong/kong/pull/8412)",
      "type": "feature",
      "scope": "Configuration"
    },
    {
      "message": "Added `ipv6only` to listen options `admin_listen`, `proxy_listen`, and `stream_listen`.[#9225](https://github.com/Kong/kong/pull/9225)",
      "type": "feature",
      "scope": "Configuration"
    },
    {
      "message": "Added `so_keepalive` to listen options `admin_listen`, `proxy_listen`, and `stream_listen`.[#9225](https://github.com/Kong/kong/pull/9225)",
      "type": "feature",
      "scope": "Configuration"
    },
    {
      "message": "Add LMDB DB-less configuration persistence and removed the JSON-based configuration cache for faster startup time.[#8670](https://github.com/Kong/kong/pull/8670)",
      "type": "feature",
      "scope": "Configuration"
    },
    {
      "message": "`nginx_events_worker_connections=auto` now has a lower bound of 1024.[#9276](https://github.com/Kong/kong/pull/9276)",
      "type": "feature",
      "scope": "Configuration"
    },
    {
      "message": "`nginx_main_worker_rlimit_nofile=auto` now has a lower bound of 1024.[#9276](https://github.com/Kong/kong/pull/9276)",
      "type": "feature",
      "scope": "Configuration"
    },
    {
      "message": "Added new PDK function: `kong.request.get_start_time()`. This function returns the request start time, in Unix epoch milliseconds.[#8688](https://github.com/Kong/kong/pull/8688)",
      "type": "feature",
      "scope": "PDK"
    },
    {
      "message": "The function `kong.db.*.cache_key()` now falls back to `.id` if nothing from `cache_key` is found.[#8553](https://github.com/Kong/kong/pull/8553)",
      "type": "feature",
      "scope": "PDK"
    },
    {
      "message": "Kong Manager does not currently support the following features: \n- Secrets management\n- Plugin ordering\n- Expression-based routing",
      "type": "known-issues",
      "scope": "Core"
    },
    {
      "message": "Blue-green migration from 2.8.x (and below) to 3.0.x is not supported. \n- This is a known issue planned to be fixed in the next 2.8 release. If this is a requirement for upgrading, Kong operators should upgrade to that version before beginning a upgrade to 3.0.0.0.\n- See [Upgrade Kong Gateway](https://docs.konghq.com/gateway/latest/upgrade/) for more details.",
      "type": "known-issues",
      "scope": "Core"
    },
    {
      "message": "OpenTracing: There is an issue with `nginx-opentracing` in this release, so it is not recommended to upgrade yet if you are an OpenTracing user. This will be rectified in an upcoming patch/minor release.",
      "type": "known-issues",
      "scope": "Core"
    },
    {
      "message": "The Kong Gateway FIPS package is not currently compatible with SSL connections to PostgreSQL.",
      "type": "known-issues",
      "scope": "Core"
    },
    {
      "message": "Deprecated and stopped producing Amazon Linux 1 containers and packages. Amazon Linux 1 [reached end-of-life on December 31, 2020](https://aws.amazon.com/blogs/aws/update-on-amazon-linux-ami-end-of-life).[Kong/docs.konghq.com #3966](https://github.com/Kong/docs.konghq.com/pull/3966)",
      "type": "breaking_change",
      "scope": "deployment"
    },
    {
      "message": "Deprecated and stopped producing Debian 8 (Jessie) containers and packages. Debian 8 reached end-of-life in June 30, 2020.[Kong/kong-build-tools #448](https://github.com/Kong/kong-build-tools/pull/448)",
      "type": "breaking_change",
      "scope": "deployment"
    },
    {
      "message": "As of 3.0, Kong Gateway’s schema library’s `process_auto_fields` function will not make deep copies of data that is passed to it when the given context is `select`. This was done to avoid excessive deep copying of tables where we believe the data most of the time comes from a driver like `pgmoon` or `lmdb`.\n\nIf a custom plugin relied on `process_auto_fields` not overriding the given table, it must make its own copy before passing it to the function now.[#8796](https://github.com/Kong/kong/pull/8796)",
      "type": "breaking_change",
      "scope": "Core"
    },
    {
      "message": "The deprecated `shorthands` field in Kong plugin or DAO schemas was removed in favor of the typed `shorthand_fields`. If your custom schemas still use `shorthands`, you need to update them to use `shorthand_fields`.[#8815](https://github.com/Kong/kong/pull/8815)",
      "type": "breaking_change",
      "scope": "Core"
    },
    {
      "message": "The support for `legacy = true/false` attribute was removed from Kong schemas and Kong field schemas.[#8958](https://github.com/Kong/kong/pull/8958)",
      "type": "breaking_change",
      "scope": "Core"
    },
    {
      "message": "The deprecated alias of `Kong.serve_admin_api` was removed. If your custom Nginx templates still use it, change it to `Kong.admin_content`.[#8815](https://github.com/Kong/kong/pull/8815)",
      "type": "breaking_change",
      "scope": "Core"
    },
    {
      "message": "The Kong singletons module `kong.singletons` was removed in favor of the PDK `kong.*`.[#8874](https://github.com/Kong/kong/pull/8874)",
      "type": "breaking_change",
      "scope": "Core"
    },
    {
      "message": "The data plane configuration cache was removed. Configuration persistence is now done automatically with LMDB.[#8704](https://github.com/Kong/kong/pull/8704)",
      "type": "breaking_change",
      "scope": "Core"
    },
    {
      "message": "`ngx.ctx.balancer_address` was removed in favor of `ngx.ctx.balancer_data`.[#9043](https://github.com/Kong/kong/pull/9043)",
      "type": "breaking_change",
      "scope": "Core"
    },
    {
      "message": "The normalization rules for `route.path` have changed. Kong Gateway now stores the unnormalized path, but the regex path always pattern-matches with the normalized URI. Previously, Kong Gateway replaced percent-encoding in the regex path pattern to ensure different forms of URI matches. That is no longer supported. Except for the reserved characters defined in[rfc3986](https://datatracker.ietf.org/doc/html/rfc3986#section-2.2), write all other characters without percent-encoding.[#9024](https://github.com/Kong/kong/pull/9024)",
      "type": "breaking_change",
      "scope": "Core"
    },
    {
      "message": "Kong Gateway no longer uses a heuristic to guess whether a `route.path` is a regex pattern. From 3.0 onward, all regex paths must start with the `\"~\"` prefix, and all paths that don’t start with `\"~\"` will be considered plain text. The migration process should automatically convert the regex paths when upgrading from 2.x to 3.0.[#9027](https://github.com/Kong/kong/pull/9027)",
      "type": "breaking_change",
      "scope": "Core"
    },
    {
      "message": "Bumped the version number (`_format_version`) of declarative configuration to `3.0` for changes on `route.path`. Declarative configurations using older versions are upgraded to `3.0` during migrations.\n\n{:.important}\n> **Do not sync (`deck sync`) declarative configuration files from 2.8 or earlier to 3.0.** Old configuration files will overwrite the configuration and create compatibility issues. To grab the updated configuration, `deck dump` the 3.0 file after migrations are completed.\n\n[#9078](https://github.com/Kong/kong/pull/9078)",
      "type": "breaking_change",
      "scope": "Core"
    },
    {
      "message": "Tags may now contain space characters.[#9143](https://github.com/Kong/kong/pull/9143)",
      "type": "breaking_change",
      "scope": "Core"
    },
    {
      "message": "Support for the `nginx-opentracing` module is deprecated as of `3.0` and will be removed from Kong in `4.0` (see the [Known Limitations](#known-limitations) section for additional information).",
      "type": "breaking_change",
      "scope": "Core"
    },
    {
      "message": "We removed regex [look-around](https://www.regular-expressions.info/lookaround.html) and [backreferences](https://www.regular-expressions.info/backref.html) support in the the atc-router. These are rarely used features and removing support for them improves the speed of our regex matching. If your current regexes use look-around or backreferences you will receive an error when attempting to start Kong, showing exactly what regex is incompatible. Users can either switch to the `traditional` router flavor or change the regex to remove look-around / backreferences.",
      "type": "breaking_change",
      "scope": "Core"
    },
    {
      "message": "The Admin API endpoint `/vitals/reports` has been removed.",
      "type": "breaking_change",
      "scope": "Admin API"
    },
    {
      "message": "`POST` requests on `/targets` endpoints are no longer able to update existing entities. They are only able to create new ones.[#8596](https://github.com/Kong/kong/pull/8596),[#8798](https://github.com/Kong/kong/pull/8798). If you have scripts that use`POST` requests to modify `/targets`, change them to `PUT`requests to the appropriate endpoints before updating to Kong Gateway 3.0.",
      "type": "breaking_change",
      "scope": "Admin API"
    },
    {
      "message": "Insert and update operations on duplicated targets return a `409` error.[#8179](https://github.com/Kong/kong/pull/8179),[#8768](https://github.com/Kong/kong/pull/8768)",
      "type": "breaking_change",
      "scope": "Admin API"
    },
    {
      "message": "The list of reported plugins available on the server now returns a table of metadata per plugin instead of a boolean `true`.[#8810](https://github.com/Kong/kong/pull/8810)",
      "type": "breaking_change",
      "scope": "Admin API"
    },
    {
      "message": "The `kong.request.get_path()` PDK function now performs path normalization on the string that is returned to the caller. The raw, non-normalized version of the request path can be fetched via `kong.request.get_raw_path()`.[#8823](https://github.com/Kong/kong/pull/8823)",
      "type": "breaking_change",
      "scope": "PDK"
    },
    {
      "message": "`pdk.response.set_header()`, `pdk.response.set_headers()`, `pdk.response.exit()` now ignore and emit warnings for manually set `Transfer-Encoding` headers.[#8698](https://github.com/Kong/kong/pull/8698)",
      "type": "breaking_change",
      "scope": "PDK"
    },
    {
      "message": "The PDK is no longer versioned.[#8585](https://github.com/Kong/kong/pull/8585)",
      "type": "breaking_change",
      "scope": "PDK"
    },
    {
      "message": "The JavaScript PDK now returns `Uint8Array` for `kong.request.getRawBody`,`kong.response.getRawBody`, and `kong.service.response.getRawBody`. The Python PDK returns `bytes` for `kong.request.get_raw_body`,`kong.response.get_raw_body`, and `kong.service.response.get_raw_body`. Previously, these functions returned strings.[#8623](https://github.com/Kong/kong/pull/8623)",
      "type": "breaking_change",
      "scope": "PDK"
    },
    {
      "message": "The `go_pluginserver_exe` and `go_plugins_dir` directives are no longer supported. [#8552](https://github.com/Kong/kong/pull/8552). If you are using [Go plugin server](https://github.com/Kong/go-pluginserver), migrate your plugins to use the [Go PDK](https://github.com/Kong/go-pdk) before upgrading.",
      "type": "breaking_change",
      "scope": "PDK"
    },
    {
      "message": "DAOs in plugins must be listed in an array, so that their loading order is explicit. Loading them in a hash-like table is no longer supported.[#8988](https://github.com/Kong/kong/pull/8988): ",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "Plugins MUST now have a valid `PRIORITY` (integer) and `VERSION` (“x.y.z” format) field in their `handler.lua` file, otherwise the plugin will fail to load.[#8836](https://github.com/Kong/kong/pull/8836): ",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "The old `kong.plugins.log-serializers.basic` library was removed in favor of the PDK function `kong.log.serialize`. Upgrade your plugins to use the PDK.[#8815](https://github.com/Kong/kong/pull/8815): ",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "The support for deprecated legacy plugin schemas was removed. If your custom plugins still use the old (`0.x era`) schemas, you are now forced to upgrade them.[#8815](https://github.com/Kong/kong/pull/8815): ",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "Updated the priority for some plugins.: `acme` changed from `1007` to `1705`",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "Updated the priority for some plugins.: `basic-auth` changed from `1001` to `1100`",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "Updated the priority for some plugins.: `canary` changed from `13` to `20`",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "Updated the priority for some plugins.: `degraphql` changed from `1005` to `1500`",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "Updated the priority for some plugins.: `graphql-proxy-cache-advanced` changed from `100` to `99`",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "Updated the priority for some plugins.: `hmac-auth` changed from `1000` to `1030`",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "Updated the priority for some plugins.: `jwt` changed from `1005` to `1450`",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "Updated the priority for some plugins.: `jwt-signer` changed from `999` to `1020`.",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "Updated the priority for some plugins.: `key-auth` changed from `1003` to `1250`",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "Updated the priority for some plugins.: `key-auth-advanced` changed from `1003` to `1250`",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "Updated the priority for some plugins.: `ldap-auth` changed from `1002` to `1200`",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "Updated the priority for some plugins.: `ldap-auth-advanced` changed from `1002` to `1200`",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "Updated the priority for some plugins.: `mtls-auth` changed from `1006` to `1600`",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "Updated the priority for some plugins.: `oauth2` changed from `1004` to `1400`",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "Updated the priority for some plugins.: `openid-connect` changed from `1000` to `1050`",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "Updated the priority for some plugins.: `rate-limiting` changed from `901` to `910`",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "Updated the priority for some plugins.: `rate-limiting-advanced` changed from `902` to `910`",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "Updated the priority for some plugins.: `route-by-header` changed from `2000` to `850`",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "Updated the priority for some plugins.: `route-transformer-advanced` changed from `800` to `780`",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "Updated the priority for some plugins.: `pre-function` changed from `+inf` to `1000000`",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "Updated the priority for some plugins.: `vault-auth` changed from `1003` to `1350`",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "Kong plugins no longer support `CREDENTIAL_USERNAME` (`X-Credential-Username`). Use the constant `CREDENTIAL_IDENTIFIER` (`X-Credential-Identifier`) when setting the upstream headers for a credential.[#8815](https://github.com/Kong/kong/pull/8815): ",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "**ACL**: Removed the deprecated `blacklist` and `whitelist` configuration parameters. [#8560](https://github.com/Kong/kong/pull/8560)",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "**ACME**: The default value of the `auth_method` configuration parameter is now `token`.",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "**AWS Lambda**: The AWS region is now required. You can set it through the plugin configuration with the `aws_region` field parameter, or with environment variables.",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "**AWS Lambda**: The plugin now allows `host` and `aws_region` fields to be set at the same time, and always applies the SigV4 signature.[#8082](https://github.com/Kong/kong/pull/8082)",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "**HTTP Log**: The `headers` field now only takes a single string per header name, where it previously took an array of values.[#6992](https://github.com/Kong/kong/pull/6992)",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "**JWT**: The authenticated JWT is no longer put into the nginx context (`ngx.ctx.authenticated_jwt_token`). Custom plugins which depend on that value being set under that name must be updated to use Kong’s shared context instead (`kong.ctx.shared.authenticated_jwt_token`) before upgrading to 3.0.",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: High cardinality metrics are now disabled by default.",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: Decreased performance penalty to proxy traffic when collecting metrics.",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: The following metric names were adjusted to add units to standardize where possible: \n- `http_status` to `http_requests_total`.\n- \n\n`latency` to `kong_request_latency_ms` (HTTP), `kong_upstream_latency_ms`, `kong_kong_latency_ms`, and `session_duration_ms` (stream).\n\nKong latency and upstream latency can operate at orders of different magnitudes. Separate these buckets to reduce memory overhead.\n\n- `kong_bandwidth` to `kong_bandwidth_bytes`.\n- `nginx_http_current_connections` and `nginx_stream_current_connections` were merged into to `nginx_connections_total`.\n- \n\n`request_count` and `consumer_status` were merged into `http_requests_total`.\n\nIf the `per_consumer` config is set to `false`, the `consumer` label will be empty. If the `per_consumer` config is `true`, the `consumer` label will be filled.",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: `http_status` to `http_requests_total`.",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: `latency` to `kong_request_latency_ms` (HTTP), `kong_upstream_latency_ms`, `kong_kong_latency_ms`, and `session_duration_ms` (stream).\n\nKong latency and upstream latency can operate at orders of different magnitudes. Separate these buckets to reduce memory overhead.",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: `kong_bandwidth` to `kong_bandwidth_bytes`.",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: `nginx_http_current_connections` and `nginx_stream_current_connections` were merged into to `nginx_connections_total`.",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: `request_count` and `consumer_status` were merged into `http_requests_total`.\n\nIf the `per_consumer` config is set to `false`, the `consumer` label will be empty. If the `per_consumer` config is `true`, the `consumer` label will be filled.",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: Removed the following metric: `http_consumer_status`",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: New metrics: \n- `session_duration_ms`: monitoring stream connections.\n- `node_info`: Single gauge set to 1 that outputs the node’s ID and Kong Gateway version.",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: `session_duration_ms`: monitoring stream connections.",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: `node_info`: Single gauge set to 1 that outputs the node’s ID and Kong Gateway version.",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: `http_requests_total` has a new label, `source`. It can be set to `exit`, `error`, or `service`.",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: All memory metrics have a new label: `node_id`.",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: Updated the Grafana dashboard that comes packaged with Kong[#8712](https://github.com/Kong/kong/pull/8712)",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "**Prometheus**: The plugin doesn’t export status codes, latencies, bandwidth and upstream health check metrics by default. They can still be turned on manually by setting `status_code_metrics`,`lantency_metrics`, `bandwidth_metrics` and `upstream_health_metrics` respectively.[#9028](https://github.com/Kong/kong/pull/9028)",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "****Pre-function**: Removed the deprecated `config.functions` configuration parameter from the Serverless Functions plugins’ schemas. Use the `config.access` phase instead.[#8559](https://github.com/Kong/kong/pull/8559)",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "**StatsD**: Any metric name that is related to a service now has a `service.` prefix: `kong.service.<service_identifier>.request.count`. \n- The metric `kong.<service_identifier>.request.status.<status>` has been renamed to `kong.service.<service_identifier>.status.<status>`.\n- The metric `kong.<service_identifier>.user.<consumer_identifier>.request.status.<status>` has been renamed to `kong.service.<service_identifier>.user.<consumer_identifier>.status.<status>`.",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "**StatsD**: The metric `kong.<service_identifier>.request.status.<status>` has been renamed to `kong.service.<service_identifier>.status.<status>`.",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "**StatsD**: The metric `kong.<service_identifier>.user.<consumer_identifier>.request.status.<status>` has been renamed to `kong.service.<service_identifier>.user.<consumer_identifier>.status.<status>`.",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "**StatsD**: The metric `*.status.<status>.total` from metrics `status_count` and `status_count_per_user` has been removed.",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "**Rate Limiting**: The default policy is now local for all deployment modes.[#9344](https://github.com/Kong/kong/pull/9344)",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "**Deprecated** : The StatsD Advanced plugin has been deprecated and will be removed in 4.0. All capabilities are now available in the [StatsD](/plugins/statsd/) plugin.",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "**Proxy Cache**: These plugins don’t store response data in `ngx.ctx.proxy_cache_hit` anymore. Logging plugins that need the response data must now read it from `kong.ctx.shared.proxy_cache_hit`.[#8607](https://github.com/Kong/kong/pull/8607)",
      "type": "breaking_change",
      "scope": "Plugin"
    },
    {
      "message": "The Kong constant `CREDENTIAL_USERNAME` with the value of `X-Credential-Username` has been removed.[#8815](https://github.com/Kong/kong/pull/8815)",
      "type": "breaking_change",
      "scope": "Configuration"
    },
    {
      "message": "The default value of `lua_ssl_trusted_certificate` has changed to `system`[#8602](https://github.com/Kong/kong/pull/8602) to automatically load the trusted CA list from the system CA store.",
      "type": "breaking_change",
      "scope": "Configuration"
    },
    {
      "message": "It is no longer possible to use a `.lua` format to import a declarative configuration file from the `kong`CLI tool. Only JSON and YAML formats are supported. If your update procedure with Kong Gateway involves executing `kong config db_import config.lua`, convert the `config.lua` file into a `config.json` or `config.yml` file before upgrading.[#8898](https://github.com/Kong/kong/pull/8898)",
      "type": "breaking_change",
      "scope": "Configuration"
    },
    {
      "message": "The data plane config cache mechanism and its related configuration options (`data_plane_config_cache_mode` and `data_plane_config_cache_path`) have been removed in favor of LMDB.",
      "type": "breaking_change",
      "scope": "Configuration"
    },
    {
      "message": "The migration helper library (mostly used for Cassandra migrations) is no longer supplied with Kong Gateway.[#8781](https://github.com/Kong/kong/pull/8781)",
      "type": "breaking_change",
      "scope": "migrations"
    },
    {
      "message": "PostgreSQL migrations can now have an `up_f` part like Cassandra migrations, designating a function to call. The `up_f` part is invoked after the `up` part has been executed against the database for both PostgreSQL and Cassandra.",
      "type": "breaking_change",
      "scope": "migrations"
    },
    {
      "message": "Fixed an issue with keyring encryption, where the control plane would crash if any errors occurred during the initialization of the [keyring module](https://docs.konghq.com/gateway/latest/kong-enterprise/db-encryption/).",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "Fixed an issue where the keyring module was not decrypting keys after a soft reload.",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "Fixed pagination issues: \n- Fixed a consumer pagination issue.\n- Fixed an issue that appeared when loading the second page while iterating over a foreign key field using the DAO.[#9255](https://github.com/Kong/kong/pull/9255)",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "Fixed service route update failures that occurred after restarting a control plane.",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "**Vitals** : \n- Disabled `phone_home` for `anonymous_reports` on the data plane.\n- The Kong Gateway version information is now sent in the telemetry request query parameter.",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "**Kong Manager** : \n- Fixed the workspace dashboard’s loading state. Previously, a dashboard with no request data and an existing service would still prompt users to add a service.\n- Fixed an issue where Kong Manager allowed selection of metrics not supported by the Datadog plugin.\n- Fixed the values accepted for upstream configuration in Kong Manager. Previously, fields that were supposed to accept decimals would only accept whole numbers.\n- Fixed an issue where you couldn’t save or update `pre-function` plugin configuration when the updated value contained a comma (`,`).\n- The service name field on the Service Contracts page now correctly shows the service display name. Previously, it showed the service ID.\n- Fixed an issue where, after updating the CA certificate, the page wouldn’t return to the certificate view.\n- Fixed an issue where the port was missing from the service URL on the service overview page.\n- Fixed an issue where switching between workspace dashboard pages would not update the Dev Portal URL.\n- Fixed issues with plugins: \n  - The Exit Transformer plugin can now load Lua functions added through Kong Manager.\n  - The CORS plugin now treats regexes properly for the `config.origins` field.\n  - The Datadog plugin now accepts an array for the `tags` field. Previously, it was incorrectly expecting a string.\n\n- Fixed an `HTTP 500` error that occurred when sorting routes by the **Hosts** column, then clicking **Next** on a paginated listing.\n- Fixed an issue that prevented developer role assignments from displaying in Kong Manager. When viewing a role under the Permissions tab in the Dev Portal section, the list of developers wouldn’t update when a new developer was added. Kong Manager was constructing the wrong URL when retrieving Dev Portal assignees.\n- Fixed an issue where admins couldn’t switch workspaces if they didn’t have an roles in the default workspace.\n- Fixed a display issue with Dev Portal settings in Kong Manager.\n- Improved the error that appeared when trying to view admin roles without permissions for the resource. Instead of displaying `404 workspace not found`, the error now informs the user that they don’t have access to view roles.",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "Fixed an issue where the data plane would reload and lose its license after an Nginx reload.",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "Fixed issues in dependencies:\n\n- `kong-gql`: Fixed variable definitions to handle non-nullable/list-type variables correctly.\n- `lua-resty-openssl-aux-module`: Fixed an issue with getting `SSL_CTX` from a request.",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "The schema validator now correctly converts `null` from declarative configurations to `nil`.[#8483](https://github.com/Kong/kong/pull/8483)",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "Kong now reschedules router and plugin iterator timers only after finishing the previous execution, avoiding unnecessary concurrent executions.[#8567](https://github.com/Kong/kong/pull/8567)",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "External plugins now handle returned JSON with null member correctly.[#8611](https://github.com/Kong/kong/pull/8611)",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "Fixed an issue where the address of an environment variable could change but the code didn’t check that it was fixed after init.[#8581](https://github.com/Kong/kong/pull/8581)",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "Fixed an issue where the Go plugin server instance would not be updated after a restart.[#8547](https://github.com/Kong/kong/pull/8547)",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "Fixed an issue on trying to reschedule the DNS resolving timer when Kong was being reloaded.[#8702](https://github.com/Kong/kong/pull/8702)",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "The private stream API has been rewritten to allow for larger message payloads.[#8641](https://github.com/Kong/kong/pull/8641)",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "Fixed an issue that the client certificate sent to the upstream was not updated when using the `PATCH` method.[#8934](https://github.com/Kong/kong/pull/8934)",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "Fixed an issue where the control plane and wRPC module interaction would cause Kong to crash when calling `export_deflated_reconfigure_payload` without a `pcall`.[#8668](https://github.com/Kong/kong/pull/8668)",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "Moved all `.proto` files to `/usr/local/kong/include` and ordered by priority.[#8914](https://github.com/Kong/kong/pull/8914)",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "Fixed an issue that caused unexpected 404 errors when creating or updating configs with invalid options.[#8831](https://github.com/Kong/kong/pull/8831)",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "Fixed an issue that caused crashes when calling some PDK APIs.[#8604](https://github.com/Kong/kong/pull/8604)",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "Fixed an issue that caused crashes when go PDK calls returned arrays.[#8891](https://github.com/Kong/kong/pull/8891)",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "Plugin servers now shutdown gracefully when Kong exits.[#8923](https://github.com/Kong/kong/pull/8923)",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "CLI now prompts with `[y/n]` instead of `[Y/n]`, as it does not take `y` as default.[#9114](https://github.com/Kong/kong/pull/9114)",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "Improved the error message that appears when Kong can’t connect to Cassandra on init.[#8847](https://github.com/Kong/kong/pull/8847)",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "Fixed an issue where the Vault subschema wasn’t loaded in the `off` strategy.[#9174](https://github.com/Kong/kong/pull/9174)",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "The schema now runs select transformations before `process_auto_fields`.[#9049](https://github.com/Kong/kong/pull/9049)",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "Fixed an issue where Kong Gateway would use too many timers to keep track of upstreams when `worker_consistency = eventual`.[#8694](https://github.com/Kong/kong/pull/8694),[#8858](https://github.com/Kong/kong/pull/8858)",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "Fixed an issue where it wasn’t possible to set target status using only a hostname for targets set only by their hostname.[#8797](https://github.com/Kong/kong/pull/8797)",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "Fixed an issue where cache entries of some entities were not being properly invalidated after a cascade delete.[#9261](https://github.com/Kong/kong/pull/9261)",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "Running `kong start` when Kong Gateway is already running no longer overwrites the existing `.kong_env` file [#9254](https://github.com/Kong/kong/pull/9254)",
      "type": "bugfix",
      "scope": "Core"
    },
    {
      "message": "The Admin API now supports `HTTP/2` when requesting `/status`.[#8690](https://github.com/Kong/kong/pull/8690)",
      "type": "bugfix",
      "scope": "Admin API"
    },
    {
      "message": "Fixed an issue where the Admin API didn’t display `Allow` and `Access-Control-Allow-Methods` headers with `OPTIONS` requests.",
      "type": "bugfix",
      "scope": "Admin API"
    },
    {
      "message": "Plugins with colliding priorities have now deterministic sorting based on their name.[#8957](https://github.com/Kong/kong/pull/8957): ",
      "type": "bugfix",
      "scope": "Plugin"
    },
    {
      "message": "External plugins: Kong Gateway now handles logging better when a plugin instance loses the `instances_id` in an event handler.[#8652](https://github.com/Kong/kong/pull/8652): ",
      "type": "bugfix",
      "scope": "Plugin"
    },
    {
      "message": "**ACME**: The default value of the `auth_method` configuration parameter is now set to `token`.[#8565](https://github.com/Kong/kong/pull/8565)",
      "type": "bugfix",
      "scope": "Plugin"
    },
    {
      "message": "**ACME**: Added a cache for `domains_matcher`.[#9048](https://github.com/Kong/kong/pull/9048)",
      "type": "bugfix",
      "scope": "Plugin"
    },
    {
      "message": "**HTTP Log**: Log output is now restricted to the workspace the plugin is running in. Previously, the plugin could log requests from outside of its workspace.",
      "type": "bugfix",
      "scope": "Plugin"
    },
    {
      "message": "**AWS Lambda**: Removed the deprecated `proxy_scheme` field from the plugin’s schema.[#8566](https://github.com/Kong/kong/pull/8566)",
      "type": "bugfix",
      "scope": "Plugin"
    },
    {
      "message": "**AWS Lambda**: Changed the path from `request_uri` to `upstream_uri` to fix an issue where the URI could not follow a rule defined by the Request Transformer plugin.[#9058](https://github.com/Kong/kong/pull/9058) [#9129](https://github.com/Kong/kong/pull/9129)",
      "type": "bugfix",
      "scope": "Plugin"
    },
    {
      "message": "**Forward Proxy**: Fixed a proxy authentication error caused by incorrect base64 encoding.",
      "type": "bugfix",
      "scope": "Plugin"
    },
    {
      "message": "**Forward Proxy**: Use lowercase when overwriting the Nginx request host header.",
      "type": "bugfix",
      "scope": "Plugin"
    },
    {
      "message": "**Forward Proxy**: The plugin now allows multi-value response headers.",
      "type": "bugfix",
      "scope": "Plugin"
    },
    {
      "message": "**gRPC Gateway**: Fixed the handling of boolean fields from URI arguments.[#9180](https://github.com/Kong/kong/pull/9180)",
      "type": "bugfix",
      "scope": "Plugin"
    },
    {
      "message": "**HMAC Authentication**: Removed deprecated signature format using `ngx.var.uri`.[#8558](https://github.com/Kong/kong/pull/8558)",
      "type": "bugfix",
      "scope": "Plugin"
    },
    {
      "message": "**LDAP Authentication**: Refactored ASN.1 parser using OpenSSL API through FFI.[#8663](https://github.com/Kong/kong/pull/8663)",
      "type": "bugfix",
      "scope": "Plugin"
    },
    {
      "message": "**LDAP Authentication Advanced**: Fixed an issue where Kong Manager LDAP authentication failed when `base_dn` was the domain root.",
      "type": "bugfix",
      "scope": "Plugin"
    },
    {
      "message": "**Mocking**: Fixed an issue where `204` responses were not handled correctly and you would see the following error:`\"No examples exist in API specification for this resource\"`.",
      "type": "bugfix",
      "scope": "Plugin"
    },
    {
      "message": "**Mocking**: `204` response specs now support empty content elements.",
      "type": "bugfix",
      "scope": "Plugin"
    },
    {
      "message": "**OpenID Connect**: Fixed an issue with `kong_oauth2` consumer mapping.",
      "type": "bugfix",
      "scope": "Plugin"
    },
    {
      "message": "**Rate Limiting**: Fixed a PostgreSQL deadlock issue that occurred when the `cluster` policy was used with two or more metrics (for example, `second` and `day`.)[#8968](https://github.com/Kong/kong/pull/8968)",
      "type": "bugfix",
      "scope": "Plugin"
    },
    {
      "message": "**Rate Limiting Advanced**: Fixed error handling when calling `get_window` and added more buffer on the window reserve.",
      "type": "bugfix",
      "scope": "Plugin"
    },
    {
      "message": "**Rate Limiting Advanced**: Fixed error handling for plugin strategy configuration when in hybrid or DB-less mode and strategy is set to `cluster`.",
      "type": "bugfix",
      "scope": "Plugin"
    },
    {
      "message": "****Pre-function**: Fixed a problem that could cause a crash.[#9269](https://github.com/Kong/kong/pull/9269)",
      "type": "bugfix",
      "scope": "Plugin"
    },
    {
      "message": "**Syslog**: The `conf.facility` default value is now set to `user`.[#8564](https://github.com/Kong/kong/pull/8564)",
      "type": "bugfix",
      "scope": "Plugin"
    },
    {
      "message": "**Zipkin**: Fixed the balancer spans’ duration to include the connection time from Nginx to the upstream.[#8848](https://github.com/Kong/kong/pull/8848)",
      "type": "bugfix",
      "scope": "Plugin"
    },
    {
      "message": "**Zipkin**: Corrected the calculation of the header filter start time.[#9230](https://github.com/Kong/kong/pull/9230)",
      "type": "bugfix",
      "scope": "Plugin"
    },
    {
      "message": "**Zipkin**: Made the plugin compatible with the latest [Jaeger header spec](https://www.jaegertracing.io/docs/1.29/client-libraries/#tracespan-identity), which makes `parent_id` optional.[#8352](https://github.com/Kong/kong/pull/8352)",
      "type": "bugfix",
      "scope": "Plugin"
    },
    {
      "message": "The cluster listener now uses the value of `admin_error_log` for its log file instead of `proxy_error_log`.[#8583](https://github.com/Kong/kong/pull/8583)",
      "type": "bugfix",
      "scope": "Clustering"
    },
    {
      "message": "Fixed a typo in some business logic that checks the Kong role before setting a value in cache at startup. [#9060](https://github.com/Kong/kong/pull/9060)",
      "type": "bugfix",
      "scope": "Clustering"
    },
    {
      "message": "Fixed an issue in hybrid mode where, if a service was set to `enabled: false` and that service had a route with an enabled plugin, any new data planes would receive empty configuration.[#8816](https://github.com/Kong/kong/pull/8816)",
      "type": "bugfix",
      "scope": "Clustering"
    },
    {
      "message": "Localized `config_version` to avoid a race condition from the new yielding config loading code.[#8188](https://github.com/Kong/kong/pull/8818)",
      "type": "bugfix",
      "scope": "Clustering"
    },
    {
      "message": "`kong.response.get_source()` now returns an error instead of an exit when plugin throws a runtime exception in the access phase.[#8599](https://github.com/Kong/kong/pull/8599)",
      "type": "bugfix",
      "scope": "PDK"
    },
    {
      "message": "`kong.tools.uri.normalize()` now escapes reserved and unreserved characters more accurately.[#8140](https://github.com/Kong/kong/pull/8140)",
      "type": "bugfix",
      "scope": "PDK"
    },
    {
      "message": "RFC3987 validation on route paths was removed, allowing operators to create a route with an invalid path URI like `/something|` which can not match any incoming request. This validation will be added back in a future release.",
      "type": "bugfix",
      "scope": "PDK"
    },
    {
      "message": "Bumped `openresty` from 1.19.9.1 to 1.21.4.1[#8850](https://github.com/Kong/kong/pull/8850)",
      "type": "dependency",
      "scope": "Core"
    },
    {
      "message": "Bumped `pgmoon` from 1.13.0 to 1.15.0[#8908](https://github.com/Kong/kong/pull/8908)[#8429](https://github.com/Kong/kong/pull/8429)",
      "type": "dependency",
      "scope": "Core"
    },
    {
      "message": "Bumped `openssl` from 1.1.1n to 1.1.1q[#9074](https://github.com/Kong/kong/pull/9074)[#8544](https://github.com/Kong/kong/pull/8544)[#8752](https://github.com/Kong/kong/pull/8752)[#8994](https://github.com/Kong/kong/pull/8994)",
      "type": "dependency",
      "scope": "Core"
    },
    {
      "message": "Bumped `resty.openssl` from 0.8.8 to 0.8.10[#8592](https://github.com/Kong/kong/pull/8592)[#8753](https://github.com/Kong/kong/pull/8753)[#9023](https://github.com/Kong/kong/pull/9023)",
      "type": "dependency",
      "scope": "Core"
    },
    {
      "message": "Bumped `inspect` from 3.1.2 to 3.1.3[#8589](https://github.com/Kong/kong/pull/8589)",
      "type": "dependency",
      "scope": "Core"
    },
    {
      "message": "Bumped `resty.acme` from 0.7.2 to 0.8.1[#8680](https://github.com/Kong/kong/pull/8680)[#9165](https://github.com/Kong/kong/pull/9165)",
      "type": "dependency",
      "scope": "Core"
    },
    {
      "message": "Bumped `luarocks` from 3.8.0 to 3.9.1[#8700](https://github.com/Kong/kong/pull/8700)[#9204](https://github.com/Kong/kong/pull/9204)",
      "type": "dependency",
      "scope": "Core"
    },
    {
      "message": "Bumped `luasec` from 1.0.2 to 1.2.0[#8754](https://github.com/Kong/kong/pull/8754)[#8754](https://github.com/Kong/kong/pull/9205)",
      "type": "dependency",
      "scope": "Core"
    },
    {
      "message": "Bumped `resty.healthcheck` from 1.5.0 to 1.6.1[#8755](https://github.com/Kong/kong/pull/8755)[#9018](https://github.com/Kong/kong/pull/9018)[#9150](https://github.com/Kong/kong/pull/9150)",
      "type": "dependency",
      "scope": "Core"
    },
    {
      "message": "Bumped `resty.cassandra` from 1.5.1 to 1.5.2[#8845](https://github.com/Kong/kong/pull/8845)",
      "type": "dependency",
      "scope": "Core"
    },
    {
      "message": "Bumped `penlight` from 1.12.0 to 1.13.1[#9206](https://github.com/Kong/kong/pull/9206)",
      "type": "dependency",
      "scope": "Core"
    },
    {
      "message": "Bumped `lua-resty-mlcache` from 2.5.0 to 2.6.0[#9287](https://github.com/Kong/kong/pull/9287)",
      "type": "dependency",
      "scope": "Core"
    },
    {
      "message": "Bumped `lodash` for Dev Portal from 4.17.11 to 4.17.21",
      "type": "dependency",
      "scope": "Core"
    },
    {
      "message": "Bumped `lodash` for Kong Manager from 4.17.15 to 4.17.21",
      "type": "dependency",
      "scope": "Core"
    }
  ],
  "kong-manager-ee": []
}