description: |
  Authenticate to a third-party service using Vault secrets.

extended_description: |
  Authenticate to a third-party service using Vault secrets. Refer to the [Vault documentation](/gateway/entities/vault/) for more information on how to set up and use Vault secrets.

  This example contains the following nodes:
  1. The node `STATIC_INPUTS` sets some static values that will be used as inputs to other nodes.
  2. The node `BUILD_HEADERS` fetches an API key from a Vault reference and injects it into the request headers that will be sent to the auth service.
  3. The node `AUTH_REQUEST` makes a POST request to the auth service.
  4. The node `UPSTREAM_AUTH_HEADER` composes an Authorization header from the access token received from the auth service and 
  adds it to the service request headers before proxying the request.


title: Authenticate to a third-party service using Vault secrets
weight: 900

requirements: 
  - You have configured a [Vault secret](/gateway/entities/vault/)

config:
  resources:
    vault:
      token: "{vault://my-vault/my-token}"

  nodes:
  - name: STATIC_INPUTS
    type: static
    values:
      headers:
        Content-Type: application/x-www-form-urlencoded
      body: grant_type=client_credentials

  - name: BUILD_HEADERS
    type: jq
    inputs:
      headers: STATIC_INPUTS.headers
      apikey: vault.token
    jq: |
      .headers * {
        "X-Api-Key": .apikey
      }

  - name: AUTH_REQUEST
    type: call
    inputs:
      headers: BUILD_HEADERS
      body: STATIC_INPUTS.body
    url: "https://my-token-service/auth-token"
    method: POST

  - name: UPSTREAM_AUTH_HEADER
    type: jq
    input: AUTH_REQUEST.body
    output: service_request.headers
    jq: |
      {
        Authorization: (.token_type + " " + .access_token)
      }

tools:
  - deck
  - admin-api
  - konnect-api
  - kic
  - terraform

min_version:
  gateway: '3.12'
