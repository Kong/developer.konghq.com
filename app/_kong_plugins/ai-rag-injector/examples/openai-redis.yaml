description: Configure the AI RAG Injector plugin to inject content to use Redis as vector database and the OpenAI text-embedding-3-large model for embedding.

extended_description: |
  Configure the AI RAG Injector plugin to inject content to use Redis as vector database and the OpenAI text-embedding-3-large model for embedding.

  {:.info}
  > If you use the `text-embedding-ada-002` as an embedding model, you must set a fixed dimension of `1536`, as required by the official model specification. Alternatively, use the `text-embedding-3-small` model, which supports dynamic dimensions and works without specifying a fixed value.

title: RAG injection with OpenAI and Redis

weight: 900

requirements:
  - "You have enabled the [AI Proxy](/plugins/ai-proxy/) or [AI Proxy Advanced](/plugins/ai-proxy-advanced/) plugin"
  - You have an OpenAI account
  - "A [Redis](https://redis.io/docs/latest/) instance."
  - "Port `6379`, or your custom Redis port is open and reachable from {{site.base_gateway}}."

variables:
  key:
    value: $OPENAI_API_KEY
    description: The API key to use to connect to OpenAI.
  redis:
    value: $REDIS_HOST
    description: The Redis server's host

config:
  inject_template: |
    Only use the following information surrounded by <RAG></RAG>to and your existing knowledge to provide the best possible answer to the user.
    <RAG><CONTEXT></RAG>
    User's question: <PROMPT>
  embeddings:
    auth:
      header_name: Authorization
      header_value: Bearer ${key}
    model:
      provider: openai
      name: text-embedding-3-large
  vectordb:
    strategy: redis
    redis:
      host: ${redis}
      port: 6379
    distance_metric: cosine
    dimensions: 76

tools:
  - deck
  - admin-api
  - konnect-api
  - kic
  - terraform

