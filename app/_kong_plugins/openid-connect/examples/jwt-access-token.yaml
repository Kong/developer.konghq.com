title: JWT access token authentication
description: |
  Configure the OpenID Connect plugin with JWT access token authentication.

  In this example, the plugin will only accept a bearer token sent in a query string, 
  but you can also set the `bearer_token_param_type` parameter to `body`, `header`, or any combination of these values.
  
  For a complete example of authenticating with a JWT access token using Keycloak, see the tutorial for [configuring OpenID Connect with JWT authentication](/how-to/configure-oidc-with-jwt-auth/).
  
  {% include_cached plugins/oidc/client-auth.md %}

weight: 897

requirements:
  - A configured identity provider (IdP)

config:
  issuer: ${issuer}
  client_id:
    - ${client-id}
  client_secret:
    - ${client-secret}
  client_auth:
    - client_secret_post
  auth_methods:
    - bearer
  bearer_token_param_type:
    - query

variables:
  issuer:
    value: $ISSUER
    description: |
      The issuer authentication URL for your IdP. 
      For example, if you're using Keycloak as your IdP, the issuer URL looks like this: `http://localhost:8080/realms/example-realm`
  client-id:
    value: $CLIENT_ID
    description: The client ID that the plugin uses when it calls authenticated endpoints of the IdP.
  client-secret:
    value: $CLIENT_SECRET
    description: The client secret needed to connect to your IdP.


tools:
  - deck
  - admin-api
  - konnect-api
  - kic
  - terraform
