description: 'Define reusable MCP tool specifications without serving them.'

title: 'Define reusable MCP tool specifications without serving them.'

extended_description: |
  Define reusable MCP tool specifications without serving them.

  AI MCP Proxy plugins with conversion-only mode does not serve requests themselves. They must be paired with a `listener` plugin that references their tags. For an example, see[listener](/plugins/ai-mcp-proxy/examples/conversion-only/) example for details.

  {:.info}
  > For this configuration to work properly, you need a [Service](/gateway/entities/service/#set-up-a-gateway-service) and a [Route](/gateway/entities/route/#set-up-a-route) with the following configuration:
  > ```yaml
  > services:
  > - name: mcp-service
  >   url: http://host.docker.internal:3000
  >   routes:
  >   - name: mcp-route
  >     paths:
  >     - /marketplace
  > ```

  Before using the [AI MCP Proxy](/plugins/ai-mcp-proxy/) plugin, youâ€™ll need an upstream HTTP API to expose.
  Use this mock API to test the plugin without relying on an external service; it simulates a small marketplace with sample users and orders exposed through `/marketplace/users` and `/marketplace/{userId}/orders` endpoints:

  ```bash
  curl -s -o api.js "https://gist.githubusercontent.com/subnetmarco/5ddb23876f9ce7165df17f9216f75cce/raw/a44a947d69e6f597465050cc595b6abf4db2fbea/api.js"
  npm install express
  node api.js
  ```

  This example uses [`config.tools.annotations.title`](/plugins/ai-mcp-proxy/reference/#schema--config-tools-annotations-title) to add a meaningful name to the tool to simplify human debugging.

weight: 900

requirements:
- "A running and exposed API"

config:
  mode: conversion-only
  tools:
  - description: Get users
    method: GET
    path: /marketplace/users
    annotations:
      title: get-users
    parameters:
    - name: id
      in: query
      required: false
      schema:
        type: string
      description: Optional user ID
  - description: Get orders for a user
    method: GET
    path: /marketplace/orders
    annotations:
      title: get-user-orders
    parameters:
    - name: userid
      in: query
      required: true
      schema:
        type: string
      description: User ID to filter orders
  max_request_body_size: 1048576

tags:
  - marketplace-tools

tools:
  - deck
  - admin-api
  - konnect-api
  - kic
  - terraform
