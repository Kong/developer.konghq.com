{
  "properties": {
    "config": {
      "shorthand_fields": {
        "redis_host": {
          "translate_backwards": [
            "redis",
            "host"
          ],
          "type": "string"
        },
        "redis_port": {
          "translate_backwards": [
            "redis",
            "port"
          ],
          "type": "integer"
        },
        "redis_password": {
          "translate_backwards": [
            "redis",
            "password"
          ],
          "type": "string",
          "minLength": 0
        },
        "redis_username": {
          "translate_backwards": [
            "redis",
            "username"
          ],
          "type": "string"
        },
        "redis_ssl": {
          "translate_backwards": [
            "redis",
            "ssl"
          ],
          "type": "boolean"
        },
        "redis_ssl_verify": {
          "translate_backwards": [
            "redis",
            "ssl_verify"
          ],
          "type": "boolean"
        },
        "redis_server_name": {
          "translate_backwards": [
            "redis",
            "server_name"
          ],
          "type": "string"
        },
        "redis_timeout": {
          "translate_backwards": [
            "redis",
            "timeout"
          ],
          "type": "integer"
        },
        "redis_database": {
          "translate_backwards": [
            "redis",
            "database"
          ],
          "type": "integer"
        }
      },
      "type": "object",
      "properties": {
        "second": {
          "minimum": 0,
          "type": "number",
          "description": "The number of HTTP requests that can be made per second."
        },
        "minute": {
          "minimum": 0,
          "type": "number",
          "description": "The number of HTTP requests that can be made per minute."
        },
        "hour": {
          "minimum": 0,
          "type": "number",
          "description": "The number of HTTP requests that can be made per hour."
        },
        "day": {
          "minimum": 0,
          "type": "number",
          "description": "The number of HTTP requests that can be made per day."
        },
        "month": {
          "minimum": 0,
          "type": "number",
          "description": "The number of HTTP requests that can be made per month."
        },
        "year": {
          "minimum": 0,
          "type": "number",
          "description": "The number of HTTP requests that can be made per year."
        },
        "limit_by": {
          "default": "consumer",
          "description": "The entity that is used when aggregating the limits.",
          "type": "string",
          "enum": [
            "consumer",
            "credential",
            "ip",
            "service",
            "header",
            "path",
            "consumer-group"
          ]
        },
        "header_name": {
          "description": "A string representing an HTTP header name.",
          "type": "string"
        },
        "path": {
          "description": "A string representing a URL path, such as /path/to/resource. Must start with a forward slash (/) and must not contain empty segments (i.e., two consecutive forward slashes).",
          "type": "string"
        },
        "policy": {
          "default": "local",
          "type": "string",
          "minLength": 0,
          "description": "The rate-limiting policies to use for retrieving and incrementing the limits.",
          "enum": [
            "local",
            "cluster",
            "redis"
          ]
        },
        "fault_tolerant": {
          "default": true,
          "type": "boolean",
          "description": "A boolean value that determines if the requests should be proxied even if Kong has troubles connecting a third-party data store. If `true`, requests will be proxied anyway, effectively disabling the rate-limiting function until the data store is working again. If `false`, then the clients will see `500` errors."
        },
        "redis": {
          "description": "Redis configuration",
          "properties": {
            "host": {
              "description": "A string representing a host name, such as example.com.",
              "type": "string"
            },
            "port": {
              "default": 6379,
              "minimum": 0,
              "maximum": 65535,
              "type": "integer",
              "description": "An integer representing a port number between 0 and 65535, inclusive."
            },
            "timeout": {
              "default": 2000,
              "minimum": 0,
              "maximum": 2147483646,
              "type": "integer",
              "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2."
            },
            "username": {
              "description": "Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to `default`.",
              "type": "string"
            },
            "password": {
              "type": "string",
              "minLength": 0,
              "description": "Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis."
            },
            "database": {
              "description": "Database to use for the Redis connection when using the `redis` strategy",
              "type": "integer",
              "default": 0
            },
            "ssl": {
              "description": "If set to true, uses SSL to connect to Redis.",
              "type": "boolean",
              "default": false
            },
            "ssl_verify": {
              "description": "If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure `lua_ssl_trusted_certificate` in `kong.conf` to specify the CA (or server) certificate used by your Redis server. You may also need to configure `lua_ssl_verify_depth` accordingly.",
              "type": "boolean",
              "default": false
            },
            "server_name": {
              "type": "string",
              "description": "A string representing an SNI (server name indication) value for TLS."
            }
          },
          "type": "object",
          "required": [

          ]
        },
        "hide_client_headers": {
          "default": false,
          "type": "boolean",
          "description": "Optionally hide informative response headers."
        },
        "error_code": {
          "default": 429,
          "minimum": 0,
          "type": "number",
          "description": "Set a custom error code to return when the rate limit is exceeded."
        },
        "error_message": {
          "default": "API rate limit exceeded",
          "type": "string",
          "description": "Set a custom error message to return when the rate limit is exceeded."
        },
        "sync_rate": {
          "default": -1,
          "type": "number",
          "description": "How often to sync counter data to the central data store. A value of -1 results in synchronous behavior."
        }
      },
      "required": [

      ]
    }
  },
  "required": [

  ]
}