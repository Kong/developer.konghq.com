{
  "properties": {
    "config": {
      "properties": {
        "cloud_context": {
          "description": "The cloud context - AWS Account ID, GCP Project ID, Azure Subscription or an appropriate value for on-prem",
          "type": "string"
        },
        "cloud_provider": {
          "description": "The cloud provider where Kong API Gateway is installed",
          "enum": [
            "AWS",
            "Azure",
            "GCP",
            "On-prem"
          ],
          "type": "string"
        },
        "cloud_region": {
          "description": "The cloud region (e.g \"us-east-1\")",
          "type": "string"
        },
        "cortex_api_key": {
          "description": "The collector Authorization key provided by the Cortex platform\nThis field is [encrypted](/gateway/keyring/).",
          "type": "string"
        },
        "http_endpoint": {
          "description": "The Cortex collector's endpoint URL\nThis field is [referenceable](/gateway/entities/vault/#how-do-i-reference-secrets-stored-in-a-vault).",
          "pattern": "^(https?://[[a-zA-Z0-9]_-]+%.[[a-zA-Z0-9]_.-]+)",
          "type": "string"
        },
        "keepalive": {
          "default": 60000,
          "description": "An optional value in milliseconds that defines how long an idle connection will live before being closed.",
          "type": "number"
        },
        "max_body_size": {
          "default": 8192,
          "description": "The maximum body size to mirror in bytes (e.g. \"1024\" is 1KB). Any bytes beyond this size will be omitted from the request and response bodies. Must be <= 4194304 and <= the value of Kong's nginx_http_client_body_buffer_size setting.",
          "type": "integer"
        },
        "queue": {
          "properties": {
            "concurrency_limit": {
              "default": 1,
              "description": "The number of queue delivery timers. -1 indicates unlimited.",
              "enum": [
                -1,
                1
              ],
              "type": "integer"
            },
            "initial_retry_delay": {
              "default": 0.01,
              "description": "Time in seconds before the initial retry is made for a failing batch.",
              "maximum": 1000000,
              "minimum": 0.001,
              "type": "number"
            },
            "max_batch_size": {
              "default": 1,
              "description": "Maximum number of entries that can be processed at a time.",
              "maximum": 1000000,
              "minimum": 1,
              "type": "integer"
            },
            "max_bytes": {
              "description": "Maximum number of bytes that can be waiting on a queue, requires string content.",
              "type": "integer"
            },
            "max_coalescing_delay": {
              "default": 1,
              "description": "Maximum number of (fractional) seconds to elapse after the first entry was queued before the queue starts calling the handler.",
              "maximum": 3600,
              "minimum": 0,
              "type": "number"
            },
            "max_entries": {
              "default": 10000,
              "description": "Maximum number of entries that can be waiting on the queue.",
              "maximum": 1000000,
              "minimum": 1,
              "type": "integer"
            },
            "max_retry_delay": {
              "default": 60,
              "description": "Maximum time in seconds between retries, caps exponential backoff.",
              "maximum": 1000000,
              "minimum": 0.001,
              "type": "number"
            },
            "max_retry_time": {
              "default": 60,
              "description": "Time in seconds before the queue gives up calling a failed handler for a batch.",
              "type": "number"
            }
          },
          "required": [],
          "type": "object"
        },
        "timeout": {
          "default": 10000,
          "description": "An optional timeout in milliseconds when sending data to Cortex.",
          "type": "number"
        }
      },
      "required": [
        "cloud_context",
        "cloud_provider",
        "cloud_region",
        "cortex_api_key",
        "http_endpoint"
      ],
      "type": "object"
    },
    "protocols": {
      "default": [
        "http",
        "https"
      ],
      "description": "A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.",
      "items": {
        "enum": [
          "http",
          "https"
        ],
        "required": [],
        "type": "string"
      },
      "minLength": 1,
      "type": "array"
    },
    "route": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "service": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    }
  },
  "required": [
    "config"
  ]
}