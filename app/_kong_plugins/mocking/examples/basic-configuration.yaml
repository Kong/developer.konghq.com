title: Pass an OpenAPI spec to the plugin through decK
description: |
  Configures the mocking plugin and passes an API spec.

weight: 400
config: 
  plugins:
  - name: mocking
    service: SERVICE_NAME|ID
    config:
      random_delay: true
      max_delay_time: 1
      min_delay_time: 0.001
      random_examples: true
      api_specification: |
        openapi: 3.0.2
        servers:
          - url: /v3
        info:
          description: |-
            This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
            Swagger at [http://swagger.io](http://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
            You can now help us improve the API whether it's by making changes to the definition itself or to the code.
            That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

            Some useful links:
            - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
            - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
          version: 1.0.20-SNAPSHOT
          title: Swagger Petstore - OpenAPI 3.0
          termsOfService: 'http://swagger.io/terms/'
          contact:
            email: apiteam@swagger.io
          license:
            name: Apache 2.0
            url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
        tags:
          - name: pet
            description: Everything about your Pets
            externalDocs:
              description: Find out more
              url: 'http://swagger.io'
          - name: store
            description: Access to Petstore orders
            externalDocs:
              description: Find out more about our store
              url: 'http://swagger.io'
          - name: user
            description: Operations about user
        paths:
          /pet:
            post:
              tags:
                - pet
              summary: Add a new pet to the store
              description: Add a new pet to the store
              operationId: addPet
              responses:
                '200':
                  description: Successful operation
                  content:
                    application/xml:
                      schema:
                        $ref: '#/components/schemas/Pet'
                    application/json:
                      schema:
                        $ref: '#/components/schemas/Pet'
                '405':
                  description: Invalid input
              security:
                - petstore_auth:
                    - 'write:pets'
                    - 'read:pets'
              requestBody:
                description: Create a new pet in the store
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/Pet'
                  application/xml:
                    schema:
                      $ref: '#/components/schemas/Pet'
                  application/x-www-form-urlencoded:
                    schema:
                      $ref: '#/components/schemas/Pet'
            put:
              tags:
                - pet
              summary: Update an existing pet
              description: Update an existing pet by Id
              operationId: updatePet
              responses:
                '200':
                  description: Successful operation
                  content:
                    application/xml:
                      schema:
                        $ref: '#/components/schemas/Pet'
                    application/json:
                      schema:
                        $ref: '#/components/schemas/Pet'
                '400':
                  description: Invalid ID supplied
                '404':
                  description: Pet not found
                '405':
                  description: Validation exception
              security:
                - petstore_auth:
                    - 'write:pets'
                    - 'read:pets'
              requestBody:
                description: Update an existent pet in the store
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/Pet'
                  application/xml:
                    schema:
                      $ref: '#/components/schemas/Pet'
                  application/x-www-form-urlencoded:
                    schema:
                      $ref: '#/components/schemas/Pet'