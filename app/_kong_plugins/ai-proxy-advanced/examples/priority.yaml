title: 'Load balancing: Priority'
description: Configure the plugin to use three OpenAI models and create priority groups based on their respective weights.
extended_description: |

  Configure the plugin to use three OpenAI models and create priority groups based on their respective weights.

  In this example, the GPT-4 model and the GPT-4o-mini model form a group, and the GPT-3 model forms another group.

  Since the first group has a weight of 70 and the second one a weight of 25, the plugin will first try to route requests to GPT-4 or GPT-4o-mini.
  If both fail, the plugin will choose the GPT-3 model.

weight: 109

min_version:
    gateway: '3.10'

requirements:
  - An OpenAI account

config:
  balancer:
    algorithm: priority
  targets:
  - model:
      name: gpt-4
      provider: openai
      options:
        max_tokens: 512
        temperature: 1.0
    route_type: llm/v1/chat
    auth:
      header_name: Authorization
      header_value: Bearer ${key}
    weight: 70
  - model:
      name: gpt-4o-mini
      provider: openai
      options:
        max_tokens: 512
        temperature: 1.0
    route_type: llm/v1/chat
    auth:
      header_name: Authorization
      header_value: Bearer ${key}
    weight: 70
  - model:
      name: gpt-3
      provider: openai
      options:
        max_tokens: 512
        temperature: 1.0
    route_type: llm/v1/chat
    auth:
      header_name: Authorization
      header_value: Bearer ${key}
    weight: 25

variables:
  key:
    value: $OPENAI_API_KEY
    description: The API key to use to connect to OpenAI.

tools:
  - deck
  - admin-api
  - konnect-api
  - kic
  - terraform
