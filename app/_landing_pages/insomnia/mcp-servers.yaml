metadata:
  title: MCP Servers in Insomnia
  content_type: landing_page
  description: Learn how MCP Servers and Clients work in Insomnia, how to create and sync them, and how to manage AI feature access.
  breadcrumbs:
    - /insomnia/
  products:
    - insomnia
min_version:
    insomnia: '12.0'    
rows:
  - header:
      type: h1
      text: "MCP Servers"
    columns:
      - blocks:
          - type: structured_text
            config:
              header:
                text: "Connect Insomnia to MCP Servers"
              blocks:
                - type: text
                  text: |
                    MCP Servers are external endpoints that expose domain-specific operations like `tools/CALL`, `resources/READ`, and `prompts/GET` through a **JSON-RPC interface**.

                    When you connect to a server, Insomnia creates an **MCP Client** which behaves like a request type but appears as a top-level entity for visibility.

                    Now that Insomnia supports MCP Clients, you can test and interact with MCP Servers the same way that you test APIs: 
                      - Explore callable tools
                      - Read structured resources
                      - Experiment with dynamic prompts

  - header:
      type: h2
      text: "Create an MCP Client"
    columns:
      - blocks:
          - type: structured_text
            config:
              blocks:
                - type: text
                  text: |
                    To connect Insomnia to a server endpoint, create an MCP Client:
                    1. From your Insomnia project, click **Create**.
                    2. In the **Name** box, type a name for the MCP Client.
                    3. Click **Create** 
                    4. To connect your MCP client to an MCP server, click **Connect**.
          - type: button
            config:
              text: Learn about MCP clients
              url: /how-to/create-mcp-client/
              align: left
  - header:
      type: h2
      text: "Operations and transports"
    columns:
      - blocks:
          - type: structured_text
            config:
              blocks:
                - type: text
                  text: |
                    MCP Clients communicate with servers by executing specific operation types, a small example:
                    - **Tools / CALL**: Execute a server-defined function on the server.  
                    - **Resources / READ**: Retrieve structured data objects.  
                    - **Prompts / GET**: Retrieve dynamic or AI-driven prompt templates.
                    
                    Supported transports:
                    <!-- vale off -->
                    {% table %}
                    columns:
                      - title: Use case
                        key: use_case
                      - title: Method
                        key: method
                    rows:
                      - use_case: Send JSON-RPC requests over HTTP
                        method: |
                          Standard one-way JSON-RPC requests and responses between Insomnia and the MCP Server.  
                      - use_case: Resync server definitions
                        method: |
                          Click **Resync** to update discovered Tools, Prompts, and Resources from the server. The server remains the **source of truth**.
                    {% endtable %}
                    <!-- vale on -->

  - header:
      text: "Frequently asked questions"
      type: h2
    columns:
      - blocks:
          - type: faqs
            config:
              - q: What is the difference between an MCP Client and a Collection?
                a: |
                  An MCP Client connects to an external MCP Server and syncs its Tools and Resources.  
                  A Collection is a local group of manually created requests.  
                  MCP Clients always mirror the serverâ€™s content; Collections are fully editable.
              - q: Can I use Insomnia offline with an MCP Client?
                a: |
                  You can view previously synced content offline, but discovery and resync require an active connection to the MCP Server.
              - q: Does Insomnia support both HTTP and STDIO transports?
                a: |
                  Yes. Both HTTP transport and STDIO transport are supported.
              - q: Can MCP Clients use Git Sync or import/export?
                a: |
                  Not yet. MCP Clients are purely local storage in v1 and do not support Git Sync or import/export.
