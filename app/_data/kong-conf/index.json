{
  "sections": [
    {
      "title": "GENERAL",
      "start": 22,
      "end": 275,
      "description": ""
    },
    {
      "title": "HYBRID MODE",
      "start": 276,
      "end": 380,
      "description": ""
    },
    {
      "title": "HYBRID MODE DATA PLANE",
      "start": 381,
      "end": 425,
      "description": ""
    },
    {
      "title": "HYBRID MODE CONTROL PLANE",
      "start": 426,
      "end": 502,
      "description": ""
    },
    {
      "title": "NGINX",
      "start": 503,
      "end": 1132,
      "description": ""
    },
    {
      "title": "NGINX injected directives",
      "start": 1133,
      "end": 1287,
      "description": "Nginx directives can be dynamically injected in the runtime nginx.conf file\nwithout requiring a custom Nginx configuration template.\n\nAll configuration properties following the naming scheme\n`nginx_<namespace>_<directive>` will result in `<directive>` being injected in\nthe Nginx configuration block corresponding to the property's `<namespace>`.\nExample:\n`nginx_proxy_large_client_header_buffers = 8 24k`\n\nWill inject the following directive in Kong's proxy `server {}` block:\n\n`large_client_header_buffers 8 24k;`\n\nThe following namespaces are supported:\n\n- `nginx_main_<directive>`: Injects `<directive>` in Kong's configuration\n`main` context.\n- `nginx_events_<directive>`: Injects `<directive>` in Kong's `events {}`\nblock.\n- `nginx_http_<directive>`: Injects `<directive>` in Kong's `http {}` block.\n- `nginx_proxy_<directive>`: Injects `<directive>` in Kong's proxy\n`server {}` block.\n- `nginx_location_<directive>`: Injects `<directive>` in Kong's proxy `/`\nlocation block (nested under Kong's proxy `server {}` block).\n- `nginx_upstream_<directive>`: Injects `<directive>` in Kong's proxy\n`upstream {}` block.\n- `nginx_admin_<directive>`: Injects `<directive>` in Kong's Admin API\n`server {}` block.\n- `nginx_status_<directive>`: Injects `<directive>` in Kong's Status API\n`server {}` block (only effective if `status_listen` is enabled).\n- `nginx_debug_<directive>`: Injects `<directive>` in Kong's Debug API\n`server{}` block (only effective if `debug_listen` or `debug_listen_local`\nis enabled).\n- `nginx_stream_<directive>`: Injects `<directive>` in Kong's stream module\n`stream {}` block (only effective if `stream_listen` is enabled).\n- `nginx_sproxy_<directive>`: Injects `<directive>` in Kong's stream module\n`server {}` block (only effective if `stream_listen` is enabled).\n- `nginx_supstream_<directive>`: Injects `<directive>` in Kong's stream\nmodule `upstream {}` block.\n\nAs with other configuration properties, Nginx directives can be injected via\nenvironment variables when capitalized and prefixed with `KONG_`.\nExample:\n`KONG_NGINX_HTTP_SSL_PROTOCOLS` -> `nginx_http_ssl_protocols`\n\nWill inject the following directive in Kong's `http {}` block:\n\n`ssl_protocols <value>;`\n\nIf different sets of protocols are desired between the proxy and Admin API\nserver, you may specify `nginx_proxy_ssl_protocols` and/or\n`nginx_admin_ssl_protocols`, both of which take precedence over the\n`http {}` block.\n"
    },
    {
      "title": "DATASTORE",
      "start": 1288,
      "end": 1570,
      "description": "Kong can run with a database to store coordinated data between Kong nodes in\na cluster, or without a database, where each node stores its information\nindependently in memory.\n\nWhen using a database, Kong will store data for all its entities (such as\nroutes, services, consumers, and plugins) in PostgreSQL,\nand all Kong nodes belonging to the same cluster must connect to the same database.\n\nKong supports PostgreSQL versions 9.5 and above.\n\nWhen not using a database, Kong is said to be in \"DB-less mode\": it will keep\nits entities in memory, and each node needs to have this data entered via a\ndeclarative configuration file, which can be specified through the\n`declarative_config` property, or via the Admin API using the `/config`\nendpoint.\n\nWhen using Postgres as the backend storage, you can optionally enable Kong\nto serve read queries from a separate database instance.\nWhen the number of proxies is large, this can greatly reduce the load\non the main Postgres instance and achieve better scalability. It may also\nreduce the latency jitter if the Kong proxy node's latency to the main\nPostgres instance is high.\n\nThe read-only Postgres instance only serves read queries, and write\nqueries still go to the main connection. The read-only Postgres instance\ncan be eventually consistent while replicating changes from the main\ninstance.\n\nAt least the `pg_ro_host` config is needed to enable this feature.\nBy default, all other database config for the read-only connection is\ninherited from the corresponding main connection config described above but\nmay be optionally overwritten explicitly using the `pg_ro_*` config below.\n"
    },
    {
      "title": "DATASTORE CACHE",
      "start": 1571,
      "end": 1646,
      "description": "In order to avoid unnecessary communication with the datastore, Kong caches\nentities (such as APIs, consumers, credentials...) for a configurable period\nof time. It also handles invalidations if such an entity is updated.\n\nThis section allows for configuring the behavior of Kong regarding the\ncaching of such configuration entities.\n"
    },
    {
      "title": "DNS RESOLVER",
      "start": 1647,
      "end": 1722,
      "description": "By default, the DNS resolver will use the standard configuration files\n`/etc/hosts` and `/etc/resolv.conf`. The settings in the latter file will be\noverridden by the environment variables `LOCALDOMAIN` and `RES_OPTIONS` if\nthey have been set.\n\nKong will resolve hostnames as either `SRV` or `A` records (in that order, and\n`CNAME` records will be dereferenced in the process).\nIn case a name is resolved as an `SRV` record, it will also override any given\nport number with the `port` field contents received from the DNS server.\n\nThe DNS options `SEARCH` and `NDOTS` (from the `/etc/resolv.conf` file) will\nbe used to expand short names to fully qualified ones. So it will first try\nthe entire `SEARCH` list for the `SRV` type, if that fails it will try the\n`SEARCH` list for `A`, etc.\n\nFor the duration of the `ttl`, the internal DNS resolver will load balance each\nrequest it gets over the entries in the DNS record. For `SRV` records, the\n`weight` fields will be honored, but it will only use the lowest `priority`\nfield entries in the record.\n"
    },
    {
      "title": "New DNS RESOLVER",
      "start": 1723,
      "end": 1821,
      "description": "This DNS resolver introduces global caching for DNS records across workers,\nsignificantly reducing the query load on DNS servers.\n\nIt provides observable statistics, you can retrieve them through the Admin API\n`/status/dns`.\n"
    },
    {
      "title": "VAULTS",
      "start": 1822,
      "end": 2047,
      "description": "A secret is any sensitive piece of information required for API gateway\noperations. Secrets may be part of the core Kong Gateway configuration,\nused in plugins, or part of the configuration associated with APIs serviced\nby the gateway.\n\nSome of the most common types of secrets used by Kong Gateway include:\n\n- Data store usernames and passwords, used with PostgreSQL and Redis\n- Private X.509 certificates\n- API keys\n\nSensitive plugin configuration fields are generally used for authentication,\nhashing, signing, or encryption. Kong Gateway lets you store certain values\nin a vault. Here are the vault specific configuration options.\n"
    },
    {
      "title": "TUNING & BEHAVIOR",
      "start": 2048,
      "end": 2168,
      "description": ""
    },
    {
      "title": "MISCELLANEOUS",
      "start": 2169,
      "end": 2290,
      "description": "Additional settings inherited from lua-nginx-module allowing for more\nflexibility and advanced usage.\n\nSee the lua-nginx-module documentation for more information:\nhttps://github.com/openresty/lua-nginx-module\n"
    },
    {
      "title": "KONG MANAGER",
      "start": 2291,
      "end": 2540,
      "description": "\nThe Admin GUI for Kong Enterprise.\n\n"
    },
    {
      "title": "Konnect",
      "start": 2541,
      "end": 2547,
      "description": ""
    },
    {
      "title": "Analytics for Konnect",
      "start": 2548,
      "end": 2568,
      "description": ""
    },
    {
      "title": "ADMIN SMTP CONFIGURATION",
      "start": 2569,
      "end": 2583,
      "description": ""
    },
    {
      "title": "GENERAL SMTP CONFIGURATION",
      "start": 2584,
      "end": 2634,
      "description": ""
    },
    {
      "title": "DATA & ADMIN AUDIT",
      "start": 2635,
      "end": 2680,
      "description": "When enabled, Kong will store detailed audit data regarding Admin API and\ndatabase access. In most cases, updates to the database are associated with\nAdmin API requests. As such, database object audit log data is tied to a\ngiven HTTP request via a unique identifier, providing built-in association of\nAdmin API and database traffic.\n\n"
    },
    {
      "title": "ROUTE COLLISION DETECTION/PREVENTION",
      "start": 2681,
      "end": 2728,
      "description": ""
    },
    {
      "title": "DATABASE ENCRYPTION & KEYRING MANAGEMENT",
      "start": 2729,
      "end": 2957,
      "description": "When enabled, Kong will transparently encrypt sensitive fields, such as consumer\ncredentials, TLS private keys, and RBAC user tokens, among others. A full list\nof encrypted fields is available from the Kong Enterprise documentation site.\nEncrypted data is transparently decrypted before being displayed to the Admin\nAPI or made available to plugins or core routing logic.\n\nWhile this feature is GA, do note that we currently do not provide normal semantic\nversioning compatibility guarantees on the keyring feature's APIs in that Kong may\nmake a breaking change to the feature in a minor version. Also note that\nmismanagement of keyring data may result in irrecoverable data loss.\n\n"
    },
    {
      "title": "CLUSTER FALLBACK CONFIGURATION",
      "start": 2958,
      "end": 3006,
      "description": ""
    },
    {
      "title": "WEBASSEMBLY (WASM)",
      "start": 3007,
      "end": 3069,
      "description": ""
    },
    {
      "title": "WASM injected directives",
      "start": 3070,
      "end": 3153,
      "description": "The Nginx Wasm module (i.e., ngx_wasm_module) has its own settings, which can\nbe tuned via `wasm_*` directives in the Nginx configuration file. Kong\nsupports configuration of these directives via its Nginx directive injection\nmechanism.\n\nThe following namespaces are supported:\n\n- `nginx_wasm_<directive>`: Injects `<directive>` into the `wasm {}` block.\n- `nginx_wasm_shm_kv`: Injects `shm_kv *` into the `wasm {}` block,\nallowing operators to define a general memory zone which is usable by\nthe `get_shared_data`/`set_shared_data` Proxy-Wasm SDK functions as\nan in-memory key-value store of data shareable across filters.\n- `nginx_wasm_shm_kv_<name>`: Injects `shm_kv <name>` into the `wasm {}` block,\nallowing operators to define custom shared memory zones which are usable by\nthe `get_shared_data`/`set_shared_data` Proxy-Wasm SDK functions as\nseparate namespaces in the `\"<name>/<key>\"` format.\nFor using these functions with non-namespaced keys, the Nginx template needs\na `shm_kv *` entry, which can be defined using `nginx_wasm_shm_kv`.\n- `nginx_wasm_wasmtime_<flag>`: Injects `flag <flag>` into the `wasmtime {}`\nblock, allowing various Wasmtime-specific flags to be set.\n- `nginx_<http|proxy>_<directive>`: Injects `<directive>` into the\n`http {}` or `server {}` blocks, as specified in the Nginx injected directives\nsection.\n\nThe documentation for all supported directives can be found in the Nginx Wasm\nmodule repository:\n\nhttps://github.com/Kong/ngx_wasm_module/blob/main/docs/DIRECTIVES.md\n\nThe Wasmtime flag documentation can be found here:\n\nhttps://docs.wasmtime.dev/c-api/config_8h.html\n\nThere are several noteworthy ngx_wasm_module behaviors which can be tuned via\n`http {}`/`server {}` level directive injection (identical behavior in either\nlevel), for example:\n\n- `nginx_http_proxy_wasm_socket_<connect|read|send>_timeout`: sets connection/read/send\ntimeouts for Wasm dispatches.\n- `nginx_http_proxy_wasm_socket_buffer_size`: sets a buffer size for\nreading Wasm dispatch responses.\n\nThe values for these settings are inherited from their `nginx_*_lua_*`\ncounterparts if they have not been explicitly set. For instance, if you set\n`nginx_http_lua_socket_connect_timeout`, the value\nof this setting will be propagated to `nginx_http_wasm_socket_connect_timeout`\nunless you _also_ set `nginx_http_wasm_socket_connect_timeout`.\n\nSome TLS-related settings receive special treatment as well:\n\n- `lua_ssl_trusted_certificate`: when set, the value is propagated to the\n`nginx_wasm_tls_trusted_certificate` directive.\n- `lua_ssl_verify_depth`: when set (to a value greater than zero), several\nTLS-related `nginx_wasm_*` settings are enabled:\n- `nginx_wasm_tls_verify_cert`\n- `nginx_wasm_tls_verify_host`\n- `nginx_wasm_tls_no_verify_warn`\n\nLike other `kong.conf` fields, all injected Nginx directives documented here\ncan be set via environment variable. For instance, setting:\n\n`KONG_NGINX_WASM_TLS_VERIFY_CERT=<value>`\n\nWill inject the following into the `wasm {}` block:\n\n`tls_verify_cert <value>;`\n\nThere are several Nginx directives supported by ngx_wasm_module which should\nnot be used because they are irrelevant to or unsupported by Kong, or they may\nconflict with Kong's own management of Proxy-Wasm. Use of these directives may\nresult in unintentional breakage:\n\n- `wasm_call`\n- `module`\n- `proxy_wasm`\n- `resolver_add`\n- `proxy_wasm_request_headers_in_access`\n- `shm_queue`\n\n"
    },
    {
      "title": "REQUEST DEBUGGING",
      "start": 3154,
      "end": 3216,
      "description": "Request debugging is a mechanism that allows admins to collect the timing of\nproxy path requests in the response header (X-Kong-Request-Debug-Output)\nand optionally, the error log.\n\nThis feature provides insights into the time spent within various components of Kong,\nsuch as plugins, DNS resolution, load balancing, and more. It also provides contextual\ninformation such as domain names tried during these processes.\n\n"
    }
  ],
  "params": {
    "prefix": {
      "defaultValue": "/usr/local/kong/",
      "description": "Working directory. Equivalent to Nginx's\nprefix path, containing temporary files\nand logs.\nEach Kong process must have a separate\nworking directory.\n",
      "sectionIndex": 0
    },
    "log_level": {
      "defaultValue": "notice",
      "description": "Log level of the Nginx server. Logs are\nfound at `<prefix>/logs/error.log`.\n",
      "sectionIndex": 0
    },
    "proxy_access_log": {
      "defaultValue": "logs/access.log",
      "description": "Path for proxy port request access\nlogs. Set this value to `off` to\ndisable logging proxy requests.\nIf this value is a relative path,\nit will be placed under the\n`prefix` location.\n",
      "sectionIndex": 0
    },
    "proxy_error_log": {
      "defaultValue": "logs/error.log",
      "description": "Path for proxy port request error logs.\nThe granularity of these logs is adjusted by the `log_level` property.\n",
      "sectionIndex": 0
    },
    "proxy_stream_access_log": {
      "defaultValue": "logs/access.log basic",
      "description": "Path for TCP streams proxy port access logs.\nSet to `off` to disable logging proxy requests.\nIf this value is a relative path, it will be placed under the `prefix` location.\n`basic` is defined as `'$remote_addr [$time_local] '\n'$protocol $status $bytes_sent $bytes_received '\n'$session_time'`\n",
      "sectionIndex": 0
    },
    "proxy_stream_error_log": {
      "defaultValue": "logs/error.log",
      "description": "Path for tcp streams proxy port request error\nlogs. The granularity of these logs\nis adjusted by the `log_level`\nproperty.\n",
      "sectionIndex": 0
    },
    "admin_access_log": {
      "defaultValue": "logs/admin_access.log",
      "description": "Path for Admin API request access logs.\nIf hybrid mode is enabled and the current node is set\nto be the control plane, then the connection requests\nfrom data planes are also written to this file with\nserver name \"kong_cluster_listener\".\n\nSet this value to `off` to disable logging Admin API requests.\nIf this value is a relative path, it will be placed under the `prefix` location.\n",
      "sectionIndex": 0
    },
    "admin_error_log": {
      "defaultValue": "logs/error.log",
      "description": "Path for Admin API request error logs.\nThe granularity of these logs is adjusted by the `log_level` property.\n",
      "sectionIndex": 0
    },
    "status_access_log": {
      "defaultValue": "off",
      "description": "Path for Status API request access logs.\nThe default value of `off` implies that logging for this API\nis disabled by default.\nIf this value is a relative path, it will be placed under the `prefix` location.\n",
      "sectionIndex": 0
    },
    "status_error_log": {
      "defaultValue": "logs/status_error.log",
      "description": "Path for Status API request error logs.\nThe granularity of these logs is adjusted by the `log_level` property.\n",
      "sectionIndex": 0
    },
    "debug_access_log": {
      "defaultValue": "off",
      "description": "Path for Debug API request access\nlogs. The default value `off`\nimplies that logging for this API\nis disabled by default.\nIf this value is a relative path,\nit will be placed under the\n`prefix` location.\n",
      "sectionIndex": 0
    },
    "debug_error_log": {
      "defaultValue": "logs/debug_error.log",
      "description": "Path for Debug API request error\nlogs. The granularity of these logs\nis adjusted using the `log_level`\nproperty.\n",
      "sectionIndex": 0
    },
    "vaults": {
      "defaultValue": "bundled",
      "description": "Comma-separated list of vaults this node should load.\nBy default, all the bundled vaults are enabled.\n\nThe specified name(s) will be substituted as\nsuch in the Lua namespace:\n`kong.vaults.{name}.*`.\n",
      "sectionIndex": 0
    },
    "opentelemetry_tracing": {
      "defaultValue": "off",
      "description": "Deprecated: use `tracing_instrumentations` instead.\n",
      "sectionIndex": 0
    },
    "tracing_instrumentations": {
      "defaultValue": "off",
      "description": "Comma-separated list of tracing instrumentations this node should load.\nBy default, no instrumentations are enabled.\n\nValid values for this setting are:\n\n- `off`: do not enable instrumentations.\n- `request`: only enable request-level instrumentations.\n- `all`: enable all the following instrumentations.\n- `db_query`: trace database queries.\n- `dns_query`: trace DNS queries.\n- `router`: trace router execution, including router rebuilding.\n- `http_client`: trace OpenResty HTTP client requests.\n- `balancer`: trace balancer retries.\n- `plugin_rewrite`: trace plugin iterator execution with rewrite phase.\n- `plugin_access`: trace plugin iterator execution with access phase.\n- `plugin_header_filter`: trace plugin iterator execution with header_filter phase.\n\n**Note:** In the current implementation, tracing instrumentations are not enabled in stream mode.\n",
      "sectionIndex": 0
    },
    "opentelemetry_tracing_sampling_rate": {
      "defaultValue": "1.0",
      "description": "Deprecated: use `tracing_sampling_rate` instead.\n",
      "sectionIndex": 0
    },
    "tracing_sampling_rate": {
      "defaultValue": "0.01",
      "description": "Tracing instrumentation sampling rate.\nTracer samples a fixed percentage of all spans\nfollowing the sampling rate.\n\nExample: `0.25`, this accounts for 25% of all traces.\n",
      "sectionIndex": 0
    },
    "plugins": {
      "defaultValue": "bundled",
      "description": "Comma-separated list of plugins this node should load.\nBy default, only plugins bundled in official distributions\nare loaded via the `bundled` keyword.\n\nLoading a plugin does not enable it by default, but only\ninstructs Kong to load its source code and allows\nconfiguration via the various related Admin API endpoints.\n\nThe specified name(s) will be substituted as such in the\nLua namespace: `kong.plugins.{name}.*`.\n\nWhen the `off` keyword is specified as the only value,\nno plugins will be loaded.\n\n`bundled` and plugin names can be mixed together, as the\nfollowing examples suggest:\n\n- `plugins = bundled,custom-auth,custom-log`\n  will include the bundled plugins plus two custom ones.\n- `plugins = custom-auth,custom-log` will\n  *only* include the `custom-auth` and `custom-log` plugins.\n- `plugins = off` will not include any plugins.\n\n**Note:** Kong will not start if some plugins were previously\nconfigured (i.e. have rows in the database) and are not\nspecified in this list. Before disabling a plugin, ensure\nall instances of it are removed before restarting Kong.\n\n**Note:** Limiting the amount of available plugins can\nimprove P99 latency when experiencing LRU churning in the\ndatabase cache (i.e. when the configured `mem_cache_size`) is full.\n",
      "sectionIndex": 0
    },
    "pluginserver_names": {
      "defaultValue": null,
      "description": "Comma-separated list of names for pluginserver\nprocesses. The actual names are used for\nlog messages and to relate the actual settings.\n",
      "sectionIndex": 0
    },
    "pluginserver_XXX_socket": {
      "defaultValue": "<prefix>/<XXX>.socket",
      "description": "Path to the unix socket\nused by the <XXX> pluginserver.\n",
      "sectionIndex": 0
    },
    "pluginserver_XXX_start_cmd": {
      "defaultValue": "/usr/local/bin/<XXX>",
      "description": "Full command (including\nany needed arguments) to\nstart the <XXX>\npluginserver.\n",
      "sectionIndex": 0
    },
    "pluginserver_XXX_query_cmd": {
      "defaultValue": "/usr/local/bin/query_<XXX>",
      "description": "Full command to \"query\" the\n<XXX> pluginserver.  Should\nproduce a JSON with the\ndump info of the plugin it\nmanages.\n",
      "sectionIndex": 0
    },
    "port_maps": {
      "defaultValue": null,
      "description": "With this configuration parameter, you can\nlet Kong Gateway know the port from\nwhich the packets are forwarded to it. This\nis fairly common when running Kong in a\ncontainerized or virtualized environment.\nFor example, `port_maps=80:8000, 443:8443`\ninstructs Kong that the port 80 is mapped\nto 8000 (and the port 443 to 8443), where\n8000 and 8443 are the ports that Kong is\nlistening to.\n\nThis parameter helps Kong set a proper\nforwarded upstream HTTP request header or to\nget the proper forwarded port with the Kong PDK\n(in case other means determining it has\nfailed). It changes routing by a destination\nport to route by a port from which packets\nare forwarded to Kong, and similarly it\nchanges the default plugin log serializer to\nuse the port according to this mapping\ninstead of reporting the port Kong is\nlistening to.\n",
      "sectionIndex": 0
    },
    "anonymous_reports": {
      "defaultValue": "on",
      "description": "Send anonymous usage data such as error\nstack traces to help improve Kong.\n",
      "sectionIndex": 0
    },
    "proxy_server": {
      "defaultValue": null,
      "description": "Proxy server defined as an encoded URL. Kong will only\nuse this option if a component is explicitly configured\nto use a proxy.\n",
      "sectionIndex": 0
    },
    "proxy_server_ssl_verify": {
      "defaultValue": "off",
      "description": "Toggles server certificate verification if\n`proxy_server` is in HTTPS.\nSee the `lua_ssl_trusted_certificate`\nsetting to specify a certificate authority.\n",
      "sectionIndex": 0
    },
    "error_template_html": {
      "defaultValue": null,
      "description": "Path to the custom html error template to\noverride the default html kong error\ntemplate.\n\nThe template may contain up to two `%s`\nplaceholders. The first one will expand to\nthe error message. The second one will\nexpand to the request ID. Both placeholders\nare optional, but recommended.\nAdding more than two placeholders will\nresult in a runtime error when trying to\nrender the template:\n```\n<html>\n  <body>\n    <h1>My custom error template</h1>\n    <p>error: %s</p>\n    <p>request_id: %s</p>\n  </body>\n</html>\n```\n",
      "sectionIndex": 0
    },
    "error_template_json": {
      "defaultValue": null,
      "description": "Path to the custom json error template to\noverride the default json kong error\ntemplate.\n\nSimilarly to `error_template_html`, the\ntemplate may contain up to two `%s`\nplaceholders for the error message and the\nrequest ID respectively.\n",
      "sectionIndex": 0
    },
    "error_template_xml": {
      "defaultValue": null,
      "description": "Path to the custom xml error template to\noverride the default xml kong error template\n\nSimilarly to `error_template_html`, the\ntemplate may contain up to two `%s`\nplaceholders for the error message and the\nrequest ID respectively.\n",
      "sectionIndex": 0
    },
    "error_template_plain": {
      "defaultValue": null,
      "description": "Path to the custom plain error template to\noverride the default plain kong error\ntemplate\n\nSimilarly to `error_template_html`, the\ntemplate may contain up to two `%s`\nplaceholders for the error message and the\nrequest ID respectively.\n",
      "sectionIndex": 0
    },
    "role": {
      "defaultValue": "traditional",
      "description": "Use this setting to enable hybrid mode,\nThis allows running some Kong nodes in a\ncontrol plane role with a database and\nhave them deliver configuration updates\nto other nodes running to DB-less running in\na data plane role.\n\nValid values for this setting are:\n\n- `traditional`: do not use hybrid mode.\n- `control_plane`: this node runs in a\n  control plane role. It can use a database\n  and will deliver configuration updates\n  to data plane nodes.\n- `data_plane`: this is a data plane node.\n  It runs DB-less and receives configuration\n  updates from a control plane node.\n",
      "sectionIndex": 1
    },
    "cluster_mtls": {
      "defaultValue": "shared",
      "description": "Sets the verification method between nodes of the cluster.\n\nValid values for this setting are:\n\n- `shared`: use a shared certificate/key pair specified with\n  the `cluster_cert` and `cluster_cert_key` settings.\n  Note that CP and DP nodes must present the same certificate\n  to establish mTLS connections.\n- `pki`: use `cluster_ca_cert`, `cluster_server_name`, and\n  `cluster_cert` for verification. These are different\n  certificates for each DP node, but issued by a cluster-wide\n  common CA certificate: `cluster_ca_cert`.\n- `pki_check_cn`: similar to `pki` but additionally checks\n  for the common name of the data plane certificate specified\n  in `cluster_allowed_common_names`.\n",
      "sectionIndex": 1
    },
    "cluster_cert": {
      "defaultValue": null,
      "description": "Cluster certificate to use when establishing secure communication\nbetween control and data plane nodes.\nYou can use the `kong hybrid` command to generate the certificate/key pair.\nUnder `shared` mode, it must be the same for all nodes.\nUnder `pki` mode, it should be a different certificate for each DP node.\n\nThe certificate can be configured on this property with any of the following values:\n- absolute path to the certificate\n- certificate content\n- base64 encoded certificate content\n",
      "sectionIndex": 1
    },
    "cluster_cert_key": {
      "defaultValue": null,
      "description": "Cluster certificate key to\nuse when establishing secure communication\nbetween control and data plane nodes.\nYou can use the `kong hybrid` command to\ngenerate the certificate/key pair.\nUnder `shared` mode, it must be the same\nfor all nodes.  Under `pki` mode it\nshould be a different certificate for each\nDP node.\n\nThe certificate key can be configured on this\nproperty with either of the following values:\n- absolute path to the certificate key\n- certificate key content\n- base64 encoded certificate key content\n",
      "sectionIndex": 1
    },
    "cluster_ca_cert": {
      "defaultValue": null,
      "description": "The trusted CA certificate file in PEM format used for:\n- Control plane to verify data plane's certificate\n- Data plane to verify control plane's certificate\n\nRequired on data plane if `cluster_mtls` is set to `pki`.\nIf the control plane certificate is issued by a well-known CA,\nset `lua_ssl_trusted_certificate=system` on the data plane and leave this field empty.\n\nThis field is ignored if `cluster_mtls` is set to `shared`.\n\nThe certificate can be configured on this property with any of the following values:\n- absolute path to the certificate\n- certificate content\n- base64 encoded certificate content\n",
      "sectionIndex": 1
    },
    "cluster_allowed_common_names": {
      "defaultValue": null,
      "description": "The list of Common Names that are allowed to\nconnect to control plane. Multiple entries may\nbe supplied in a comma-separated string. When not\nset, only data plane with the same parent domain as the\ncontrol plane cert is allowed to connect.\n\nThis field is ignored if `cluster_mtls` is\nnot set to `pki_check_cn`.\n",
      "sectionIndex": 1
    },
    "cluster_server_name": {
      "defaultValue": null,
      "description": "The server name used in the SNI of the TLS\nconnection from a DP node to a CP node.\nMust match the Common Name (CN) or Subject\nAlternative Name (SAN) found in the CP\ncertificate.\nIf `cluster_mtls` is set to\n`shared`, this setting is ignored and\n`kong_clustering` is used.\n",
      "sectionIndex": 2
    },
    "cluster_control_plane": {
      "defaultValue": null,
      "description": "To be used by data plane nodes only:\naddress of the control plane node from which\nconfiguration updates will be fetched,\nin `host:port` format.\n",
      "sectionIndex": 2
    },
    "cluster_telemetry_endpoint": {
      "defaultValue": null,
      "description": "To be used by data plane nodes only:\ntelemetry address of the control plane node\nto which telemetry updates will be posted\nin `host:port` format.\n",
      "sectionIndex": 2
    },
    "cluster_telemetry_server_name": {
      "defaultValue": null,
      "description": "The SNI (Server Name Indication extension)\nto use for Vitals telemetry data.\n",
      "sectionIndex": 2
    },
    "cluster_dp_labels": {
      "defaultValue": null,
      "description": "Comma-separated list of labels for the data plane.\nLabels are key-value pairs that provide additional\ncontext information for each DP.\nEach label must be configured as a string in the\nformat `key:value`.\n\nLabels are only compatible with hybrid mode\ndeployments with Kong Konnect (SaaS).\nThis configuration doesn't work with\nself-hosted deployments.\n\nKeys and values follow the AIP standards:\nhttps://kong-aip.netlify.app/aip/129/\n\nExample:\n`deployment:mycloud,region:us-east-1`\n",
      "sectionIndex": 2
    },
    "cluster_listen": {
      "defaultValue": "0.0.0.0:8005",
      "description": "Comma-separated list of addresses and ports on\nwhich the cluster control plane server should listen\nfor data plane connections.\nThe cluster communication port of the control plane\nmust be accessible by all the data planes\nwithin the same cluster. This port is mTLS protected\nto ensure end-to-end security and integrity.\n\nThis setting has no effect if `role` is not set to\n`control_plane`.\n\nConnections made to this endpoint are logged\nto the same location as Admin API access logs.\nSee `admin_access_log` config description for more\ninformation.\n",
      "sectionIndex": 3
    },
    "cluster_telemetry_listen": {
      "defaultValue": "0.0.0.0:8006",
      "description": "Comma-separated list of addresses and ports on\nwhich the cluster control plane server should listen\nfor data plane telemetry connections.\nThe cluster communication port of the control plane\nmust be accessible by all the data planes\nwithin the same cluster.\n\nThis setting has no effect if `role` is not set to\n`control_plane`.\n",
      "sectionIndex": 3
    },
    "cluster_data_plane_purge_delay": {
      "defaultValue": "1209600",
      "description": "How many seconds must pass from the time a DP node\nbecomes offline to the time its entry gets removed\nfrom the database, as returned by the\n/clustering/data-planes Admin API endpoint.\n\nThis is to prevent the cluster data plane table from\ngrowing indefinitely. The default is set to\n14 days. That is, if the CP hasn't heard from a DP for\n14 days, its entry will be removed.\n",
      "sectionIndex": 3
    },
    "cluster_ocsp": {
      "defaultValue": "off",
      "description": "Whether to check for revocation status of DP\ncertificates using OCSP (Online Certificate Status Protocol).\nIf enabled, the DP certificate should contain the\n\"Certificate Authority Information Access\" extension\nand the OCSP method with URI of which the OCSP responder\ncan be reached from CP.\n\nOCSP checks are only performed on CP nodes, it has no\neffect on DP nodes.\n\nValid values for this setting are:\n\n- `on`: OCSP revocation check is enabled and DP\n  must pass the check in order to establish\n  connection with CP.\n- `off`: OCSP revocation check is disabled.\n- `optional`: OCSP revocation check will be attempted,\n  however, if the required extension is not\n  found inside DP-provided certificate\n  or communication with the OCSP responder\n  failed, then DP is still allowed through.\n",
      "sectionIndex": 3
    },
    "cluster_use_proxy": {
      "defaultValue": "off",
      "description": "Whether to turn on HTTP CONNECT proxy support for\nhybrid mode connections. `proxy_server` will be used\nfor hybrid mode connections if this option is turned on.\n",
      "sectionIndex": 3
    },
    "cluster_max_payload": {
      "defaultValue": "16777216",
      "description": "This sets the maximum compressed payload size allowed\nto be sent from CP to DP in hybrid mode.\nDefault is 16MB - 16 * 1024 * 1024.\n",
      "sectionIndex": 3
    },
    "proxy_listen": {
      "defaultValue": [
        "0.0.0.0:8000 reuseport backlog=16384",
        "0.0.0.0:8443 http2 ssl reuseport backlog=16384"
      ],
      "description": "Comma-separated list of addresses and ports on\nwhich the proxy server should listen for\nHTTP/HTTPS traffic.\nThe proxy server is the public entry point of Kong,\nwhich proxies traffic from your consumers to your\nbackend services. This value accepts IPv4, IPv6, and\nhostnames.\n\nSome suffixes can be specified for each pair:\n\n- `ssl` will require that all connections made\n  through a particular address/port be made with TLS\n  enabled.\n- `http2` will allow for clients to open HTTP/2\n  connections to Kong's proxy server.\n- `proxy_protocol` will enable usage of the\n  PROXY protocol for a given address/port.\n- `deferred` instructs to use a deferred accept on\n  Linux (the `TCP_DEFER_ACCEPT` socket option).\n- `bind` instructs to make a separate bind() call\n  for a given address:port pair.\n- `reuseport` instructs to create an individual\n  listening socket for each worker process,\n  allowing the kernel to better distribute incoming\n  connections between worker processes.\n- `backlog=N` sets the maximum length for the queue\n  of pending TCP connections. This number should\n  not be too small to prevent clients\n  seeing \"Connection refused\" errors when connecting to\n  a busy Kong instance.\n  **Note:** On Linux, this value is limited by the\n  setting of the `net.core.somaxconn` kernel parameter.\n  In order for the larger `backlog` set here to take\n  effect, it is necessary to raise\n  `net.core.somaxconn` at the same time to match or\n  exceed the `backlog` number set.\n- `ipv6only=on|off` specifies whether an IPv6 socket listening\n  on a wildcard address [::] will accept only IPv6\n  connections or both IPv6 and IPv4 connections.\n- `so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]`\n  configures the TCP keepalive behavior for the listening\n  socket. If this parameter is omitted, the operating\n  system’s settings will be in effect for the socket. If it\n  is set to the value `on`, the `SO_KEEPALIVE` option is turned\n  on for the socket. If it is set to the value `off`, the\n  `SO_KEEPALIVE` option is turned off for the socket. Some\n  operating systems support setting of TCP keepalive parameters\n  on a per-socket basis using the `TCP_KEEPIDLE`,` TCP_KEEPINTVL`,\n  and `TCP_KEEPCNT` socket options.\n\nThis value can be set to `off`, thus disabling\nthe HTTP/HTTPS proxy port for this node.\nIf `stream_listen` is also set to `off`, this enables\ncontrol plane mode for this node\n(in which all traffic proxying capabilities are\ndisabled). This node can then be used only to\nconfigure a cluster of Kong\nnodes connected to the same datastore.\n\nExample:\n`proxy_listen = 0.0.0.0:443 ssl, 0.0.0.0:444 http2 ssl`\n\nSee http://nginx.org/en/docs/http/ngx_http_core_module.html#listen\nfor a description of the accepted formats for this\nand other `*_listen` values.\n\nSee https://www.nginx.com/resources/admin-guide/proxy-protocol/\nfor more details about the `proxy_protocol`\nparameter.\n\nNot all `*_listen` values accept all formats\nspecified in nginx's documentation.\n",
      "sectionIndex": 4
    },
    "proxy_url": {
      "defaultValue": null,
      "description": "Kong Proxy URL\n\nThe lookup, or balancer, address for your Kong Proxy nodes.\n\nThis value is commonly used in a microservices\nor service-mesh oriented architecture.\n\nAccepted format (parts in parentheses are optional):\n\n  `<scheme>://<IP / HOSTNAME>(:<PORT>(/<PATH>))`\n\nExamples:\n\n- `<scheme>://<IP>:<PORT>` -> `proxy_url = http://127.0.0.1:8000`\n- `SSL <scheme>://<HOSTNAME>` -> `proxy_url = https://proxy.domain.tld`\n- `<scheme>://<HOSTNAME>/<PATH>` -> `proxy_url = http://dev-machine/dev-285`\n\nBy default, Kong Manager and Kong Portal will use\nthe window request host and append the resolved\nlistener port depending on the requested protocol.\n",
      "sectionIndex": 4
    },
    "stream_listen": {
      "defaultValue": "off",
      "description": "Comma-separated list of addresses and ports on\nwhich the stream mode should listen.\n\nThis value accepts IPv4, IPv6, and hostnames.\nSome suffixes can be specified for each pair:\n- `ssl` will require that all connections made\n  through a particular address/port be made with TLS\n  enabled.\n- `proxy_protocol` will enable usage of the\n  PROXY protocol for a given address/port.\n- `bind` instructs to make a separate bind() call\n  for a given address:port pair.\n- `reuseport` instructs to create an individual\n  listening socket for each worker process,\n  allowing the kernel to better distribute incoming\n  connections between worker processes.\n- `backlog=N` sets the maximum length for the queue\n  of pending TCP connections. This number should\n  not be too small to prevent clients\n  seeing \"Connection refused\" errors when connecting to\n  a busy Kong instance.\n  **Note:** On Linux, this value is limited by the\n  setting of the `net.core.somaxconn` kernel parameter.\n  In order for the larger `backlog` set here to take\n  effect, it is necessary to raise\n  `net.core.somaxconn` at the same time to match or\n  exceed the `backlog` number set.\n- `ipv6only=on|off` specifies whether an IPv6 socket listening\n  on a wildcard address [::] will accept only IPv6\n  connections or both IPv6 and IPv4 connections\n- so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]\n  configures the \"TCP keepalive\" behavior for the listening\n  socket. If this parameter is omitted then the operating\n  system’s settings will be in effect for the socket. If it\n  is set to the value \"on\", the SO_KEEPALIVE option is turned\n  on for the socket. If it is set to the value \"off\", the\n  SO_KEEPALIVE option is turned off for the socket. Some\n  operating systems support setting of TCP keepalive parameters\n  on a per-socket basis using the` TCP_KEEPIDLE`, `TCP_KEEPINTVL`,\n  and `TCP_KEEPCNT` socket options.\n\nExamples:\n\n```\nstream_listen = 127.0.0.1:7000 reuseport backlog=16384\nstream_listen = 0.0.0.0:989 reuseport backlog=65536, 0.0.0.0:20\nstream_listen = [::1]:1234 backlog=16384\n```\n\nBy default, this value is set to `off`, thus\ndisabling the stream proxy port for this node.\n",
      "sectionIndex": 4
    },
    "admin_api_uri": {
      "defaultValue": null,
      "description": "Deprecated: Use admin_gui_api_url instead\n",
      "sectionIndex": 4
    },
    "admin_listen": {
      "defaultValue": [
        "127.0.0.1:8001 reuseport backlog=16384",
        "127.0.0.1:8444 http2 ssl reuseport backlog=16384"
      ],
      "description": "Comma-separated list of addresses and ports on\nwhich the Admin interface should listen.\nThe Admin interface is the API allowing you to\nconfigure and manage Kong.\nAccess to this interface should be *restricted*\nto Kong administrators *only*. This value accepts\nIPv4, IPv6, and hostnames.\n\nIt is highly recommended to avoid exposing the Admin API to public\ninterfaces, by using values such as `0.0.0.0:8001`\n\nSee https://docs.konghq.com/gateway/latest/production/running-kong/secure-admin-api/\nfor more information about how to secure your Admin API.\n\nSome suffixes can be specified for each pair:\n\n- `ssl` will require that all connections made\n  through a particular address/port be made with TLS\n  enabled.\n- `http2` will allow for clients to open HTTP/2\n  connections to Kong's proxy server.\n- `proxy_protocol` will enable usage of the\n  PROXY protocol for a given address/port.\n- `deferred` instructs to use a deferred accept on\n  Linux (the `TCP_DEFER_ACCEPT` socket option).\n- `bind` instructs to make a separate bind() call\n  for a given address:port pair.\n- `reuseport` instructs to create an individual\n  listening socket for each worker process,\n  allowing the Kernel to better distribute incoming\n  connections between worker processes.\n- `backlog=N` sets the maximum length for the queue\n  of pending TCP connections. This number should\n  not be too small to prevent clients\n  seeing \"Connection refused\" errors when connecting to\n  a busy Kong instance.\n  **Note:** On Linux, this value is limited by the\n  setting of the `net.core.somaxconn` kernel parameter.\n  In order for the larger `backlog` set here to take\n  effect, it is necessary to raise\n  `net.core.somaxconn` at the same time to match or\n  exceed the `backlog` number set.\n- `ipv6only=on|off` specifies whether an IPv6 socket listening\n  on a wildcard address [::] will accept only IPv6\n  connections or both IPv6 and IPv4 connections.\n- `so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]`\n  configures the “TCP keepalive” behavior for the listening\n  socket. If this parameter is omitted, the operating\n  system’s settings will be in effect for the socket. If it\n  is set to the value `on`, the `SO_KEEPALIVE` option is turned\n  on for the socket. If it is set to the value `off`, the\n  `SO_KEEPALIVE` option is turned off for the socket. Some\n  operating systems support setting of TCP keepalive parameters\n  on a per-socket basis using the `TCP_KEEPIDLE`, `TCP_KEEPINTVL`,\n  and `TCP_KEEPCNT` socket options.\n\nThis value can be set to `off`, thus disabling\nthe Admin interface for this node, enabling a\ndata plane mode (without configuration\ncapabilities) pulling its configuration changes\nfrom the database.\n\nExample: `admin_listen = 127.0.0.1:8444 http2 ssl`\n",
      "sectionIndex": 4
    },
    "status_listen": {
      "defaultValue": "127.0.0.1:8007 reuseport backlog=16384",
      "description": "Comma-separated list of addresses and ports on\nwhich the Status API should listen.\nThe Status API is a read-only endpoint\nallowing monitoring tools to retrieve metrics,\nhealthiness, and other non-sensitive information\nof the current Kong node.\n\nThe following suffix can be specified for each pair:\n\n- `ssl` will require that all connections made\n  through a particular address/port be made with TLS\n  enabled.\n- `http2` will allow for clients to open HTTP/2\n  connections to Kong's Status API server.\n- `proxy_protocol` will enable usage of the PROXY protocol.\n\nThis value can be set to `off`, disabling\nthe Status API for this node.\n\nExample: `status_listen = 0.0.0.0:8100 ssl http2`\n",
      "sectionIndex": 4
    },
    "debug_listen": {
      "defaultValue": "off",
      "description": "Comma-separated list of addresses and ports on\nwhich the Debug API should listen.\n\nThe following suffix can be specified for each pair:\n\n- `ssl` will require that all connections made\n  through a particular address/port be made with TLS\n  enabled.\n- `http2` will allow for clients to open HTTP/2\n  connections to Kong's Debug API server.\n\nThis value can be set to `off`, disabling\nthe Debug API for this node.\n\nExample: `debug_listen = 0.0.0.0:8200 ssl http2`\n",
      "sectionIndex": 4
    },
    "nginx_user": {
      "defaultValue": "kong kong",
      "description": "Defines user and group credentials used by\nworker processes. If group is omitted, a\ngroup whose name equals that of user is\nused.\n\nExample: `nginx_user = nginx www`\n\n**Note**: If the `kong` user and the `kong`\ngroup are not available, the default user\nand group credentials will be\n`nobody nobody`.\n",
      "sectionIndex": 4
    },
    "nginx_worker_processes": {
      "defaultValue": "auto",
      "description": "Determines the number of worker processes\nspawned by Nginx.\n\nSee http://nginx.org/en/docs/ngx_core_module.html#worker_processes\nfor detailed usage of the equivalent Nginx\ndirective and a description of accepted\nvalues.\n",
      "sectionIndex": 4
    },
    "nginx_daemon": {
      "defaultValue": "on",
      "description": "Determines whether Nginx will run as a daemon\nor as a foreground process. Mainly useful\nfor development or when running Kong inside\na Docker environment.\n\nSee http://nginx.org/en/docs/ngx_core_module.html#daemon.\n",
      "sectionIndex": 4
    },
    "mem_cache_size": {
      "defaultValue": "128m",
      "description": "Size of each of the two shared memory caches\nfor traditional mode database entities\nand runtime data, `kong_core_cache` and\n`kong_cache`.\n\nThe accepted units are `k` and `m`, with a minimum\nrecommended value of a few MBs.\n\n**Note**: As this option controls the size of two\ndifferent cache zones, the total memory Kong\nuses to cache entities might be double this value.\nThe created zones are shared by all worker\nprocesses and do not become larger when more\nworkers are used.\n",
      "sectionIndex": 4
    },
    "ssl_cipher_suite": {
      "defaultValue": "intermediate",
      "description": "Defines the TLS ciphers served by Nginx.\nAccepted values are `modern`,\n`intermediate`, `old`, `fips` or `custom`.\nIf you want to enable TLSv1.1, this value has to be `old`.\n\nSee https://wiki.mozilla.org/Security/Server_Side_TLS\nfor detailed descriptions of each cipher\nsuite. `fips` cipher suites are as described in\nhttps://wiki.openssl.org/index.php/FIPS_mode_and_TLS.\n",
      "sectionIndex": 4
    },
    "ssl_ciphers": {
      "defaultValue": null,
      "description": "Defines a custom list of TLS ciphers to be\nserved by Nginx. This list must conform to\nthe pattern defined by `openssl ciphers`.\nThis value is ignored if `ssl_cipher_suite`\nis not `custom`.\nIf you use DHE ciphers, you must also\nconfigure the `ssl_dhparam` parameter.\n",
      "sectionIndex": 4
    },
    "ssl_protocols": {
      "defaultValue": "TLSv1.2 TLSv1.3",
      "description": "Enables the specified protocols for\nclient-side connections. The set of\nsupported protocol versions also depends\non the version of OpenSSL Kong was built\nwith. This value is ignored if\n`ssl_cipher_suite` is not `custom`.\nIf you want to enable TLSv1.1, you should\nset `ssl_cipher_suite` to `old`.\n\nSee http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_protocols\n",
      "sectionIndex": 4
    },
    "ssl_prefer_server_ciphers": {
      "defaultValue": "on",
      "description": "Specifies that server ciphers should be\npreferred over client ciphers when using\nthe SSLv3 and TLS protocols. This value is\nignored if `ssl_cipher_suite` is not `custom`.\n\nSee http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_prefer_server_ciphers\n",
      "sectionIndex": 4
    },
    "ssl_dhparam": {
      "defaultValue": null,
      "description": "Defines DH parameters for DHE ciphers from the\npredefined groups: `ffdhe2048`, `ffdhe3072`,\n`ffdhe4096`, `ffdhe6144`, `ffdhe8192`,\nfrom the absolute path to a parameters file, or\ndirectly from the parameters content.\n\nThis value is ignored if `ssl_cipher_suite`\nis `modern` or `intermediate`. The reason is\nthat `modern` has no ciphers that need this,\nand `intermediate` uses `ffdhe2048`.\n\nSee http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_dhparam\n",
      "sectionIndex": 4
    },
    "ssl_session_tickets": {
      "defaultValue": "on",
      "description": "Enables or disables session resumption through\nTLS session tickets. This has no impact when\nused with TLSv1.3.\n\nKong enables this by default for performance\nreasons, but it has security implications:\nhttps://github.com/mozilla/server-side-tls/issues/135\n\nSee http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_session_tickets\n",
      "sectionIndex": 4
    },
    "ssl_session_timeout": {
      "defaultValue": "1d",
      "description": "Specifies a time during which a client may\nreuse the session parameters. See the rationale:\nhttps://github.com/mozilla/server-side-tls/issues/198\n\nSee http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_session_timeout\n",
      "sectionIndex": 4
    },
    "ssl_session_cache_size": {
      "defaultValue": "10m",
      "description": "Sets the size of the caches that store session parameters.\n\nSee https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_session_cache\n",
      "sectionIndex": 4
    },
    "ssl_cert": {
      "defaultValue": null,
      "description": "Comma-separated list of certificates for `proxy_listen` values with TLS enabled.\n\nIf more than one certificate is specified, it can be used to provide\nalternate types of certificates (for example, ECC certificates) that will be served\nto clients that support them. Note that to properly serve using ECC certificates,\nit is recommended to also set `ssl_cipher_suite` to\n`modern` or `intermediate`.\n\nUnless this option is explicitly set, Kong will auto-generate\na pair of default certificates (RSA + ECC) the first time it starts up and use\nthem for serving TLS requests.\n\nCertificates can be configured on this property with any of the following\nvalues:\n- absolute path to the certificate\n- certificate content\n- base64 encoded certificate content\n",
      "sectionIndex": 4
    },
    "ssl_cert_key": {
      "defaultValue": null,
      "description": "Comma-separated list of keys for `proxy_listen` values with TLS enabled.\n\nIf more than one certificate was specified for `ssl_cert`, then this\noption should contain the corresponding key for all certificates\nprovided in the same order.\n\nUnless this option is explicitly set, Kong will auto-generate\na pair of default private keys (RSA + ECC) the first time it starts up and use\nthem for serving TLS requests.\n\nKeys can be configured on this property with any of the following\nvalues:\n- absolute path to the certificate key\n- certificate key content\n- base64 encoded certificate key content\n",
      "sectionIndex": 4
    },
    "client_ssl": {
      "defaultValue": "off",
      "description": "Determines if Nginx should attempt to send client-side\nTLS certificates and perform Mutual TLS Authentication\nwith upstream service when proxying requests.\n",
      "sectionIndex": 4
    },
    "client_ssl_cert": {
      "defaultValue": null,
      "description": "If `client_ssl` is enabled, the client certificate\nfor the `proxy_ssl_certificate` directive.\n\nThis value can be overwritten dynamically with the `client_certificate`\nattribute of the `Service` object.\n\nThe certificate can be configured on this property with any of the following\nvalues:\n- absolute path to the certificate\n- certificate content\n- base64 encoded certificate content\n",
      "sectionIndex": 4
    },
    "client_ssl_cert_key": {
      "defaultValue": null,
      "description": "If `client_ssl` is enabled, the client TLS key\nfor the `proxy_ssl_certificate_key` directive.\n\nThis value can be overwritten dynamically with the `client_certificate`\nattribute of the `Service` object.\n\nThe certificate key can be configured on this property with any of the following\nvalues:\n- absolute path to the certificate key\n- certificate key content\n- base64 encoded certificate key content\n",
      "sectionIndex": 4
    },
    "admin_ssl_cert": {
      "defaultValue": null,
      "description": "Comma-separated list of certificates for `admin_listen` values with TLS enabled.\n\nSee docs for `ssl_cert` for detailed usage.\n",
      "sectionIndex": 4
    },
    "admin_ssl_cert_key": {
      "defaultValue": null,
      "description": "Comma-separated list of keys for `admin_listen` values with TLS enabled.\n\nSee docs for `ssl_cert_key` for detailed usage.\n",
      "sectionIndex": 4
    },
    "status_ssl_cert": {
      "defaultValue": null,
      "description": "Comma-separated list of certificates for `status_listen` values with TLS enabled.\n\nSee docs for `ssl_cert` for detailed usage.\n",
      "sectionIndex": 4
    },
    "status_ssl_cert_key": {
      "defaultValue": null,
      "description": "Comma-separated list of keys for `status_listen` values with TLS enabled.\n\nSee docs for `ssl_cert_key` for detailed usage.\n",
      "sectionIndex": 4
    },
    "debug_ssl_cert": {
      "defaultValue": null,
      "description": "Comma-separated list of certificates for `debug_listen` values with TLS enabled.\n\nSee docs for `ssl_cert` for detailed usage.\n",
      "sectionIndex": 4
    },
    "debug_ssl_cert_key": {
      "defaultValue": null,
      "description": "Comma-separated list of keys for `debug_listen` values with TLS enabled.\n\nSee docs for `ssl_cert_key` for detailed usage.\n",
      "sectionIndex": 4
    },
    "headers": {
      "defaultValue": [
        "server_tokens",
        "latency_tokens",
        "X-Kong-Request-Id"
      ],
      "description": "Comma-separated list of headers Kong should\ninject in client responses.\n\nAccepted values are:\n- `Server`: Injects `Server: kong/x.y.z`\n  on Kong-produced responses (e.g., Admin\n  API, rejected requests from auth plugin).\n- `Via`: Injects `Via: kong/x.y.z` for\n  successfully proxied requests.\n- `X-Kong-Proxy-Latency`: Time taken\n  (in milliseconds) by Kong to process\n  a request and run all plugins before\n  proxying the request upstream.\n- `X-Kong-Response-Latency`: Time taken\n  (in milliseconds) by Kong to produce\n  a response in case of, e.g., a plugin\n  short-circuiting the request, or in\n  case of an error.\n- `X-Kong-Upstream-Latency`: Time taken\n  (in milliseconds) by the upstream\n  service to send response headers.\n- `X-Kong-Admin-Latency`: Time taken\n  (in milliseconds) by Kong to process\n  an Admin API request.\n- `X-Kong-Upstream-Status`: The HTTP status\n  code returned by the upstream service.\n  This is particularly useful for clients to\n  distinguish upstream statuses if the\n  response is rewritten by a plugin.\n- `X-Kong-Request-Id`: Unique identifier of\n  the request.\n- `server_tokens`: Same as specifying both\n  `Server` and `Via`.\n- `latency_tokens`: Same as specifying\n  `X-Kong-Proxy-Latency`,\n  `X-Kong-Response-Latency`,\n  `X-Kong-Admin-Latency`, and\n  `X-Kong-Upstream-Latency`.\n\nIn addition to these, this value can be set\nto `off`, which prevents Kong from injecting\nany of the above headers. Note that this\ndoes not prevent plugins from injecting\nheaders of their own.\n\nExample: `headers = via, latency_tokens`\n",
      "sectionIndex": 4
    },
    "headers_upstream": {
      "defaultValue": "X-Kong-Request-Id",
      "description": "Comma-separated list of headers Kong should\ninject in requests to upstream.\n\nAt this time, the only accepted value is:\n- `X-Kong-Request-Id`: Unique identifier of\n  the request.\n\nIn addition, this value can be set\nto `off`, which prevents Kong from injecting\nthe above header. Note that this\ndoes not prevent plugins from injecting\nheaders of their own.\n",
      "sectionIndex": 4
    },
    "trusted_ips": {
      "defaultValue": null,
      "description": "Defines trusted IP address blocks that are\nknown to send correct `X-Forwarded-*`\nheaders.\nRequests from trusted IPs make Kong forward\ntheir `X-Forwarded-*` headers upstream.\nNon-trusted requests make Kong insert its\nown `X-Forwarded-*` headers.\n\nThis property also sets the\n`set_real_ip_from` directive(s) in the Nginx\nconfiguration. It accepts the same type of\nvalues (CIDR blocks) but as a\ncomma-separated list.\n\nTo trust *all* IPs, set this value to\n`0.0.0.0/0,::/0`.\n\nIf the special value `unix:` is specified,\nall UNIX-domain sockets will be trusted.\n\nSee http://nginx.org/en/docs/http/ngx_http_realip_module.html#set_real_ip_from\nfor examples of accepted values.\n",
      "sectionIndex": 4
    },
    "real_ip_header": {
      "defaultValue": "X-Real-IP",
      "description": "Defines the request header field whose value\nwill be used to replace the client address.\nThis value sets the `ngx_http_realip_module`\ndirective of the same name in the Nginx\nconfiguration.\n\nIf this value receives `proxy_protocol`:\n\n- at least one of the `proxy_listen` entries\n  must have the `proxy_protocol` flag\n  enabled.\n- the `proxy_protocol` parameter will be\n  appended to the `listen` directive of the\n  Nginx template.\n\nSee http://nginx.org/en/docs/http/ngx_http_realip_module.html#real_ip_header\nfor a description of this directive.\n",
      "sectionIndex": 4
    },
    "real_ip_recursive": {
      "defaultValue": "off",
      "description": "This value sets the `ngx_http_realip_module`\ndirective of the same name in the Nginx\nconfiguration.\n\nSee http://nginx.org/en/docs/http/ngx_http_realip_module.html#real_ip_recursive\nfor a description of this directive.\n",
      "sectionIndex": 4
    },
    "error_default_type": {
      "defaultValue": "text/plain",
      "description": "Default MIME type to use when the request\n`Accept` header is missing and Nginx\nis returning an error for the request.\nAccepted values are `text/plain`,\n`text/html`, `application/json`, and\n`application/xml`.\n",
      "sectionIndex": 4
    },
    "upstream_keepalive_pool_size": {
      "defaultValue": "512",
      "description": "Sets the default size of the upstream\nkeepalive connection pools.\nUpstream keepalive connection pools\nare segmented by the `dst ip/dst\nport/SNI` attributes of a connection.\nA value of `0` will disable upstream\nkeepalive connections by default, forcing\neach upstream request to open a new\nconnection.\n",
      "sectionIndex": 4
    },
    "upstream_keepalive_max_requests": {
      "defaultValue": "10000",
      "description": "Sets the default maximum number of\nrequests that can be proxied upstream\nthrough one keepalive connection.\nAfter the maximum number of requests\nis reached, the connection will be\nclosed.\nA value of `0` will disable this\nbehavior, and a keepalive connection\ncan be used to proxy an indefinite\nnumber of requests.\n",
      "sectionIndex": 4
    },
    "upstream_keepalive_idle_timeout": {
      "defaultValue": "60",
      "description": "Sets the default timeout (in seconds)\nfor which an upstream keepalive\nconnection should be kept open. When\nthe timeout is reached while the\nconnection has not been reused, it\nwill be closed.\nA value of `0` will disable this\nbehavior, and an idle keepalive\nconnection may be kept open\nindefinitely.\n",
      "sectionIndex": 4
    },
    "allow_debug_header": {
      "defaultValue": "off",
      "description": "Enable the `Kong-Debug` header function.\nIf it is `on`, Kong will add\n`Kong-Route-Id`, `Kong-Route-Name`, `Kong-Service-Id`,\nand `Kong-Service-Name` debug headers to the response when\nthe client request header `Kong-Debug: 1` is present.\n",
      "sectionIndex": 4
    },
    "nginx_main_worker_rlimit_nofile": {
      "defaultValue": "auto",
      "description": "Changes the limit on the maximum number of open files\nfor worker processes.\n\nThe special and default value of `auto` sets this\nvalue to `ulimit -n` with the upper bound limited to\n16384 as a measure to protect against excess memory use,\nand the lower bound of 1024 as a good default.\n\nSee http://nginx.org/en/docs/ngx_core_module.html#worker_rlimit_nofile\n",
      "sectionIndex": 5
    },
    "nginx_events_worker_connections": {
      "defaultValue": "auto",
      "description": "Sets the maximum number of simultaneous\nconnections that can be opened by a worker process.\n\nThe special and default value of `auto` sets this\nvalue to `ulimit -n` with the upper bound limited to\n16384 as a measure to protect against excess memory use,\nand the lower bound of 1024 as a good default.\n\nSee http://nginx.org/en/docs/ngx_core_module.html#worker_connections\n",
      "sectionIndex": 5
    },
    "nginx_http_client_header_buffer_size": {
      "defaultValue": "1k",
      "description": "Sets buffer size for reading the\nclient request headers.\nSee http://nginx.org/en/docs/http/ngx_http_core_module.html#client_header_buffer_size\n",
      "sectionIndex": 5
    },
    "nginx_http_large_client_header_buffers": {
      "defaultValue": "4 8k",
      "description": "Sets the maximum number and\nsize of buffers used for\nreading large client\nrequest headers.\nSee http://nginx.org/en/docs/http/ngx_http_core_module.html#large_client_header_buffers\n",
      "sectionIndex": 5
    },
    "nginx_http_client_max_body_size": {
      "defaultValue": "0",
      "description": "Defines the maximum request body size\nallowed by requests proxied by Kong,\nspecified in the Content-Length request\nheader. If a request exceeds this\nlimit, Kong will respond with a 413\n(Request Entity Too Large). Setting\nthis value to 0 disables checking the\nrequest body size.\nSee http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size\n",
      "sectionIndex": 5
    },
    "nginx_admin_client_max_body_size": {
      "defaultValue": "10m",
      "description": "Defines the maximum request body size for\nAdmin API.\n",
      "sectionIndex": 5
    },
    "nginx_http_charset": {
      "defaultValue": "UTF-8",
      "description": "Adds the specified charset to the \"Content-Type\"\nresponse header field. If this charset is different\nfrom the charset specified in the `source_charset`\ndirective, a conversion is performed.\n\nThe parameter `off` cancels the addition of\ncharset to the \"Content-Type\" response header field.\nSee http://nginx.org/en/docs/http/ngx_http_charset_module.html#charset\n",
      "sectionIndex": 5
    },
    "nginx_http_client_body_buffer_size": {
      "defaultValue": "8k",
      "description": "Defines the buffer size for reading\nthe request body. If the client\nrequest body is larger than this\nvalue, the body will be buffered to\ndisk. Note that when the body is\nbuffered to disk, Kong plugins that\naccess or manipulate the request\nbody may not work, so it is\nadvisable to set this value as high\nas possible (e.g., set it as high\nas `client_max_body_size` to force\nrequest bodies to be kept in\nmemory). Do note that\nhigh-concurrency environments will\nrequire significant memory\nallocations to process many\nconcurrent large request bodies.\nSee http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size\n",
      "sectionIndex": 5
    },
    "nginx_admin_client_body_buffer_size": {
      "defaultValue": "10m",
      "description": "Defines the buffer size for reading\nthe request body on Admin API.\n",
      "sectionIndex": 5
    },
    "nginx_http_lua_regex_match_limit": {
      "defaultValue": "100000",
      "description": "Global `MATCH_LIMIT` for PCRE\nregex matching. The default of `100000` should ensure\nat worst any regex Kong executes could finish within\nroughly 2 seconds.\n",
      "sectionIndex": 5
    },
    "nginx_http_lua_regex_cache_max_entries": {
      "defaultValue": "8192",
      "description": "Specifies the maximum number of entries allowed\nin the worker process level PCRE JIT compiled regex cache.\nIt is recommended to set it to at least (number of regex paths * 2)\nto avoid high CPU usages if you manually specified `router_flavor` to\n`traditional`. `expressions` and `traditional_compat` router do\nnot make use of the PCRE library and their behavior\nis unaffected by this setting.\n",
      "sectionIndex": 5
    },
    "nginx_http_keepalive_requests": {
      "defaultValue": "10000",
      "description": "Sets the maximum number of client requests that can be served through one\nkeep-alive connection. After the maximum number of requests are made,\nthe connection is closed.\nClosing connections periodically is necessary to free per-connection\nmemory allocations. Therefore, using too high a maximum number of requests\ncould result in excessive memory usage and is not recommended.\nSee: https://nginx.org/en/docs/http/ngx_http_core_module.html#keepalive_requests\n",
      "sectionIndex": 5
    },
    "database": {
      "defaultValue": "postgres",
      "description": "Determines the database (or no database) for\nthis node\nAccepted values are `postgres` and `off`.\n",
      "sectionIndex": 6
    },
    "pg_host": {
      "defaultValue": "127.0.0.1",
      "description": "Host of the Postgres server.\n",
      "sectionIndex": 6
    },
    "pg_port": {
      "defaultValue": "5432",
      "description": "Port of the Postgres server.\n",
      "sectionIndex": 6
    },
    "pg_timeout": {
      "defaultValue": "5000",
      "description": "Defines the timeout (in ms), for connecting,\nreading and writing.\n",
      "sectionIndex": 6
    },
    "pg_user": {
      "defaultValue": "kong",
      "description": "Postgres user.\n",
      "sectionIndex": 6
    },
    "pg_password": {
      "defaultValue": null,
      "description": "Postgres user's password.\n",
      "sectionIndex": 6
    },
    "pg_iam_auth": {
      "defaultValue": "off",
      "description": "Determines whether the AWS IAM database\nAuthentication will be used. When switch to\n`on`, the username defined in `pg_user` will\nbe used as the database account, and the\ndatabase connection will be forced to using\nTLS. `pg_password` will not be used when\nthe switch is `on`. Note that the corresponding\nIAM policy must be correct, otherwise connecting\nwill fail.\n",
      "sectionIndex": 6
    },
    "pg_iam_auth_assume_role_arn": {
      "defaultValue": null,
      "description": "The target AWS IAM role ARN that will be\nassumed when using AWS IAM database\nauthentication. Typically this is used\nfor operating between multiple roles\nor cross-accounts.\nIf you are not using assume role\nyou should not specify this value.\n",
      "sectionIndex": 6
    },
    "pg_iam_auth_role_session_name": {
      "defaultValue": "KongPostgres",
      "description": "The role session name used for role\nassuming in AWS IAM Database\nAuthentication. The default value is\n`KongPostgres`.\n",
      "sectionIndex": 6
    },
    "pg_iam_auth_sts_endpoint_url": {
      "defaultValue": null,
      "description": "The custom STS endpoint URL used for role assuming\nin AWS IAM Database Authentication.\n\nNote that this value will override the default\nSTS endpoint URL(which should be\n`https://sts.amazonaws.com`, or\n`https://sts.<region>.amazonaws.com` if you have\n`AWS_STS_REGIONAL_ENDPOINTS` set to `regional`).\n\nIf you are not using private VPC endpoint for STS\nservice, you should not specify this value.\n",
      "sectionIndex": 6
    },
    "pg_database": {
      "defaultValue": "kong",
      "description": "The database name to connect to.\n",
      "sectionIndex": 6
    },
    "pg_schema": {
      "defaultValue": null,
      "description": "The database schema to use. If unspecified,\nKong will respect the `search_path` value of\nyour PostgreSQL instance.\n",
      "sectionIndex": 6
    },
    "pg_ssl": {
      "defaultValue": "off",
      "description": "Toggles client-server TLS connections\nbetween Kong and PostgreSQL.\nBecause PostgreSQL uses the same port for TLS\nand non-TLS, this is only a hint. If the\nserver does not support TLS, the established\nconnection will be a plain one.\n",
      "sectionIndex": 6
    },
    "pg_ssl_version": {
      "defaultValue": "tlsv1_2",
      "description": "When using ssl between Kong and PostgreSQL,\nthe version of tls to use. Accepted values are\n`tlsv1_1`, `tlsv1_2`, `tlsv1_3`, or 'any'. When\n`any` is set, the client negotiates the highest\nversion with the server which can't be lower\nthan `tlsv1_1`.\n",
      "sectionIndex": 6
    },
    "pg_ssl_required": {
      "defaultValue": "off",
      "description": "When `pg_ssl` is on this determines if\nTLS must be used between Kong and PostgreSQL.\nIt aborts the connection if the server does\nnot support SSL connections.\n",
      "sectionIndex": 6
    },
    "pg_ssl_verify": {
      "defaultValue": "off",
      "description": "Toggles server certificate verification if\n`pg_ssl` is enabled.\nSee the `lua_ssl_trusted_certificate`\nsetting to specify a certificate authority.\n",
      "sectionIndex": 6
    },
    "pg_ssl_cert": {
      "defaultValue": null,
      "description": "The absolute path to the PEM encoded client\nTLS certificate for the PostgreSQL connection.\nMutual TLS authentication against\nPostgreSQL is only enabled if this value is set.\n",
      "sectionIndex": 6
    },
    "pg_ssl_cert_key": {
      "defaultValue": null,
      "description": "If `pg_ssl_cert` is set, the absolute path to\nthe PEM encoded client TLS private key for the\nPostgreSQL connection.\n",
      "sectionIndex": 6
    },
    "pg_max_concurrent_queries": {
      "defaultValue": "0",
      "description": "Sets the maximum number of concurrent queries\nthat can be executing at any given time. This\nlimit is enforced per worker process; the\ntotal number of concurrent queries for this\nnode will be will be:\n`pg_max_concurrent_queries * nginx_worker_processes`.\n\nThe default value of 0 removes this\nconcurrency limitation.\n",
      "sectionIndex": 6
    },
    "pg_semaphore_timeout": {
      "defaultValue": "60000",
      "description": "Defines the timeout (in ms) after which\nPostgreSQL query semaphore resource\nacquisition attempts will fail. Such\nfailures will generally result in the\nassociated proxy or Admin API request\nfailing with an HTTP 500 status code.\nDetailed discussion of this behavior is\navailable in the online documentation.\n",
      "sectionIndex": 6
    },
    "pg_keepalive_timeout": {
      "defaultValue": null,
      "description": "Specify the maximal idle timeout (in ms)\nfor the postgres connections in the pool.\nIf this value is set to 0 then the timeout interval\nis unlimited.\n\nIf not specified this value will be same as\n`lua_socket_keepalive_timeout`\n",
      "sectionIndex": 6
    },
    "pg_pool_size": {
      "defaultValue": null,
      "description": "Specifies the size limit (in terms of connection\ncount) for the Postgres server.\nNote that this connection pool is intended\nper Nginx worker rather than per Kong instance.\n\nIf not specified, the default value is the same as\n`lua_socket_pool_size`\n",
      "sectionIndex": 6
    },
    "pg_backlog": {
      "defaultValue": null,
      "description": "If specified, this value will limit the total\nnumber of open connections to the Postgres\nserver to `pg_pool_size`. If the connection\npool is full, subsequent connect operations\nwill be inserted in a queue with size equal\nto this option's value.\n\nIf the number of queued connect operations\nreaches `pg_backlog`, exceeding connections will fail.\n\nIf not specified, then number of open connections\nto the Postgres server is not limited.\n",
      "sectionIndex": 6
    },
    "pg_ro_host": {
      "defaultValue": null,
      "description": "Same as `pg_host`, but for the\nread-only connection.\n**Note:** Refer to the documentation\nsection above for detailed usage.\n",
      "sectionIndex": 6
    },
    "pg_ro_port": {
      "defaultValue": "<pg_port>",
      "description": "Same as `pg_port`, but for the\nread-only connection.\n",
      "sectionIndex": 6
    },
    "pg_ro_timeout": {
      "defaultValue": "<pg_timeout>",
      "description": "Same as `pg_timeout`, but for the\nread-only connection.\n",
      "sectionIndex": 6
    },
    "pg_ro_user": {
      "defaultValue": "<pg_user>",
      "description": "Same as `pg_user`, but for the\nread-only connection.\n",
      "sectionIndex": 6
    },
    "pg_ro_password": {
      "defaultValue": "<pg_password>",
      "description": "Same as `pg_password`, but for the\nread-only connection.\n",
      "sectionIndex": 6
    },
    "pg_ro_iam_auth": {
      "defaultValue": "<pg_iam_auth>",
      "description": "Same as `pg_iam_auth`, but for the\nread-only connection.\n",
      "sectionIndex": 6
    },
    "pg_ro_iam_auth_assume_role_arn": {
      "defaultValue": null,
      "description": "Same as `pg_iam_auth_assume_role_arn',\nbut for the read-only connection.\n",
      "sectionIndex": 6
    },
    "pg_ro_iam_auth_role_session_name": {
      "defaultValue": "KongPostgres",
      "description": "Same as `pg_iam_auth_role_session_name`,\nbut for the read-only connection.\n",
      "sectionIndex": 6
    },
    "pg_ro_iam_auth_sts_endpoint_url": {
      "defaultValue": null,
      "description": "Same as `pg_iam_auth_sts_endpoint_url`,\nbut for the read-only connection.\n",
      "sectionIndex": 6
    },
    "pg_ro_database": {
      "defaultValue": "<pg_database>",
      "description": "Same as `pg_database`, but for the\nread-only connection.\n",
      "sectionIndex": 6
    },
    "pg_ro_schema": {
      "defaultValue": "<pg_schema>",
      "description": "Same as `pg_schema`, but for the\nread-only connection.\n",
      "sectionIndex": 6
    },
    "pg_ro_ssl": {
      "defaultValue": "<pg_ssl>",
      "description": "Same as `pg_ssl`, but for the\nread-only connection.\n",
      "sectionIndex": 6
    },
    "pg_ro_ssl_required": {
      "defaultValue": "<pg_ssl_required>",
      "description": "Same as `pg_ssl_required`, but for the\nread-only connection.\n",
      "sectionIndex": 6
    },
    "pg_ro_ssl_verify": {
      "defaultValue": "<pg_ssl_verify>",
      "description": "Same as `pg_ssl_verify`, but for the\nread-only connection.\n",
      "sectionIndex": 6
    },
    "pg_ro_ssl_version": {
      "defaultValue": "<pg_ssl_version>",
      "description": "Same as `pg_ssl_version`, but for the\nread-only connection.\n",
      "sectionIndex": 6
    },
    "pg_ro_max_concurrent_queries": {
      "defaultValue": "<pg_max_concurrent_queries>",
      "description": "Same as `pg_max_concurrent_queries`, but for\nthe read-only connection.\nNote: read-only concurrency is not shared\nwith the main (read-write) connection.\n",
      "sectionIndex": 6
    },
    "pg_ro_semaphore_timeout": {
      "defaultValue": "<pg_semaphore_timeout>",
      "description": "Same as `pg_semaphore_timeout`, but for the\nread-only connection.\n",
      "sectionIndex": 6
    },
    "pg_ro_keepalive_timeout": {
      "defaultValue": "<pg_keepalive_timeout>",
      "description": "Same as `pg_keepalive_timeout`, but for the\nread-only connection.\n",
      "sectionIndex": 6
    },
    "pg_ro_pool_size": {
      "defaultValue": "<pg_pool_size>",
      "description": "Same as `pg_pool_size`, but for the\nread-only connection.\n",
      "sectionIndex": 6
    },
    "pg_ro_backlog": {
      "defaultValue": "<pg_backlog>",
      "description": "Same as `pg_backlog`, but for the\nread-only connection.\n",
      "sectionIndex": 6
    },
    "declarative_config": {
      "defaultValue": null,
      "description": "The path to the declarative configuration\nfile which holds the specification of all\nentities (routes, services, consumers, etc.)\nto be used when the `database` is set to\n`off`.\n\nEntities are stored in Kong's LMDB cache,\nso you must ensure that enough headroom is\nallocated to it via the `lmdb_map_size`\nproperty.\n\nIf the hybrid mode `role` is set to `data_plane`\nand there's no configuration cache file,\nthis configuration is used before connecting\nto the control plane node as a user-controlled\nfallback.\n",
      "sectionIndex": 6
    },
    "declarative_config_string": {
      "defaultValue": null,
      "description": "The declarative configuration as a string\n",
      "sectionIndex": 6
    },
    "lmdb_environment_path": {
      "defaultValue": "dbless.lmdb",
      "description": "Directory where the LMDB database files used by\nDB-less and hybrid mode to store Kong\nconfigurations reside.\n\nThis path is relative under the Kong `prefix`.\n",
      "sectionIndex": 6
    },
    "lmdb_map_size": {
      "defaultValue": "2048m",
      "description": "Maximum size of the LMDB memory map, used to store the\nDB-less and hybrid mode configurations. Default is 2048m.\n\nThis config defines the limit of LMDB file size; the\nactual file size growth will be on-demand and\nproportional to the actual config size.\n\nNote this value can be set very large, say a couple of GBs,\nto accommodate future database growth and\nMulti-Version Concurrency Control (MVCC) headroom needs.\nThe file size of the LMDB database file should stabilize\nafter a few config reloads/hybrid mode syncs, and the actual\nmemory used by the LMDB database will be smaller than\nthe file size due to dynamic swapping of database pages by\nthe OS.\n",
      "sectionIndex": 6
    },
    "db_update_frequency": {
      "defaultValue": "5",
      "description": "Frequency (in seconds) at which to check for\nupdated entities with the datastore.\n\nWhen a node creates, updates, or deletes an\nentity via the Admin API, other nodes need\nto wait for the next poll (configured by\nthis value) to eventually purge the old\ncached entity and start using the new one.\n",
      "sectionIndex": 7
    },
    "db_update_propagation": {
      "defaultValue": "0",
      "description": "Time (in seconds) taken for an entity in the\ndatastore to be propagated to replica nodes\nof another datacenter.\n\nWhen set, this property will increase the\ntime taken by Kong to propagate the change\nof an entity.\n\nSingle-datacenter setups or PostgreSQL\nservers should suffer no such delays, and\nthis value can be safely set to 0.\nPostgres setups with read replicas should\nset this value to the maximum expected replication\nlag between the writer and reader instances.\n",
      "sectionIndex": 7
    },
    "db_cache_ttl": {
      "defaultValue": "0",
      "description": "Time-to-live (in seconds) of an entity from\nthe datastore when cached by this node.\n\nDatabase misses (no entity) are also cached\naccording to this setting if you do not\nconfigure `db_cache_neg_ttl`.\n\nIf set to 0 (default), such cached entities\nor misses never expire.\n",
      "sectionIndex": 7
    },
    "db_cache_neg_ttl": {
      "defaultValue": null,
      "description": "Time-to-live (in seconds) of a datastore\nmiss (no entity).\n\nIf not specified (default), `db_cache_ttl`\nvalue will be used instead.\n\nIf set to 0, misses will never expire.\n",
      "sectionIndex": 7
    },
    "db_resurrect_ttl": {
      "defaultValue": "30",
      "description": "Time (in seconds) for which stale entities\nfrom the datastore should be resurrected\nwhen they cannot be refreshed (e.g., the\ndatastore is unreachable). When this TTL\nexpires, a new attempt to refresh the stale\nentities will be made.\n",
      "sectionIndex": 7
    },
    "db_cache_warmup_entities": {
      "defaultValue": "services",
      "description": "Entities to be pre-loaded from the datastore\ninto the in-memory cache at Kong start-up.\nThis speeds up the first access of endpoints\nthat use the given entities.\n\nWhen the `services` entity is configured\nfor warmup, the DNS entries for values in\nits `host` attribute are pre-resolved\nasynchronously as well.\n\nCache size set in `mem_cache_size` should\nbe set to a value large enough to hold all\ninstances of the specified entities.\nIf the size is insufficient, Kong will log\na warning.\n",
      "sectionIndex": 7
    },
    "dns_resolver": {
      "defaultValue": null,
      "description": "Comma-separated list of nameservers, each\nentry in `ip[:port]` format to be used by\nKong. If not specified, the nameservers in\nthe local `resolv.conf` file will be used.\nPort defaults to 53 if omitted. Accepts\nboth IPv4 and IPv6 addresses.\n",
      "sectionIndex": 8
    },
    "dns_hostsfile": {
      "defaultValue": "/etc/hosts",
      "description": "The hosts file to use. This file is read\nonce and its content is static in memory.\nTo read the file again after modifying it,\nKong must be reloaded.\n",
      "sectionIndex": 8
    },
    "dns_order": {
      "defaultValue": [
        "LAST",
        "SRV",
        "A",
        "CNAME"
      ],
      "description": "The order in which to resolve different\nrecord types. The `LAST` type means the\ntype of the last successful lookup (for the\nspecified name). The format is a (case\ninsensitive) comma-separated list.\n",
      "sectionIndex": 8
    },
    "dns_valid_ttl": {
      "defaultValue": null,
      "description": "By default, DNS records are cached using\nthe TTL value of a response. If this\nproperty receives a value (in seconds), it\nwill override the TTL for all records.\n",
      "sectionIndex": 8
    },
    "dns_stale_ttl": {
      "defaultValue": "3600",
      "description": "Defines, in seconds, how long a record will\nremain in cache past its TTL. This value\nwill be used while the new DNS record is\nfetched in the background.\nStale data will be used from expiry of a\nrecord until either the refresh query\ncompletes, or the `dns_stale_ttl` number of\nseconds have passed.\nThis configuration enables Kong to be more\nresilient during resolver downtime.\n",
      "sectionIndex": 8
    },
    "dns_cache_size": {
      "defaultValue": "10000",
      "description": "Defines the maximum allowed number of\nDNS records stored in memory cache.\nLeast recently used DNS records are discarded\nfrom cache if it is full. Both errors and\ndata are cached; therefore, a single name query\ncan easily take up 10-15 slots.\n",
      "sectionIndex": 8
    },
    "dns_not_found_ttl": {
      "defaultValue": "30",
      "description": "TTL in seconds for empty DNS responses and\n\"(3) name error\" responses.\n",
      "sectionIndex": 8
    },
    "dns_error_ttl": {
      "defaultValue": "1",
      "description": "TTL in seconds for error responses.\n",
      "sectionIndex": 8
    },
    "dns_no_sync": {
      "defaultValue": "off",
      "description": "If enabled, then upon a cache-miss every\nrequest will trigger its own DNS query.\nWhen disabled, multiple requests for the\nsame name/type will be synchronized to a\nsingle query.\n",
      "sectionIndex": 8
    },
    "vault_env_prefix": {
      "defaultValue": null,
      "description": "Defines the environment variable vault's\ndefault prefix. For example if you have\nall your secrets stored in environment\nvariables prefixed with `SECRETS_`, it\ncan be configured here so that it isn't\nnecessary to repeat them in Vault\nreferences.\n",
      "sectionIndex": 10
    },
    "vault_aws_region": {
      "defaultValue": null,
      "description": "The AWS region your vault is located in.\n",
      "sectionIndex": 10
    },
    "vault_aws_endpoint_url": {
      "defaultValue": null,
      "description": "The AWS SecretsManager service endpoint url.\nIf not specified, the value used by vault will\nbe the official AWS SecretsManager service url\nwhich is\n`https://secretsmanager.<region>.amazonaws.com`\nYou can specify a complete URL(including\nthe \"http/https\" scheme) to override the\nendpoint that vault will connect to.\n",
      "sectionIndex": 10
    },
    "vault_aws_assume_role_arn": {
      "defaultValue": null,
      "description": "The target AWS IAM role ARN that will be\nassumed. Typically this is used for\noperating between multiple roles\nor cross-accounts.\nIf you are not using assume role\nyou should not specify this value.\n",
      "sectionIndex": 10
    },
    "vault_aws_role_session_name": {
      "defaultValue": "KongVault",
      "description": "The role session name used for role\nassuming. The default value is\n`KongVault`.\n",
      "sectionIndex": 10
    },
    "vault_aws_sts_endpoint_url": {
      "defaultValue": null,
      "description": "The custom STS endpoint URL used for role assuming\nin AWS Vault.\n\nNote that this value will override the default\nSTS endpoint URL(which should be\n`https://sts.amazonaws.com`, or\n`https://sts.<region>.amazonaws.com` if you have\n`AWS_STS_REGIONAL_ENDPOINTS` set to `regional`).\n\nIf you are not using private VPC endpoint for STS\nservice, you should not specify this value.\n",
      "sectionIndex": 10
    },
    "vault_aws_ttl": {
      "defaultValue": "0",
      "description": "Time-to-live (in seconds) of a secret from\nthe AWS vault when cached by this node.\n\nAWS vault misses (no secret) are also cached\naccording to this setting if you do not\nconfigure `vault_aws_neg_ttl`.\n\nIf set to 0 (default), such cached secrets\nor misses never expire.\n",
      "sectionIndex": 10
    },
    "vault_aws_neg_ttl": {
      "defaultValue": null,
      "description": "Time-to-live (in seconds) of a AWS vault\nmiss (no secret).\n\nIf not specified (default), `vault_aws_ttl`\nvalue will be used instead.\n\nIf set to 0, misses will never expire.\n",
      "sectionIndex": 10
    },
    "vault_aws_resurrect_ttl": {
      "defaultValue": null,
      "description": "Time (in seconds) for which stale secrets\nfrom the AWS vault should be resurrected for\nwhen they cannot be refreshed (e.g., the\nAWS vault is unreachable). When this TTL\nexpires, a new attempt to refresh the stale\nsecrets will be made.\n",
      "sectionIndex": 10
    },
    "vault_gcp_project_id": {
      "defaultValue": null,
      "description": "The project ID from your Google API Console.\n",
      "sectionIndex": 10
    },
    "vault_gcp_ttl": {
      "defaultValue": "0",
      "description": "Time-to-live (in seconds) of a secret from\nthe GCP vault when cached by this node.\n\nGCP vault misses (no secret) are also cached\naccording to this setting if you do not\nconfigure `vault_gcp_neg_ttl`.\n\nIf set to 0 (default), such cached secrets\nor misses never expire.\n",
      "sectionIndex": 10
    },
    "vault_gcp_neg_ttl": {
      "defaultValue": null,
      "description": "Time-to-live (in seconds) of a AWS vault\nmiss (no secret).\n\nIf not specified (default), `vault_gcp_ttl`\nvalue will be used instead.\n\nIf set to 0, misses will never expire.\n",
      "sectionIndex": 10
    },
    "vault_gcp_resurrect_ttl": {
      "defaultValue": null,
      "description": "Time (in seconds) for which stale secrets\nfrom the GCP vault should be resurrected for\nwhen they cannot be refreshed (e.g., the\nGCP vault is unreachable). When this TTL\nexpires, a new attempt to refresh the stale\nsecrets will be made.\n",
      "sectionIndex": 10
    },
    "vault_hcv_protocol": {
      "defaultValue": "http",
      "description": "The protocol to connect with. Accepts one of\n`http` or `https`.\n",
      "sectionIndex": 10
    },
    "vault_hcv_host": {
      "defaultValue": "127.0.0.1",
      "description": "The hostname of your HashiCorp vault.\n",
      "sectionIndex": 10
    },
    "vault_hcv_port": {
      "defaultValue": "8200",
      "description": "The port number of your HashiCorp vault.\n",
      "sectionIndex": 10
    },
    "vault_hcv_namespace": {
      "defaultValue": null,
      "description": "Namespace for the HashiCorp Vault. Vault\nEnterprise requires a namespace to\nsuccessfully connect to it.\n",
      "sectionIndex": 10
    },
    "vault_hcv_mount": {
      "defaultValue": "secret",
      "description": "The mount point.\n",
      "sectionIndex": 10
    },
    "vault_hcv_kv": {
      "defaultValue": "v1",
      "description": "The secrets engine version. Accepts `v1` or\n`v2`.\n",
      "sectionIndex": 10
    },
    "vault_hcv_token": {
      "defaultValue": null,
      "description": "A token string.\n",
      "sectionIndex": 10
    },
    "vault_hcv_auth_method": {
      "defaultValue": "token",
      "description": "Defines the authentication mechanism when\nconnecting to the Hashicorp Vault service.\nAccepted values are: `token`,\n`kubernetes` or `approle`.\n",
      "sectionIndex": 10
    },
    "vault_hcv_kube_role": {
      "defaultValue": null,
      "description": "Defines the HashiCorp Vault role for the\nKubernetes service account of the running\npod. `vault_hcv_auth_method` must be\nset to `kubernetes` for this to activate.\n",
      "sectionIndex": 10
    },
    "vault_hcv_kube_auth_path": {
      "defaultValue": "kubernetes",
      "description": "Place where the Kubernetes auth method will be\naccessible: `/v1/auth/<vault_hcv_kube_auth_path>`\n",
      "sectionIndex": 10
    },
    "vault_hcv_kube_api_token_file": {
      "defaultValue": null,
      "description": "Defines where the Kubernetes service account\ntoken should be read from the pod's\nfilesystem, if using a non-standard\ncontainer platform setup.\n",
      "sectionIndex": 10
    },
    "vault_hcv_approle_auth_path": {
      "defaultValue": "approle",
      "description": "Place where the Approle auth method will be\naccessible: `/v1/auth/<vault_hcv_approle_auth_path>`\n",
      "sectionIndex": 10
    },
    "vault_hcv_approle_role_id": {
      "defaultValue": null,
      "description": "The Role ID of the Approle in HashiCorp Vault.\n",
      "sectionIndex": 10
    },
    "vault_hcv_approle_secret_id": {
      "defaultValue": null,
      "description": "The Secret ID of the Approle in HashiCorp Vault.\n",
      "sectionIndex": 10
    },
    "vault_hcv_approle_secret_id_file": {
      "defaultValue": null,
      "description": "Defines where the Secret ID should be read from\nthe pod's filesystem. This is usually used with\nHashiCorp Vault's response wrapping.\n",
      "sectionIndex": 10
    },
    "vault_hcv_approle_response_wrapping": {
      "defaultValue": "false",
      "description": "Defines whether the Secret ID read from configuration\nor file is actually a response-wrapping token instead\nof a real Secret ID.\n",
      "sectionIndex": 10
    },
    "vault_hcv_ttl": {
      "defaultValue": "0",
      "description": "Time-to-live (in seconds) of a secret from\nthe HashiCorp vault when cached by this node.\n\nHashiCorp vault misses (no secret) are also\ncached according to this setting if you do not\nconfigure `vault_hcv_neg_ttl`.\n\nIf set to 0 (default), such cached secrets\nor misses never expire.\n",
      "sectionIndex": 10
    },
    "vault_hcv_neg_ttl": {
      "defaultValue": null,
      "description": "Time-to-live (in seconds) of a HashiCorp vault\nmiss (no secret).\n\nIf not specified (default), `vault_hcv_ttl`\nvalue will be used instead.\n\nIf set to 0, misses will never expire.\n",
      "sectionIndex": 10
    },
    "vault_hcv_resurrect_ttl": {
      "defaultValue": null,
      "description": "Time (in seconds) for which stale secrets\nfrom the HashiCorp vault should be resurrected\nfor when they cannot be refreshed (e.g., the\nHashiCorp vault is unreachable). When this TTL\nexpires, a new attempt to refresh the stale\nsecrets will be made.\n",
      "sectionIndex": 10
    },
    "vault_azure_vault_uri": {
      "defaultValue": null,
      "description": "The URI the vault is reachable from.\n",
      "sectionIndex": 10
    },
    "vault_azure_client_id": {
      "defaultValue": null,
      "description": "The client ID from your registered Application. Visit your Azure Dashboard and select *App Registrations* to check your client ID.\n",
      "sectionIndex": 10
    },
    "vault_azure_tenant_id": {
      "defaultValue": null,
      "description": "The DirectoryId and TenantId both equate to the GUID representing the ActiveDirectory Tenant. Depending on context, either term may be used by Microsoft documentation and products, which can be confusing. In other words, the \"Tenant ID\" IS the \"Directory ID\"\n",
      "sectionIndex": 10
    },
    "vault_azure_type": {
      "defaultValue": "secrets",
      "description": "Azure Key Vault enables Microsoft Azure applications and users to store and use several types of secret/key data: keys, secrets, and certificates. Kong currently only supports the `Secrets`\n",
      "sectionIndex": 10
    },
    "vault_azure_ttl": {
      "defaultValue": "0",
      "description": "Time-to-live (in seconds) of a secret from\nthe Azure Key Vault when cached by this node.\n\nKey Vault misses (no secret) are also\ncached according to this setting if you do not\nconfigure `vault_azure_neg_ttl`.\n\nIf set to 0 (default), such cached secrets\nor misses never expire.\n",
      "sectionIndex": 10
    },
    "vault_azure_neg_ttl": {
      "defaultValue": null,
      "description": "Time-to-live (in seconds) of a Azure Key Vault\nmiss (no secret).\n\nIf not specified (default), `vault_azure_ttl`\nvalue will be used instead.\n\nIf set to 0, misses will never expire.\n",
      "sectionIndex": 10
    },
    "vault_azure_resurrect_ttl": {
      "defaultValue": null,
      "description": "Time (in seconds) for which stale secrets\nfrom the Azure Key Vault should be resurrected\nfor when they cannot be refreshed (e.g., the\nthe vault is unreachable). When this TTL\nexpires, a new attempt to refresh the stale\nsecrets will be made.\n",
      "sectionIndex": 10
    },
    "worker_consistency": {
      "defaultValue": "eventual",
      "description": "Defines whether this node should rebuild its\nstate synchronously or asynchronously (the\nbalancers and the router are rebuilt on\nupdates that affect them, e.g., updates to\nroutes, services, or upstreams via the admin\nAPI or loading a declarative configuration\nfile). (This option is deprecated and will be\nremoved in future releases. The new default\nis `eventual`.)\n\nAccepted values are:\n\n- `strict`: the router will be rebuilt\n  synchronously, causing incoming requests to\n  be delayed until the rebuild is finished.\n  (This option is deprecated and will be removed\n   in future releases. The new default is `eventual`)\n- `eventual`: the router will be rebuilt\n  asynchronously via a recurring background\n  job running every second inside of each\n  worker.\n\nNote that `strict` ensures that all workers\nof a given node will always proxy requests\nwith an identical router, but increased\nlong-tail latency can be observed if\nfrequent routes and services updates are\nexpected.\nUsing `eventual` will help prevent long-tail\nlatency issues in such cases, but may\ncause workers to route requests differently\nfor a short period of time after routes and\nservices updates.\n",
      "sectionIndex": 11
    },
    "worker_state_update_frequency": {
      "defaultValue": "5",
      "description": "Defines how often the worker state changes are\nchecked with a background job. When a change\nis detected, a new router or balancer will be\nbuilt, as needed. Raising this value will\ndecrease the load on database servers and\nresult in less jitter in proxy latency, but\nit might take more time to propagate changes\nto each individual worker.\n",
      "sectionIndex": 11
    },
    "router_flavor": {
      "defaultValue": "traditional_compatible",
      "description": "Selects the router implementation to use when\nperforming request routing. Incremental router\nrebuild is available when the flavor is set\nto either `expressions` or\n`traditional_compatible`, which could\nsignificantly shorten rebuild time for a large\nnumber of routes.\n\nAccepted values are:\n\n- `traditional_compatible`: the DSL-based expression\n  router engine will be used under the hood. However,\n  the router config interface will be the same\n  as `traditional`, and expressions are\n  automatically generated at router build time.\n  The `expression` field on the `route` object\n  is not visible.\n- `expressions`: the DSL-based expression router engine\n  will be used under the hood. The traditional router\n  config interface is still visible, and you can also write\n  router Expressions manually and provide them in the\n  `expression` field on the `route` object.\n- `traditional`: the pre-3.0 router engine will be\n  used. The config interface will be the same as\n  pre-3.0 Kong, and the `expression` field on the\n  `route` object is not visible.\n\n  Deprecation warning: In Kong 3.0, `traditional`\n  mode should be avoided and only be used if\n  `traditional_compatible` does not work as expected.\n  This flavor of the router will be removed in the next\n  major release of Kong.\n",
      "sectionIndex": 11
    },
    "lua_max_req_headers": {
      "defaultValue": "100",
      "description": "Maximum number of request headers to parse by default.\n\nThis argument can be set to an integer between 1 and 1000.\n\nWhen proxying, Kong sends all the request headers,\nand this setting does not have any effect. It is used\nto limit Kong and its plugins from reading too many\nrequest headers.\n",
      "sectionIndex": 11
    },
    "lua_max_resp_headers": {
      "defaultValue": "100",
      "description": "Maximum number of response headers to parse by default.\n\nThis argument can be set to an integer between 1 and 1000.\n\nWhen proxying, Kong returns all the response headers,\nand this setting does not have any effect. It is used\nto limit Kong and its plugins from reading too many\nresponse headers.\n",
      "sectionIndex": 11
    },
    "lua_max_uri_args": {
      "defaultValue": "100",
      "description": "Maximum number of request URI arguments to parse by\ndefault.\n\nThis argument can be set to an integer between 1 and 1000.\n\nWhen proxying, Kong sends all the request query\narguments, and this setting does not have any effect.\nIt is used to limit Kong and its plugins from reading\ntoo many query arguments.\n",
      "sectionIndex": 11
    },
    "lua_max_post_args": {
      "defaultValue": "100",
      "description": "Maximum number of request post arguments to parse by\ndefault.\n\nThis argument can be set to an integer between 1 and 1000.\n\nWhen proxying, Kong sends all the request post\narguments, and this setting does not have any effect.\nIt is used to limit Kong and its plugins from reading\ntoo many post arguments.\n",
      "sectionIndex": 11
    },
    "lua_ssl_trusted_certificate": {
      "defaultValue": "system",
      "description": "Comma-separated list of certificate authorities\nfor Lua cosockets in PEM format.\n\nThe special value `system` attempts to search for the\n\"usual default\" provided by each distro, according\nto an arbitrary heuristic. In the current implementation,\nthe following pathnames will be tested in order,\nand the first one found will be used:\n\n- `/etc/ssl/certs/ca-certificates.crt` (Debian/Ubuntu/Gentoo)\n- `/etc/pki/tls/certs/ca-bundle.crt` (Fedora/RHEL 6)\n- `/etc/ssl/ca-bundle.pem` (OpenSUSE)\n- `/etc/pki/tls/cacert.pem` (OpenELEC)\n- `/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem` (CentOS/RHEL 7)\n- `/etc/ssl/cert.pem` (OpenBSD, Alpine)\n\n`system` can be used by itself or in conjunction with other\nCA file paths.\n\nWhen `pg_ssl_verify` is enabled, these\ncertificate authority files will be\nused for verifying Kong's database connections.\n\nCertificates can be configured on this property\nwith any of the following values:\n- `system`\n- absolute path to the certificate\n- certificate content\n- base64 encoded certificate content\n\nSee https://github.com/openresty/lua-nginx-module#lua_ssl_trusted_certificate\n",
      "sectionIndex": 12
    },
    "lua_ssl_verify_depth": {
      "defaultValue": "1",
      "description": "Sets the verification depth in the server\ncertificates chain used by Lua cosockets,\nset by `lua_ssl_trusted_certificate`.\nThis includes the certificates configured\nfor Kong's database connections.\nIf the maximum depth is reached before\nreaching the end of the chain, verification\nwill fail. This helps mitigate certificate\nbased DoS attacks.\n\nSee https://github.com/openresty/lua-nginx-module#lua_ssl_verify_depth\n",
      "sectionIndex": 12
    },
    "lua_ssl_protocols": {
      "defaultValue": "TLSv1.2 TLSv1.3",
      "description": "Defines the TLS versions supported\nwhen handshaking with OpenResty's\nTCP cosocket APIs.\n\nThis affects connections made by Lua\ncode, such as connections to the\ndatabase Kong uses, or when sending logs\nusing a logging plugin. It does *not*\naffect connections made to the upstream\nService or from downstream clients.\n",
      "sectionIndex": 12
    },
    "lua_package_path": {
      "defaultValue": "./?.lua;./?/init.lua;",
      "description": "Sets the Lua module search path\n(LUA_PATH). Useful when developing\nor using custom plugins not stored\nin the default search path.\n\nSee https://github.com/openresty/lua-nginx-module#lua_package_path\n",
      "sectionIndex": 12
    },
    "lua_package_cpath": {
      "defaultValue": null,
      "description": "Sets the Lua C module search path\n(LUA_CPATH).\n\nSee https://github.com/openresty/lua-nginx-module#lua_package_cpath\n",
      "sectionIndex": 12
    },
    "lua_socket_pool_size": {
      "defaultValue": "256",
      "description": "Specifies the size limit for every cosocket\nconnection pool associated with every remote\nserver.\n\nSee https://github.com/openresty/lua-nginx-module#lua_socket_pool_size\n",
      "sectionIndex": 12
    },
    "enforce_rbac": {
      "defaultValue": "off",
      "description": "Specifies whether Admin API RBAC is enforced.\nAccepts one of `entity`, `both`, `on`, or\n`off`.\n\n- `on`: only endpoint-level authorization\n  is enforced.\n- `entity`: entity-level authorization\n  applies.\n- `both`: enables both endpoint and\n  entity-level authorization.\n- `off`: disables both endpoint and\n  entity-level authorization.\n\nWhen enabled, Kong will deny requests to the\nAdmin API when a nonexistent or invalid RBAC\nauthorization token is passed, or the RBAC\nuser with which the token is associated does\nnot have permissions to access/modify the\nrequested resource.\n",
      "sectionIndex": 12
    },
    "rbac_auth_header": {
      "defaultValue": "Kong-Admin-Token",
      "description": "Defines the name of the HTTP request\nheader from which the Admin API will\nattempt to authenticate the RBAC user.\n",
      "sectionIndex": 12
    },
    "event_hooks_enabled": {
      "defaultValue": "on",
      "description": "When enabled, event hook entities represent a relationship\nbetween an event (source and event) and an action\n(handler). Similar to web hooks, event hooks can be used to\ncommunicate Kong Gateway service events. When a particular\nevent happens on a service, the event hook calls a URL with\ninformation about that event. Event hook configurations\ndiffer depending on the handler. The events that are\ntriggered send associated data.\n\nSee: https://docs.konghq.com/gateway/api/admin-ee/latest/#/Event-hooks/get-event-hooks\n",
      "sectionIndex": 12
    },
    "fips": {
      "defaultValue": "off",
      "description": "Turn on FIPS mode; this mode is only available on a FIPS build.\n",
      "sectionIndex": 12
    },
    "admin_gui_listen": {
      "defaultValue": [
        "0.0.0.0:8002",
        "0.0.0.0:8445 ssl"
      ],
      "description": "Kong Manager Listeners\n\nComma-separated list of addresses and ports on which\nKong will expose Kong Manager. This web application\nlets you configure and manage Kong, and therefore\nshould be kept secured.\n\nSuffixes can be specified for each pair, similarly to\nthe `admin_listen` directive.\n",
      "sectionIndex": 13
    },
    "admin_gui_url": {
      "defaultValue": null,
      "description": "Kong Manager URL\n\nComma-separated list of addresses (the lookup or balancer) for Kong Manager.\n\nAccepted format (items in square brackets are optional):\n\n  `<scheme>://<IP / HOSTNAME>[:<PORT>][<PATH>][, <scheme>://<IP / HOSTNAME>[:<PORT>][<PATH>]]`\n\nExamples:\n\n- `http://127.0.0.1:8003`\n- `https://kong-admin.test`\n- `http://dev-machine`\n- `http://127.0.0.1:8003, https://exmple.com/manager`\n",
      "sectionIndex": 13
    },
    "admin_gui_path": {
      "defaultValue": "/",
      "description": "Kong Manager base path\n\nThis configuration parameter allows the user to customize\nthe path prefix where Kong Manager is served. When updating\nthis parameter, it's recommended to update the path in `admin_gui_url`\nas well.\n\nAccepted format:\n\n- Path must start with a `/`\n- Path must not end with a `/` (except for the `/`)\n- Path can only contain letters, digits, hyphens (`-`),\nunderscores (`_`), and slashes (`/`)\n- Path must not contain continuous slashes (e.g., `//` and `///`)\n\nExamples:\n\n- `/`\n- `/manager`\n- `/kong-manager`\n- `/kong/manager`\n",
      "sectionIndex": 13
    },
    "admin_gui_api_url": {
      "defaultValue": null,
      "description": "Hierarchical part of a URI which is composed\noptionally of a host, port, and path at which the\nAdmin API accepts HTTP or HTTPS traffic. When\nthis config is disabled, Kong Manager will\nuse the window protocol + host and append the\nresolved admin_listen HTTP/HTTPS port.\n",
      "sectionIndex": 13
    },
    "admin_gui_ssl_cert": {
      "defaultValue": null,
      "description": "The SSL certificate for `admin_gui_listen` values\nwith SSL enabled.\n\nvalues:\n- absolute path to the certificate\n- certificate content\n- base64 encoded certificate content\n",
      "sectionIndex": 13
    },
    "admin_gui_ssl_cert_key": {
      "defaultValue": null,
      "description": "The SSL key for `admin_gui_listen` values with SSL\nenabled.\n\nvalues:\n- absolute path to the certificate key\n- certificate key content\n- base64 encoded certificate key content\n",
      "sectionIndex": 13
    },
    "admin_gui_flags": {
      "defaultValue": "{}",
      "description": "Alters the layout Admin GUI (JSON)\nto enable Kong Immunity in the Admin GUI.\n",
      "sectionIndex": 13
    },
    "admin_gui_access_log": {
      "defaultValue": "logs/admin_gui_access.log",
      "description": "Kong Manager Access Logs\n\nHere you can set an absolute or relative path for Kong\nManager access logs. When the path is relative,\nlogs are placed in the `prefix` location.\n\nSetting this value to `off` disables access logs\nfor Kong Manager.\n",
      "sectionIndex": 13
    },
    "admin_gui_error_log": {
      "defaultValue": "logs/admin_gui_error.log",
      "description": "Kong Manager Error Logs\n\nHere you can set an absolute or relative path for Kong\nManager access logs. When the path is relative,\nlogs are placed in the `prefix` location.\n\nSetting this value to `off` disables error logs for\nKong Manager.\n\nGranularity can be adjusted through the `log_level`\ndirective.\n",
      "sectionIndex": 13
    },
    "admin_gui_auth": {
      "defaultValue": null,
      "description": "Kong Manager Authentication Plugin Name\n\nSecures access to Kong Manager by specifying an\nauthentication plugin to use.\n\nSupported Plugins:\n\n- `basic-auth`: Basic Authentication plugin\n- `ldap-auth-advanced`: LDAP Authentication plugin\n- `openid-connect`: OpenID Connect Authentication\n  plugin\n",
      "sectionIndex": 13
    },
    "admin_gui_auth_conf": {
      "defaultValue": null,
      "description": "Kong Manager Authentication Plugin Config (JSON)\n\nSpecifies the configuration for the authentication\nplugin specified in `admin_gui_auth`.\n\nFor information about Plugin Configuration\nconsult the associated plugin documentation.\n\nExample for `basic-auth`:\n\n`admin_gui_auth_conf = { \"hide_credentials\": true }`\n",
      "sectionIndex": 13
    },
    "admin_gui_auth_password_complexity": {
      "defaultValue": null,
      "description": "Kong Manager Authentication Password Complexity (JSON)\n\nWhen `admin_gui_auth = basic-auth`, this property defines\nthe rules required for Kong Manager passwords. Choose\nfrom preset rules or write your own.\n\nExample using preset rules:\n\n`admin_gui_auth_password_complexity = { \"kong-preset\": \"min_8\" }`\n\nAll values for kong-preset require the password to contain\ncharacters from at least three of the following categories:\n\n1. Uppercase characters (A through Z)\n\n2. Lowercase characters (a through z)\n\n3. Base-10 digits (0 through 9)\n\n4. Special characters (for example, &, $, #, %)\n\nSupported preset rules:\n- `min_8`: minimum length of 8\n- `min_12`: minimum length of 12\n- `min_20`: minimum length of 20\n\nTo write your own rules, see\nhttps://manpages.debian.org/jessie/passwdqc/passwdqc.conf.5.en.html.\n\nNOTE: Only keywords \"min\", \"max\" and \"passphrase\" are supported.\n\nExample:\n\n`admin_gui_auth_password_complexity = { \"min\": \"disabled,24,11,9,8\" }`\n",
      "sectionIndex": 13
    },
    "admin_gui_session_conf": {
      "defaultValue": null,
      "description": "Kong Manager Session Config (JSON)\n\nSpecifies the configuration for the Session plugin as\nused by Kong Manager.\n\nFor information about plugin configuration, consult\nthe Kong Session plugin documentation.\n\nExample:\n```\nadmin_gui_session_conf = { \"cookie_name\": \"kookie\", \\\n                           \"secret\": \"changeme\" }\n```\n",
      "sectionIndex": 13
    },
    "admin_gui_auth_header": {
      "defaultValue": "Kong-Admin-User",
      "description": "Defines the name of the HTTP request header from which\nthe Admin API will attempt to identify the Kong Admin\nuser.\n",
      "sectionIndex": 13
    },
    "admin_gui_auth_login_attempts": {
      "defaultValue": "0",
      "description": "Number of times a user can attempt to login to Kong\nManager. 0 means infinite attempts allowed.\n",
      "sectionIndex": 13
    },
    "admin_gui_header_txt": {
      "defaultValue": null,
      "description": "Sets the text for the Kong Manager header banner.\nHeader banner is not shown if this config is empty.\n",
      "sectionIndex": 13
    },
    "admin_gui_header_bg_color": {
      "defaultValue": null,
      "description": "Sets the background color for the Kong Manager header banner.\nAccepts CSS color keyword, #-hexadecimal, or RGB\nformat. Invalid values are ignored by Manager.\n",
      "sectionIndex": 13
    },
    "admin_gui_header_txt_color": {
      "defaultValue": null,
      "description": "Sets the text color for the Kong Manager header banner.\nAccepts CSS color keyword, #-hexadecimal, or RGB\nformat. Invalid values are ignored by Kong Manager.\n",
      "sectionIndex": 13
    },
    "admin_gui_footer_txt": {
      "defaultValue": null,
      "description": "Sets the text for the Kong Manager footer banner. Footer banner\nis not shown if this config is empty.\n",
      "sectionIndex": 13
    },
    "admin_gui_footer_bg_color": {
      "defaultValue": null,
      "description": "Sets the background color for the Kong Manager footer banner.\nAccepts CSS color keyword, #-hexadecimal, or RGB\nformat. Invalid values are ignored by manager.\n",
      "sectionIndex": 13
    },
    "admin_gui_footer_txt_color": {
      "defaultValue": null,
      "description": "Sets the text color for the Kong Manager footer banner.\nAccepts CSS color keyword, #-hexadecimal, or RGB\nformat. Invalid values are ignored by Kong Manager.\n",
      "sectionIndex": 13
    },
    "admin_gui_login_banner_title": {
      "defaultValue": null,
      "description": "Sets the title text for the Kong Manager login banner.\nLogin banner is not shown if both\n`admin_gui_login_banner_title` and\n`admin_gui_login_banner_body` are empty.\n",
      "sectionIndex": 13
    },
    "admin_gui_login_banner_body": {
      "defaultValue": null,
      "description": "Sets the body text for the Kong Manager login banner.\nLogin banner is not shown if both\n`admin_gui_login_banner_title` and\n`admin_gui_login_banner_body` are empty.\n",
      "sectionIndex": 13
    },
    "vitals": {
      "defaultValue": "on",
      "description": "When enabled, Kong will store and report\nmetrics about its performance.\n\nWhen running Kong in a multi-node setup,\n`vitals` entails two separate meanings\ndepending on the node.\n\nOn a Proxy-only node, `vitals` determines\nwhether to collect data for Vitals.\n\nOn an Admin-only node, `vitals` determines\nwhether to display Vitals metrics and\nvisualizations on the dashboard.\n",
      "sectionIndex": 13,
      "removed_in": {
        "gateway": "3.5"
      }
    },
    "vitals_strategy": {
      "defaultValue": "database",
      "description": "Determines whether to use the Kong database or\na separate storage engine for Vitals metrics.\nAccepted values are `database`, `prometheus`,\nor `influxdb`.\n",
      "sectionIndex": 13
    },
    "vitals_tsdb_address": {
      "defaultValue": null,
      "description": "Defines the host and port of the TSDB server\nto which Vitals data is written and read.\nThis value is only applied when the\n`vitals_strategy` option is set to\n`prometheus` or `influxdb`. This value\naccepts IPv4, IPv6, and hostname values.\nIf the `vitals_strategy` is set to\n`prometheus`, this value determines the\naddress of the Prometheus server from which\nVitals data will be read. For `influxdb`\nstrategies, this value controls both the read\nand write source for Vitals data.\n",
      "sectionIndex": 13
    },
    "vitals_tsdb_user": {
      "defaultValue": null,
      "description": "Influxdb user\n",
      "sectionIndex": 13
    },
    "vitals_tsdb_password": {
      "defaultValue": null,
      "description": "Influxdb password\n",
      "sectionIndex": 13
    },
    "vitals_statsd_address": {
      "defaultValue": null,
      "description": "Defines the host and port (and an optional\nprotocol) of the StatsD server to which\nKong should write Vitals metics. This value\nis only applied when the `vitals_strategy` is\nset to `prometheus`. This value accepts IPv4,\nIPv6, and, hostnames. Additionally, the suffix\n`tcp` can be specified; doing so will result\nin Kong sending StatsD metrics via TCP\ninstead of the UDP (default).\n",
      "sectionIndex": 13
    },
    "vitals_statsd_prefix": {
      "defaultValue": "kong",
      "description": "Defines the prefix value attached to all\nVitals StatsD events. This prefix is useful\nwhen writing metrics to a multi-tenant StatsD\nexporter or server.\n",
      "sectionIndex": 13
    },
    "vitals_statsd_udp_packet_size": {
      "defaultValue": "1024",
      "description": "Defines the maximum buffer size in\nwhich Vitals statsd metrics will be\nheld and sent in batches.\nThis value is defined in bytes.\n",
      "sectionIndex": 13
    },
    "vitals_prometheus_scrape_interval": {
      "defaultValue": "5",
      "description": "Defines the scrape_interval query\nparameter sent to the Prometheus\nserver when reading Vitals data.\nThis should be same as the scrape\ninterval (in seconds) of the\nPrometheus server.\n",
      "sectionIndex": 13
    },
    "konnect_mode": {
      "defaultValue": "off",
      "description": "When enabled, the dataplane is connected to Konnect\n",
      "sectionIndex": 14
    },
    "analytics_flush_interval": {
      "defaultValue": "1",
      "description": "Specify the maximum frequency, in seconds,\nat which local analytics and licensing\ndata are flushed to the database or\nKonnect, depending on the installation mode.\nKong also triggers a flush when the number\nof messages in the buffer is less than\n`analytics_buffer_size_limit`, regardless\nof whether the specified time interval has\nelapsed.\n",
      "sectionIndex": 15
    },
    "analytics_buffer_size_limit": {
      "defaultValue": "100000",
      "description": "Max number of messages can be buffered locally\nbefore dropping data in case there is no\nnetwork connection to Konnect.\n",
      "sectionIndex": 15
    },
    "portal": {
      "defaultValue": "off",
      "description": "Developer Portal Switch\n\nWhen enabled:\n\n  Kong will expose the Dev Portal interface and\n  read-only APIs on the `portal_gui_listen` address,\n  and endpoints on the Admin API to manage assets.\n\nWhen enabled along with `portal_auth`:\n\n  Kong will expose management endpoints for developer\n  accounts on the Admin API and the Dev Portal API.\n",
      "sectionIndex": 16
    },
    "portal_gui_listen": {
      "defaultValue": [
        "0.0.0.0:8003",
        "0.0.0.0:8446 ssl"
      ],
      "description": "Developer Portal GUI Listeners\n\nComma-separated list of addresses on which Kong will\nexpose the Developer Portal GUI. Suffixes can be\nspecified for each pair, similarly to\nthe `admin_listen` directive.\n",
      "sectionIndex": 16
    },
    "portal_gui_protocol": {
      "defaultValue": "http",
      "description": "Developer Portal GUI protocol\n\nThe protocol used in conjunction with\n`portal_gui_host` to construct the lookup, or balancer\naddress for your Kong Proxy nodes.\n\nExamples: `http`,`https`\n",
      "sectionIndex": 16
    },
    "portal_gui_host": {
      "defaultValue": "127.0.0.1:8003",
      "description": "Developer Portal GUI host\n\nThe host used in conjunction with\n`portal_gui_protocol` to construct the lookup,\nor balancer address for your Kong Proxy nodes.\n\nExamples:\n\n- `<IP>:<PORT>`\n  -> `portal_gui_host = 127.0.0.1:8003`\n- `<HOSTNAME>`\n  -> `portal_gui_host = portal_api.domain.tld`\n- `<HOSTNAME>/<PATH>`\n  -> `portal_gui_host = dev-machine/dev-285`\n",
      "sectionIndex": 16
    },
    "portal_cors_origins": {
      "defaultValue": null,
      "description": "Developer Portal CORS Origins\n\nA comma separated list of allowed domains for\n`Access-Control-Allow-Origin` header. This can be used to\nresolve CORS issues in custom networking environments.\n\nExamples:\n- list of domains:\n  `portal_cors_origins = http://localhost:8003, https://localhost:8004`\n- single domain:\n  `portal_cors_origins = http://localhost:8003`\n- all domains:\n  `portal_cors_origins = *`\n\nNOTE: In most cases, the Developer Portal is able to derive\nvalid CORS origins by using `portal_gui_protocol`, `portal_gui_host`,\nand if applicable, `portal_gui_use_subdomains`. In these cases,\n`portal_cors_origins` is not needed and can remain unset.\n",
      "sectionIndex": 16
    },
    "portal_gui_use_subdomains": {
      "defaultValue": "off",
      "description": "Developer Portal GUI subdomain toggle\n\nBy default Kong Portal uses the first namespace in\nthe request path to determine workspace. By turning\n`portal_gui_subdomains` on, Kong Portal will expect\nworkspace to be included in the request url as a subdomain.\n\nExample (off):\n  - `<scheme>://<HOSTNAME>/<WORKSPACE>/<PATH>` ->\n    `http://kong-portal.com/example-workspace/index`\n\nExample (on):\n  - `<scheme>://<WORKSPACE>.<HOSTNAME>` ->\n    `http://example-workspace.kong-portal.com/index`\n",
      "sectionIndex": 16
    },
    "portal_gui_ssl_cert": {
      "defaultValue": null,
      "description": "Developer Portal GUI SSL Certificate\n\nThe SSL certificate for `portal_gui_listen` values\nwith SSL enabled.\n\nvalues:\n* absolute path to the certificate\n* certificate content\n* base64 encoded certificate content\n",
      "sectionIndex": 16
    },
    "portal_gui_ssl_cert_key": {
      "defaultValue": null,
      "description": "Developer Portal GUI SSL Certificate Key\n\nThe SSL key for `portal_gui_listen` values with\nSSL enabled.\n\nvalues:\n* absolute path to the certificate key\n* certificate key content\n* base64 encoded certificate key content\n",
      "sectionIndex": 16
    },
    "portal_gui_access_log": {
      "defaultValue": "logs/portal_gui_access.log",
      "description": "Developer Portal GUI Access Log location\n\nHere you can set an absolute or relative path for your\nPortal GUI access logs.\n\nSetting this value to `off` will disable logging\nPortal GUI access logs.\n\nWhen using relative pathing, logs will be placed under\nthe `prefix` location.\n",
      "sectionIndex": 16
    },
    "portal_gui_error_log": {
      "defaultValue": "logs/portal_gui_error.log",
      "description": "Developer Portal GUI Error Log location\n\nHere you can set an absolute or relative path for your\nPortal GUI error logs.\n\nSetting this value to `off` will disable logging\nPortal GUI error logs.\n\nWhen using relative pathing, logs will be placed under\nthe `prefix` location.\n\nGranularity can be adjusted through the `log_level`\ndirective.\n",
      "sectionIndex": 16
    },
    "portal_api_listen": {
      "defaultValue": [
        "0.0.0.0:8004",
        "0.0.0.0:8447 ssl"
      ],
      "description": "Developer Portal API Listeners\n\nComma-separated list of addresses on which Kong will\nexpose the Developer Portal API. Suffixes can be\nspecified for each pair, similarly to\nthe `admin_listen` directive.\n",
      "sectionIndex": 16
    },
    "portal_api_url": {
      "defaultValue": null,
      "description": "Developer Portal API URL\n\nThe lookup, or balancer, address for your Developer\nPortal nodes.\n\nThis value is commonly used in a microservices\nor service-mesh oriented architecture.\n\n`portal_api_url` is the address on which your\nKong Dev Portal API is accessible by Kong. You\nshould only set this value if your Kong Dev Portal API\nlives on a different node than your Kong Proxy.\n\nAccepted format (parts in parenthesis are optional):\n\n  `<scheme>://<IP / HOSTNAME>(:<PORT>(/<PATH>))`\n\nExamples:\n\n- `<scheme>://<IP>:<PORT>`\n  -> `portal_api_url = http://127.0.0.1:8003`\n- `SSL <scheme>://<HOSTNAME>`\n  -> `portal_api_url = https://portal_api.domain.tld`\n- `<scheme>://<HOSTNAME>/<PATH>`\n  -> `portal_api_url = http://dev-machine/dev-285`\n\nBy default this value points to the local interface:\n\n- `http://0.0.0.0:8004`\n",
      "sectionIndex": 16
    },
    "portal_api_ssl_cert": {
      "defaultValue": null,
      "description": "Developer Portal API SSL Certificate\n\nThe SSL certificate for `portal_api_listen` values\nwith SSL enabled.\n\nvalues:\n* absolute path to the certificate\n* certificate content\n* base64 encoded certificate content\n",
      "sectionIndex": 16
    },
    "portal_api_ssl_cert_key": {
      "defaultValue": null,
      "description": "Developer Portal API SSL Certificate Key\n\nThe SSL key for `portal_api_listen` values with\nSSL enabled.\n\nvalues:\n* absolute path to the certificate key\n* certificate key content\n* base64 encoded certificate key content\n",
      "sectionIndex": 16
    },
    "portal_api_access_log": {
      "defaultValue": "logs/portal_api_access.log",
      "description": "Developer Portal API Access Log location\n\nHere you can set an absolute or relative path for your\nPortal API access logs.\n\nSetting this value to `off` will disable logging\nPortal API access logs.\n\nWhen using relative pathing, logs will be placed under\nthe `prefix` location.\n",
      "sectionIndex": 16
    },
    "portal_api_error_log": {
      "defaultValue": "logs/portal_api_error.log",
      "description": "Developer Portal API Error Log location\n\nHere you can set an absolute or relative path for your\nPortal API error logs.\n\nSetting this value to `off` will disable logging\nPortal API error logs.\n\nWhen using relative pathing, logs will be placed under\nthe `prefix` location.\n\nGranularity can be adjusted through the `log_level`\ndirective.\n",
      "sectionIndex": 16
    },
    "portal_is_legacy": {
      "defaultValue": "off",
      "description": "Developer Portal legacy support\n\nSetting this value to `on` will cause all new\nportals to render using the legacy rendering system by default.\n\nSetting this value to `off` will cause all new\nportals to render using the current rendering system.\n",
      "sectionIndex": 16
    },
    "portal_app_auth": {
      "defaultValue": "kong-oauth2",
      "description": "Developer Portal application registration\nauth provider and strategy. Must be set to enable\napplication_registration plugin\n",
      "sectionIndex": 16
    },
    "portal_auth": {
      "defaultValue": null,
      "description": "Developer Portal Authentication Plugin Name\n\nSpecifies the authentication plugin\nto apply to your Developer Portal. Developers\nwill use the specified form of authentication\nto request access, register, and login to your\nDeveloper Portal.\n\nSupported Plugins:\n\n- Basic Authentication: `portal_auth = basic-auth`\n- OIDC Authentication: `portal_auth = openid-connect`\n\n",
      "sectionIndex": 17
    },
    "portal_auth_password_complexity": {
      "defaultValue": null,
      "description": "Kong Portal Authentication Password Complexity (JSON)\n\nWhen portal_auth = basic-auth, this property defines\nthe rules required for Kong Portal passwords. Choose\nfrom preset rules or write your own.\n\nExample using preset rules:\n\n`portal_auth_password_complexity = { \"kong-preset\": \"min_8\" }`\n\nAll values for kong-preset require the password to contain\ncharacters from at least three of the following categories:\n\n1. Uppercase characters (A through Z)\n\n2. Lowercase characters (a through z)\n\n3. Base-10 digits (0 through 9)\n\n4. Special characters (for example, &, $, #, %)\n\nSupported preset rules:\n- `min_8`: minimum length of 8\n- `min_12`: minimum length of 12\n- `min_20`: minimum length of 20\n\nTo write your own rules, see\nhttps://manpages.debian.org/jessie/passwdqc/passwdqc.conf.5.en.html.\n\nNOTE: Only keywords \"min\", \"max\" and \"passphrase\" are supported.\n\nExample:\n\n`portal_auth_password_complexity = { \"min\": \"disabled,24,11,9,8\" }`\n",
      "sectionIndex": 17
    },
    "portal_auth_conf": {
      "defaultValue": null,
      "description": "Developer Portal Authentication Plugin Config (JSON)\n\nSpecifies the plugin configuration object\nin JSON format to be applied to your Developer\nPortal authentication.\n\nFor information about Plugin Configuration\nconsult the associated plugin documentation.\n\nExample for `basic-auth`:\n\n`portal_auth_conf = { \"hide_credentials\": true }`\n",
      "sectionIndex": 17
    },
    "portal_auth_login_attempts": {
      "defaultValue": "0",
      "description": "Number of times a user can attempt to login to the\nDev Portal before password must be reset.\n\n0 (default) means infinite attempts allowed.\n\nNote: Any value greater than 0 will only affect\nDev Portals secured with basic-auth.\n",
      "sectionIndex": 17
    },
    "portal_session_conf": {
      "defaultValue": null,
      "description": "Portal Session Config (JSON)\n\nSpecifies the configuration for the\nSession plugin as used by Kong Portal.\n\nFor information about Plugin Configuration consult\nthe Kong Session Plugin documentation.\n\nExample:\n```\nportal_session_conf = { \"cookie_name\": \"portal_session\", \\\n                         \"secret\": \"changeme\", \\\n                         \"storage\": \"kong\" }\n```\n",
      "sectionIndex": 17
    },
    "portal_auto_approve": {
      "defaultValue": "off",
      "description": "Developer Portal Auto Approve Access\n\nWhen set to `on`, a developer will\nautomatically be marked as \"approved\" after completing\nregistration. Access can still be revoked through\nKong Manager or the Admin API.\n\nWhen set to `off`, a Kong admin will have to manually approve the Developer\nusing Kong Manager or the Admin API.\n",
      "sectionIndex": 17
    },
    "portal_token_exp": {
      "defaultValue": "21600",
      "description": "Duration in seconds for the expiration of the Dev Portal\nreset password token. Default is `21600` (six hours).\n",
      "sectionIndex": 17
    },
    "portal_email_verification": {
      "defaultValue": "off",
      "description": "Portal Developer Email Verification.\n\nWhen enabled Developers will receive an email upon\nregistration to verify their account. Developers will\nnot be able to use the Developer Portal until they\nverify their account, even if auto-approve is enabled.\n\nNote: SMTP must be turned on in order to use this feature.\n",
      "sectionIndex": 17
    },
    "portal_invite_email": {
      "defaultValue": "on",
      "description": "When enabled, Kong admins can invite developers to a Dev Portal by using\nthe Invite button in Kong Manager.\n\nThe email looks like the following:\n\n```\nSubject: Invite to access Dev Portal <WORKSPACE_NAME>\n\nHello Developer!\n\nYou have been invited to create a Dev Portal account at %s.\nPlease visit `<DEV_PORTAL_URL/register>` to create your account.\n```\n",
      "sectionIndex": 18
    },
    "portal_access_request_email": {
      "defaultValue": "on",
      "description": "When enabled, Kong admins specified by `smtp_admin_emails`\nwill receive an email when a developer requests access\nto a Dev Portal.\n\nWhen disabled, Kong admins will have to manually check\nthe Kong Manager to view any requests.\n\nThe email looks like the following:\n\n```\nSubject: Request to access Dev Portal <WORKSPACE NAME>\n\nHello Admin!\n\n<DEVELOPER NAME> has requested Dev Portal access for <WORKSPACE_NAME>.\nPlease visit <KONG_MANAGER_URL/developers/requested> to review this request.\n```\n",
      "sectionIndex": 18
    },
    "portal_approved_email": {
      "defaultValue": "on",
      "description": "When enabled, developers will receive an email when\naccess to a Dev Portal has been approved.\n\nWhen disabled, developers will receive no indication\nthat they have beenapproved. It is suggested to only\ndisable this feature if `portal_auto_approve`\nis enabled.\n\nThe email looks like the following:\n\n```\nSubject: Dev Portal access approved\n\nHello Developer!\nYou have been approved to access <WORKSPACE_NAME>.\nPlease visit <DEV PORTAL URL/login> to login.\n```\n",
      "sectionIndex": 18
    },
    "portal_reset_email": {
      "defaultValue": "on",
      "description": "When enabled, developers will be able to use the\nReset Password flow on a Dev Portal and will\nreceive an email with password reset instructions.\n\nNote: When disabled, developers will *not* be able to reset their account\npasswords. The password resetting email is the only way to reset developer\npasswords.\n\nThe email looks like the following:\n\n```\nSubject: Password Reset Instructions for Dev Portal <WORKSPACE_NAME>.\n\nHello Developer,\n\nPlease click the link below to reset your Dev Portal password.\n\n<DEV_PORTAL_URL/reset?token=12345>\n\nThis link will expire in <portal_reset_token_exp>\n\nIf you didn't make this request, keep your account secure by clicking\nthe link above to change your password.\n```\n",
      "sectionIndex": 18
    },
    "portal_reset_success_email": {
      "defaultValue": "on",
      "description": "When enabled, developers will receive an email\nafter successfully resetting their Dev Portal\naccount password.\n\nWhen disabled, developers will still be able\nto reset their account passwords, but will not\nreceive a confirmation email.\n\nThe email looks like the following:\n\n```\nSubject: Dev Portal password change success\n\nHello Developer,\nWe are emailing you to let you know that your Dev Portal password at <DEV_PORTAL_URL> has been changed.\n\nClick the link below to sign in with your new credentials.\n\n<DEV_PORTAL_URL>\n```\n",
      "sectionIndex": 18
    },
    "portal_application_status_email": {
      "defaultValue": "off",
      "description": "When enabled, developers will receive an email\nwhen the status changes for their appliciation\nservice requests.\n\nWhen disabled, developers will still be able\nto view the status in their developer portal\napplication page.\n\nThe email looks like the following:\n\n```\nSubject: Dev Portal application request <REQUEST_STATUS> (<DEV_PORTAL_URL>)\n\nHello Developer,\nWe are emailing you to let you know that your request for application access from the\nDeveloper Portal account at <DEV_PORTAL_URL> is <REQUEST_STATUS>.\n\nApplication: <APPLICATION_NAME>\nService: <SERVICE_NAME>\n\nYou will receive another email when your access has been approved.\n```\n",
      "sectionIndex": 18
    },
    "portal_application_request_email": {
      "defaultValue": "off",
      "description": "When enabled, Kong admins specified by `smtp_admin_emails`\nwill receive an email when a developer requests access\nto service through an application.\n\nWhen disabled, Kong admins will have to manually check\nthe Kong Manager to view any requests.\n\nBy default, `smtp_admin_emails` will be the recipients.\nThis can be overriden by `portal_smtp_admin_emails`,\nwhich can be set dynamically per workspace through\nthe Admin API.\n\nThe email looks like the following:\n\n```\nSubject: Request to access Dev Portal (<DEV_PORTAL_URL>) service from <DEVELOPER_EMAIL>\n\nHello Admin,\n\n<DEVELOPER NAME> (<DEVELOPER_EMAIL>) has requested application access for <DEV_PORTAL_URL>.\n\nRequested workspace: <WORKSPACE_NAME>\nRequested application: <APPLICATION_NAME>\nRequested service: <SERVICE_NAME>\n\nPlease visit <KONG_MANAGER_URL/WORKSPACE_NAME/applications/APPLICATION_ID#requested> to review this request.\n```\n",
      "sectionIndex": 18
    },
    "portal_emails_from": {
      "defaultValue": null,
      "description": "The name and email address for the `From` header\nincluded in all Dev Portal emails.\n\nExample:\n`portal_emails_from = Your Name <example@example.com>`\n\nNote: Some SMTP servers will not use\nthis value, but instead insert the email and name\nassociated with the account.\n",
      "sectionIndex": 18
    },
    "portal_emails_reply_to": {
      "defaultValue": null,
      "description": "Email address for the `Reply-To` header for\nportal emails\n\nExample:\n`portal_emails_reply_to = example@example.com`\n\nNote: Some SMTP servers will not use\nthis value, but instead insert the email\nassociated with the account.\n",
      "sectionIndex": 18
    },
    "portal_smtp_admin_emails": {
      "defaultValue": null,
      "description": "Comma separated list of admin emails to receive\nportal notifications. Can be dynamically set per\nworkspace through the Admin API.\n\nIf not set, `smtp_admin_emails` will be used.\n\nExample `admin1@example.com, admin2@example.com`\n",
      "sectionIndex": 18
    },
    "admin_emails_from": {
      "defaultValue": "\"\"",
      "description": "The email address for the `From` header\nfor admin emails.\n",
      "sectionIndex": 16
    },
    "admin_emails_reply_to": {
      "defaultValue": null,
      "description": "Email address for the `Reply-To` header\nfor admin emails.\n",
      "sectionIndex": 16
    },
    "admin_invitation_expiry": {
      "defaultValue": "259200",
      "description": "Expiration time for the admin invitation link\n(in seconds). 0 means no expiration.\n\nExample, 72 hours: `72 * 60 * 60 = 259200`\n",
      "sectionIndex": 16
    },
    "smtp_mock": {
      "defaultValue": "on",
      "description": "This flag will mock the sending of emails. This can be\nused for testing before the SMTP client is fully\nconfigured.\n",
      "sectionIndex": 17
    },
    "smtp_host": {
      "defaultValue": "localhost",
      "description": "The hostname of the SMTP server to connect to.\n",
      "sectionIndex": 17
    },
    "smtp_port": {
      "defaultValue": "25",
      "description": "The port number on the SMTP server to connect to.\n",
      "sectionIndex": 17
    },
    "smtp_starttls": {
      "defaultValue": "off",
      "description": "When set to `on`, STARTTLS is used to encrypt\ncommunication with the SMTP server. This is normally\nused in conjunction with port 587.\n",
      "sectionIndex": 17
    },
    "smtp_username": {
      "defaultValue": null,
      "description": "Username used for authentication with SMTP server\n",
      "sectionIndex": 17
    },
    "smtp_password": {
      "defaultValue": null,
      "description": "Password used for authentication with SMTP server\n",
      "sectionIndex": 17
    },
    "smtp_ssl": {
      "defaultValue": "off",
      "description": "When set to `on`, SMTPS is used to encrypt\ncommunication with the SMTP server. This is normally\nused in conjunction with port 465.\n",
      "sectionIndex": 17
    },
    "smtp_auth_type": {
      "defaultValue": null,
      "description": "The method used to authenticate with the SMTP server\nValid options are `plain`, `login`, or `nil`\n",
      "sectionIndex": 17
    },
    "smtp_domain": {
      "defaultValue": "localhost.localdomain",
      "description": "The domain used in the `EHLO` connection and part of\nthe `Message-ID` header\n",
      "sectionIndex": 17
    },
    "smtp_timeout_connect": {
      "defaultValue": "60000",
      "description": "The timeout (in milliseconds) for connecting to the\nSMTP server.\n",
      "sectionIndex": 17
    },
    "smtp_timeout_send": {
      "defaultValue": "60000",
      "description": "The timeout (in milliseconds) for sending data to the\nSMTP server.\n",
      "sectionIndex": 17
    },
    "smtp_timeout_read": {
      "defaultValue": "60000",
      "description": "The timeout (in milliseconds) for reading data from\nthe SMTP server.\n",
      "sectionIndex": 17
    },
    "smtp_admin_emails": {
      "defaultValue": null,
      "description": "Comma separated list of admin emails to receive\nnotifications.\nExample `admin1@example.com, admin2@example.com`\n",
      "sectionIndex": 17
    },
    "audit_log": {
      "defaultValue": "off",
      "description": "When enabled, Kong will log information about\nAdmin API access and database row insertions,\nupdates, and deletions.\n",
      "sectionIndex": 18
    },
    "audit_log_ignore_methods": {
      "defaultValue": null,
      "description": "Comma-separated list of HTTP methods that\nwill not generate audit log entries. By\ndefault, all HTTP requests will be logged.\n",
      "sectionIndex": 18
    },
    "audit_log_ignore_paths": {
      "defaultValue": null,
      "description": "Comma-separated list of request paths that\nwill not generate audit log entries. By\ndefault, all HTTP requests will be logged.\n",
      "sectionIndex": 18
    },
    "audit_log_ignore_tables": {
      "defaultValue": null,
      "description": "Comma-separated list of database tables that\nwill not generate audit log entries. By\ndefault, updates to all database tables will\nbe logged (the term \"updates\" refers to the\ncreation, update, or deletion of a row).\n",
      "sectionIndex": 18
    },
    "audit_log_payload_exclude": {
      "defaultValue": [
        "token",
        "secret",
        "password"
      ],
      "description": "Comma-separated list of keys that will be\nfiltered out of the payload. Keys that were\nfiltered will be recorded in the audit log.\n",
      "sectionIndex": 18
    },
    "audit_log_record_ttl": {
      "defaultValue": "2592000",
      "description": "Length, in seconds, of the TTL for audit log\nrecords. Records in the database older than\ntheir TTL are automatically purged.\n\nExample, 30 days: `30 * 24 * 60 * 60 = 2592000`\n",
      "sectionIndex": 18
    },
    "audit_log_signing_key": {
      "defaultValue": null,
      "description": "Defines the path to a private RSA signing key\nthat can be used to insert a signature of\naudit records, adjacent to the record. The\ncorresponding public key should be stored\noffline, and can be used to validate audit\nentries in the future. If this value is\nundefined, no signature will be generated.\n",
      "sectionIndex": 18
    },
    "tracing": {
      "defaultValue": "off",
      "description": "When enabled, Kong will generate granular\ndebug data about various portions of the\nrequest lifecycle, such as DB or DNS queries,\nplugin execution, core handler timing, etc.\n",
      "sectionIndex": 18,
      "removed_in": {
        "gateway": "3.7"
      }
    },
    "tracing_write_strategy": {
      "defaultValue": "file",
      "description": "Defines how Kong will write tracing data at\nthe conclusion of the request. The default\noption, `file`, writes a human-readable\ndepiction of tracing data to a configurable\nlocation on the node's file system. Other\nstrategies write tracing data as a JSON\ndocument to the configured endpoint. Valid\nentries for this option are `file`,\n`file_raw`, `http`, `tcp`, `tls`, and `udp`.\n",
      "sectionIndex": 18,
      "removed_in": {
        "gateway": "3.7"
      }
    },
    "tracing_write_endpoint": {
      "defaultValue": null,
      "description": "Defines the endpoint to which tracing data\nwill be written.\n\n- For the `file` and `file_raw` tracing write\n  strategies, this value must be a valid\n  location on the node's file system to which\n  Kong must have write access.\n- For the `tcp`, `tls`, and\n  `udp` strategies, this value is defined as a\n  string in the form of:\n `<HOST>:<PORT>`\n- For the `http` strategy, this value is\n  defined in the form of:\n `<scheme>://<IP / HOSTNAME>(:<PORT>(/<PATH>))`\n\nTraces sent via HTTP are delivered via POST\nmethod with an `application/json`\nContent-Type.\n",
      "sectionIndex": 18,
      "removed_in": {
        "gateway": "3.7"
      }
    },
    "tracing_time_threshold": {
      "defaultValue": "0",
      "description": "The minimum time, in microseconds, over which\na trace must execute in order to write the\ntrace data to the configured endpoint. This\nconfiguration can be used to lower the noise\npresent in trace data by removing trace\nobjects that are not interesting from a\ntiming perspective. The default value of `0`\nremoves this limitation, causing traces of\nany duration to be written.\n",
      "sectionIndex": 18,
      "removed_in": {
        "gateway": "3.7"
      }
    },
    "tracing_types": {
      "defaultValue": "all",
      "description": "Defines the types of traces that are written.\nTrace types not defined in this list are\nignored, regardless of their lifetime. The\ndefault special value of `all` results in all\ntrace types being written, regardless of type.\n\nThe following trace types are included:\n\n- `query`: trace the database query\n- `legacy_query`: (deprecated) trace the\n   database query with legacy DAO\n- `router`: trace Kong routing the request;\n   internal routing time\n- `balancer`: trace the execution of the overall\n   balancer phase\n- `balancer.getPeer`: trace Kong selecting an\n   upstream peer from the ring-balancer\n- `balancer.toip`: trace balancer to resolve\n   peer's host to IP\n- `connect.toip`: trace cosocket to resolve\n   target's host to IP\n- `access.before`: trace the preprocessing of\n   access phase, like parameter parsing, route\n   matching, and balance preparation\n- `access.after`: trace the postprocess of\n   access phase, like balancer execution and\n   internal variable assigning\n- `plugin`: trace plugins phase handlers\n",
      "sectionIndex": 18,
      "removed_in": {
        "gateway": "3.7"
      }
    },
    "tracing_debug_header": {
      "defaultValue": null,
      "description": "Defines the name of the HTTP request header\nthat must be present in order to generate\ntraces within a request. Setting this value\nprovides a mechanism to selectively generate\nrequest traces at the client's request. Note\nthat the value of the header does not matter,\nonly that the header is present in the\nrequest. When this value is not set and\ntracing is enabled, Kong will generate trace\ndata for all requests flowing through the\nproxy and Admin API. Note that data from\ncertificate handling phases is not logged\nwhen this setting is enabled.\n",
      "sectionIndex": 18,
      "removed_in": {
        "gateway": "3.7"
      }
    },
    "generate_trace_details": {
      "defaultValue": "off",
      "description": "When enabled, Kong will write context-\nspecific details into traces. Trace details\noffer more data about the context of the\ntrace. This can significantly increase the\nsize of trace reports. Note also that trace\ndetails may contain potentially sensitive\ninformation, such as raw SQL queries; care\nshould be taken to store traces properly when\nthis option is enabled.\n",
      "sectionIndex": 18,
      "removed_in": {
        "gateway": "3.7"
      }
    },
    "route_validation_strategy": {
      "defaultValue": "smart",
      "description": "The strategy used to validate\nroutes when creating or updating them.\nDifferent strategies are available to tune\nhow to enforce splitting traffic of\nworkspaces.\n- `smart` is the default option and uses the\n  algorithm described in\n  https://docs.konghq.com/gateway/latest/kong-enterprise/workspaces/.\n- `off` disables any check.\n- `path` enforces routes to comply with the pattern\n  described in config `enforce_route_path_pattern`.\n- `static` relies on the PostgreSQL database.\nBefore creating a new route, it checks if the\nroute is unique across all workspaces based on\nthe following params: `paths`, `methods`, and\n`hosts`. If all fields of the new route overlap\nwith an existing one, a 409 is returned with the\nroute of the collision. The array order is not\nimportant for the overlap filter.\n",
      "sectionIndex": 19
    },
    "enforce_route_path_pattern": {
      "defaultValue": null,
      "description": "Specifies the Lua pattern which will\nbe enforced on the `paths` attribute of a\nroute object. You can also add a placeholder\nfor the workspace in the pattern, which\nwill be rendered during runtime based on the\nworkspace to which the `route` belongs.\nThis setting is only relevant if\n`route_validation_strategy` is set to `path`.\n\n\n**Note:** The collision detection is only supported\nfor plain text routes, do not rely on this feature\nto validate regex routes.\n\nExample\nFor Pattern `/$(workspace)/v%d/.*` valid paths\nare:\n\n1. `/group1/v1/` if route belongs to\n  workspace `group1`.\n\n2. `/group2/v1/some_path` if route belongs to\n  workspace `group2`.\n",
      "sectionIndex": 19
    },
    "keyring_enabled": {
      "defaultValue": "off",
      "description": "When enabled, Kong will encrypt sensitive\nfield values before writing them to the\ndatabase, and subsequently decrypt them when\nretrieving data for the Admin API, Developer\nPortal, or proxy business logic. Symmetric\nencryption keys are managed based on the\nstrategy defined below.\n",
      "sectionIndex": 20
    },
    "keyring_strategy": {
      "defaultValue": "cluster",
      "description": "Defines the strategy implementation by which\nKong nodes will manage symmetric encryption\nkeys. Please see the Kong Enterprise\ndocumentation for a detailed description of\neach strategy. Acceptable values for this\noption are `cluster` and `vault`.\n",
      "sectionIndex": 20
    },
    "keyring_public_key": {
      "defaultValue": null,
      "description": "Defines the public key of an RSA keypair.\nThis keypair is used for symmetric keyring\nimport/export, e.g., for disaster recovery\nand optional bootstrapping.\n\nValues:\n- absolute path to the public key\n- public key content\n- base64 encoded public key content\n",
      "sectionIndex": 20
    },
    "keyring_private_key": {
      "defaultValue": null,
      "description": "Defines the private key of an RSA keypair.\nThis keypair is used for symmetric keyring\nimport/export, e.g., for disaster recovery\nand optional bootstrapping.\n\nValues:\n- absolute path to the private key\n- private key content\n- base64 encoded private key content\n",
      "sectionIndex": 20
    },
    "keyring_blob_path": {
      "defaultValue": null,
      "description": "Defines the filesystem path at which Kong\nwill back up the initial keyring material.\nThis option is useful largely for development\npurposes.\n",
      "sectionIndex": 20
    },
    "keyring_vault_host": {
      "defaultValue": null,
      "description": "Defines the Vault host at which Kong will\nfetch the encryption material. This value\nshould be defined in the format:\n\n`<scheme>://<IP / HOSTNAME>:<PORT>`\n",
      "sectionIndex": 20
    },
    "keyring_vault_mount": {
      "defaultValue": null,
      "description": "Defines the name of the Vault v2 KV secrets\nengine at which symmetric keys are found.\n",
      "sectionIndex": 20
    },
    "keyring_vault_path": {
      "defaultValue": null,
      "description": "Defines the name of the Vault v2 KV path\nat which symmetric keys are found.\n",
      "sectionIndex": 20
    },
    "keyring_vault_auth_method": {
      "defaultValue": "token",
      "description": "Defines the authentication mechanism when\nconnecting to the Hashicorp Vault service.\n\nAccepted values are: `token`, or `kubernetes`:\n\n- `token`: Uses the static token defined in\n           the `keyring_vault_token`\n           configuration property.\n\n- `kubernetes`: Uses the Kubernetes authentication\n                mechanism, with the running pod's\n                mapped service account, to assume\n                the Hashicorp Vault role name that is\n                defined in the `keyring_vault_kube_role`\n                configuration property.\n",
      "sectionIndex": 20
    },
    "keyring_vault_token": {
      "defaultValue": null,
      "description": "Defines the token value used to communicate\nwith the v2 KV Vault HTTP(S) API.\n",
      "sectionIndex": 20
    },
    "keyring_vault_kube_role": {
      "defaultValue": "default",
      "description": "Defines the Hashicorp Vault role that will be\nassumed using the Kubernetes service account of\nthe running pod.\n\n`keyring_vault_auth_method` must be set to `kubernetes`\nfor this to activate.\n",
      "sectionIndex": 20
    },
    "keyring_vault_kube_api_token_file": {
      "defaultValue": "/run/secrets/kubernetes.io/serviceaccount/token",
      "description": "Defines where the Kubernetes service account token\nshould be read from the pod's filesystem, if using\na non-standard container platform setup.\n",
      "sectionIndex": 20
    },
    "untrusted_lua": {
      "defaultValue": "sandbox",
      "description": "Controls loading of Lua functions from admin-supplied\nsources such as the Admin API. LuaJIT bytecode\nloading is always disabled.\n\n**Warning:** LuaJIT is not designed as a secure\nruntime for running malicious code, therefore\nyou should properly protect your Admin API endpoint\neven with sandboxing enabled. The sandbox only\nprovides protection against trivial attackers or\nunintentional modification of the Kong global\nenvironment.\n\nAccepted values are: `off`, `sandbox`, or\n`on`:\n\n- `off`: Disallow loading of any arbitrary\n         Lua functions. The `off` option\n         disables any functionality that runs\n         arbitrary Lua code, including the\n         Serverless Functions plugins and any\n         transformation plugin that allows\n         custom Lua functions.\n\n- `sandbox`: Allow loading of Lua functions,\n             but use a sandbox when executing\n             them. The sandboxed function has\n             restricted access to the global\n             environment and only has access\n             to Kong PDK, OpenResty, and\n             standard Lua functions that will\n             generally not cause harm to the\n             Kong Gateway node.\n\n- `on`: Functions have unrestricted\n        access to the global environment and\n        can load any Lua modules. This is\n        similar to the behavior in\n        Kong Gateway prior to 2.3.0.\n\nThe default `sandbox` environment does not\nallow importing other modules or libraries,\nor executing anything at the OS level (for\nexample, file read/write). The global\nenvironment is also not accessible.\n\nExamples of `untrusted_lua = sandbox`\nbehavior:\n\n- You can't access or change global values\n  such as `kong.configuration.pg_password`\n- You can run harmless Lua:\n  `local foo = 1 + 1`. However, OS level\n  functions are not allowed, like:\n  `os.execute(`rm -rf /*`)`.\n\nTo customize the sandbox environment, use\nthe `untrusted_lua_sandbox_requires` and\n`untrusted_lua_sandbox_environment`\nparameters below.\n",
      "sectionIndex": 20
    },
    "untrusted_lua_sandbox_requires": {
      "defaultValue": null,
      "description": "Comma-separated list of modules allowed to\nbe loaded with `require` inside the\nsandboxed environment. Ignored\nif `untrusted_lua` is not `sandbox`.\n\nFor example, say you have configured the\nServerless pre-function plugin and it\ncontains the following `requires`:\n\n```\nlocal template = require \"resty.template\"\nlocal split = require \"kong.tools.string\".split\n```\n\nTo run the plugin, add the modules to the\nallowed list:\n```\nuntrusted_lua_sandbox_requires = resty.template, kong.tools.utils\n```\n\n**Warning:** Allowing certain modules may\ncreate opportunities to escape the\nsandbox. For example, allowing `os` or\n`luaposix` may be unsafe.\n",
      "sectionIndex": 20
    },
    "untrusted_lua_sandbox_environment": {
      "defaultValue": null,
      "description": "Comma-separated list of global Lua\nvariables that should be made available\ninside the sandboxed environment. Ignored\nif `untrusted_lua` is not `sandbox`.\n\n**Warning**: Certain variables, when made\navailable, may create opportunities to\nescape the sandbox.\n",
      "sectionIndex": 20
    },
    "openresty_path": {
      "defaultValue": null,
      "description": "Path to the OpenResty installation that Kong\nwill use. When this is empty (the default),\nKong determines the OpenResty installation\nby searching for a system-installed OpenResty\nand falling back to searching $PATH for the\nnginx binary.\n\nSetting this attribute disables the search\nbehavior and explicitly instructs Kong which\nOpenResty installation to use.\n",
      "sectionIndex": 20
    },
    "node_id": {
      "defaultValue": null,
      "description": "Node ID for the Kong node. Every Kong node\nin a Kong cluster must have a unique and\nvalid UUID. When empty, node ID is\nautomatically generated.\n",
      "sectionIndex": 20
    },
    "cluster_fallback_config_import": {
      "defaultValue": "off",
      "description": "Enable fallback configuration imports.\n\nThis should only be enabled for data planes.\n",
      "sectionIndex": 21
    },
    "cluster_fallback_config_storage": {
      "defaultValue": null,
      "description": "Storage definition used by `cluster_fallback_config_import`\nand `cluster_fallback_config_export`.\n\nSupported storage types:\n- S3-like storages\n- GCP storage service\n\nTo use S3 with a bucket named b and place all configs\nto with a key prefix named p, set it to:\n`s3://b/p`\nTo use GCP for the same bucket and prefix, set it to:\n`gcs://b/p`\n\nThe credentials (and the endpoint URL for S3-like) for S3\nare passed with environment variables:\n`AWS_ACCESS_KEY_ID`, `AWS_SECRET_ACCESS_KEY`,\nand `AWS_CONFIG_STORAGE_ENDPOINT` (extension), where\n`AWS_CONFIG_STORAGE_ENDPOINT`\nis the endpoint that hosts S3-like storage.\n\nThe credentials for GCP are provided via the environment\nvariable `GCP_SERVICE_ACCOUNT`.\n",
      "sectionIndex": 21
    },
    "cluster_fallback_config_export": {
      "defaultValue": "off",
      "description": "Enable fallback configuration exports.\n",
      "sectionIndex": 21
    },
    "cluster_fallback_config_export_delay": {
      "defaultValue": "60",
      "description": "The fallback configuration export interval.\n\nIf the interval is set to 60 and configuration A is exported\nand there are new configurations B, C, and D in the next 60 seconds,\nit will wait until 60 seconds passed and export D, skipping B and C.\n",
      "sectionIndex": 21
    },
    "wasm": {
      "defaultValue": "off",
      "description": "Enable/disable wasm support. This must be enabled in\norder to use wasm filters and filter chains.\n",
      "sectionIndex": 22
    },
    "wasm_filters_path": {
      "defaultValue": null,
      "description": "Path to the directory containing wasm filter modules.\n\nAt startup, Kong discovers available wasm filters by\nscanning this directory for files with the `.wasm`\nfile extension.\n\nThe name of a wasm filter module is derived from the\nfilename itself, with the .wasm extension removed. So,\ngiven the following tree:\n\n```\n/path/to/wasm_filters\n├── my_module.wasm\n├── my_other_module.wasm\n└── not_a_wasm_module.txt\n```\n\nThe resulting filter modules available for use in Kong\nwill be:\n\n- `my_module`\n- `my_other_module`\n\nNotes:\n\n- No recursion is performed. Only .wasm files at the\n  top level are registered.\n- This path _may_ be a symlink to a directory.\n",
      "sectionIndex": 22
    },
    "request_debug": {
      "defaultValue": "on",
      "description": "When enabled, Kong will provide detailed timing information\nfor its components to the client and the error log\nif the following headers are present in the proxy request:\n- `X-Kong-Request-Debug`:\n  If the value is set to `*`,\n  timing information will be collected and exported for the current request.\n  If this header is not present or contains an unknown value,\n  timing information will not be collected for the current request.\n  You can also specify a list of filters, separated by commas,\n  to filter the scope of the time information that is collected.\nThe following filters are supported for `X-Kong-Request-Debug`:\n- `rewrite`: Collect timing information from the `rewrite` phase.\n- `access`: Collect timing information from the `access` phase.\n- `balancer`: Collect timing information from the `balancer` phase.\n- `response`: Collect timing information from the `response` phase.\n- `header_filter`: Collect timing information from the `header_filter` phase.\n- `body_filter`: Collect timing information from the `body_filter` phase.\n- `log`: Collect timing information from the `log` phase.\n- `upstream`: Collect timing information from the `upstream` phase.\n\n- `X-Kong-Request-Debug-Log`:\n  If set to `true`, timing information will also be logged\n  in the Kong error log with a log level of `notice`.\n  Defaults to `false`.\n\n- `X-Kong-Request-Debug-Token`:\n  Token for authenticating the client making the debug\n  request to prevent abuse.\n  ** Note: Debug requests originating from loopback\n  addresses do not require this header. Deploying Kong behind\n  other proxies may result in exposing the debug interface to\n  the public.**\n\n",
      "sectionIndex": 24
    },
    "request_debug_token": {
      "defaultValue": "<random>",
      "description": "The Request Debug Token is used in the\n`X-Kong-Request-Debug-Token` header to prevent abuse.\nIf this value is not set (the default),\na random token will be generated\nwhen Kong starts, restarts, or reloads. If a token is\nspecified manually, then the provided token will be used.\n\nYou can locate the generated debug token in two locations:\n- Kong error log:\n  Debug token will be logged in the error log (notice level)\n  when Kong starts, restarts, or reloads.\n  The log line will have the: `[request-debug]` prefix to aid searching.\n- Filesystem:\n  Debug token will also be stored in a file located at\n  `{prefix}/.request_debug_token` and updated\n  when Kong starts, restarts, or reloads.\n",
      "sectionIndex": 24
    },
    "dedicated_config_processing": {
      "defaultValue": "on",
      "description": "Enables or disables a special worker\nprocess for configuration processing. This process\nincreases memory usage a little bit while\nallowing to reduce latencies by moving some\nbackground tasks, such as CP/DP connection\nhandling, to an additional worker process specific\nto handling these background tasks.\nCurrently this has effect only on data planes.\n",
      "sectionIndex": 0
    },
    "debug_listen_local": {
      "defaultValue": "on",
      "description": "Expose `debug_listen` functionalities via a\nUnix domain socket under the Kong prefix.\n\nThis option allows local users to use `kong debug` command\nto invoke various debug functionalities without needing to\nenable `debug_listen` ahead of time.\n",
      "sectionIndex": 4
    },
    "admin_gui_ssl_protocols": {
      "defaultValue": "TLSv1.2 TLSv1.3",
      "description": "Defines the TLS versions supported\nfor Kong Manager\n",
      "sectionIndex": 13
    },
    "analytics_debug": {
      "defaultValue": "off",
      "description": "Outputs analytics payload to Kong logs.\n",
      "sectionIndex": 15
    },
    "cluster_fallback_export_s3_config": {
      "defaultValue": null,
      "description": "Fallback config export S3 configuration.\nThis is used only when `cluster_fallback_config_storage` is an S3-like schema.\nIf set, it will add the config table to the Kong exporter config S3 putObject request.\nThe config table should be in JSON format and can be unserialized into a table.\nIt should contain the necessary parameters as described in the documentation:\nhttps://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#putObject-property.\nFor example, if you want to set the ServerSideEncryption headers/KMS Key ID\nfor the S3 putObject request, you can set the config table to:\n`{\"ServerSideEncryption\": \"aws:kms\", \"SSEKMSKeyId\": \"your-kms-key-id\"}`\n",
      "sectionIndex": 21
    },
    "wasm_filters": {
      "defaultValue": [
        "bundled",
        "user"
      ],
      "description": "Comma-separated list of Wasm filters to be made\navailable for use in filter chains.\n\nWhen the `off` keyword is specified as the\nonly value, no filters will be available for use.\n\nWhen the `bundled` keyword is specified, all filters\nbundled with Kong will be available.\n\nWhen the `user` keyword is specified, all filters\nwithin the `wasm_filters_path` will be available.\n\n**Examples:**\n\n- `wasm_filters = bundled,user` enables _all_ bundled\n  and user-supplied filters\n- `wasm_filters = user` enables _only_ user-supplied\n  filters\n- `wasm_filters = filter-a,filter-b` enables _only_\n  filters named `filter-a` or `filter-b` (whether\n  bundled _or_ user-supplied)\n\nIf a conflict occurs where a bundled filter and a\nuser-supplied filter share the same name, a warning\nwill be logged, and the user-supplied filter will\nbe used instead.\n",
      "sectionIndex": 22
    },
    "new_dns_client": {
      "defaultValue": "off",
      "description": "Enable or disable the new DNS resolver\n",
      "sectionIndex": 9
    },
    "resolver_address": {
      "defaultValue": "<name servers parsed from resolv.conf>",
      "description": "Comma-separated list of nameservers, each\nentry in `ip[:port]` format to be used by\nKong. If not specified, the nameservers in\nthe local `resolv.conf` file will be used.\nPort defaults to 53 if omitted. Accepts\nboth IPv4 and IPv6 addresses.\n\nExamples:\n\n```\nresolver_address = 8.8.8.8\nresolver_address = 8.8.8.8, [::1]\nresolver_address = 8.8.8.8:53, [::1]:53\n```\n",
      "sectionIndex": 9
    },
    "resolver_hosts_file": {
      "defaultValue": "/etc/hosts",
      "description": "The hosts file to use. This file is read\nonce and its content is static in memory.\nTo read the file again after modifying it,\nKong must be reloaded.\n",
      "sectionIndex": 9
    },
    "resolver_family": {
      "defaultValue": [
        "A",
        "SRV"
      ],
      "description": "The supported query types.\n\nFor a domain name, Kong will only query\neither IP addresses (A or AAAA) or SRV\nrecords, but not both.\n\nIt will query SRV records only when the\ndomain matches the\n\"_<proto>._<service>.<name>\" format, for\nexample, \"_ldap._tcp.example.com\".\n\nFor IP addresses (A or AAAA) resolution, it\nfirst attempts IPv4 (A) and then queries\nIPv6 (AAAA).\n",
      "sectionIndex": 9
    },
    "resolver_valid_ttl": {
      "defaultValue": "<TTL from responses>",
      "description": "By default, DNS records are cached using\nthe TTL value of a response. This optional\nparameter (in seconds) allows overriding it.\n",
      "sectionIndex": 9
    },
    "resolver_error_ttl": {
      "defaultValue": "1",
      "description": "TTL in seconds for error responses and empty\nresponses.\n",
      "sectionIndex": 9
    },
    "resolver_stale_ttl": {
      "defaultValue": "3600",
      "description": "Defines, in seconds, how long a record will\nremain in cache past its TTL. This value\nwill be used while the new DNS record is\nfetched in the background.\n\nStale data will be used from expiry of a\nrecord until either the refresh query\ncompletes, or the `resolver_stale_ttl` number\nof seconds have passed.\n\nThis configuration enables Kong to be more\nresilient during the DNS server downtime.\n",
      "sectionIndex": 9
    },
    "resolver_lru_cache_size": {
      "defaultValue": "10000",
      "description": "The DNS client uses a two-layer cache system:\nL1 - worker-level LRU Lua VM cache\nL2 - across-workers shared memory cache\n\nThis value specifies the maximum allowed\nnumber of DNS responses stored in the L1 LRU\nlua VM cache.\n\nA single name query can easily take up 1~10\nslots, depending on attempted query types and\nextended domains from /etc/resolv.conf\noptions `domain` or `search`.\n",
      "sectionIndex": 9
    },
    "resolver_mem_cache_size": {
      "defaultValue": "5m",
      "description": "This value specifies the size of the L2\nshared memory cache for DNS responses,\n`kong_dns_cache`.\n\nAccepted units are `k` and `m`, with a\nminimum recommended value of a few MBs.\n\n5MB shared memory size could store\n~20000 DNS responeses with single A record or\n~10000 DNS responeses with 2~3 A records.\n\n10MB shared memory size could store\n~40000 DNS responeses with single A record or\n~20000 DNS responeses with 2~3 A records.\n",
      "sectionIndex": 9
    },
    "admin_gui_auth_change_password_attempts": {
      "defaultValue": "0",
      "description": "Number of times a user can attempt to change password.\n0 means infinite attempts allowed.\n",
      "sectionIndex": 13
    },
    "admin_gui_auth_change_password_ttl": {
      "defaultValue": "86400",
      "description": "Length, in seconds, of the TTL for changing password attempts\nrecords. Records in the database older than\ntheir TTL are automatically purged.\n\nExample, 1 days: `1 * 24 * 60 * 60 = 86400.`\n",
      "sectionIndex": 13
    },
    "keyring_recovery_public_key": {
      "defaultValue": null,
      "description": "Defines the public key to optionally encrypt\nall keyring materials and back them up in the\ndatabase.\n\nValues:\n- absolute path to the public key\n- public key content\n- base64 encoded public key content\n",
      "sectionIndex": 20
    },
    "keyring_encrypt_license": {
      "defaultValue": "off",
      "description": "Enables keyring encryption for license payloads stored\nin the database.\n\n**Warning:** For Kong deployments that rely entirely on\nthe database for license provisioning (i.e. not using\n`KONG_LICENSE_DATA` or `KONG_LICENSE_PATH`), enabling\nthis option will delay license activation until after\nthe node's keyring has been activated.\n",
      "sectionIndex": 20
    },
    "test": {
      "defaultValue": "on",
      "description": "test\n",
      "sectionIndex": 23
    },
    "cluster_rpc": {
      "defaultValue": "on",
      "description": "The setting to enable or disable RPC-based\ncommunication between control plane and data plane nodes.\nThe valid values are `on` and `off`. Set to `on` to enable.\nIf `cluster_rpc_sync` is set to `on`, this parameter\nmust also be set to `on`.\n",
      "sectionIndex": 1,
      "min_version": {
        "gateway": "3.9"
      }
    },
    "cluster_rpc_sync": {
      "defaultValue": "off",
      "description": "The setting to enable or disable the incremental\nsynchronization of configuration changes.\nThe valid values are `on` and `off`. To enable, set this\nvalue to `on`, and set `cluster_rpc` to `on`.\nThis setting will be ignored if `cluster_rpc` is `off`.\n\nIn hybrid mode, this setting must be configured\non both control plane and data plane nodes.\n",
      "sectionIndex": 1,
      "min_version": {
        "gateway": "3.9"
      }
    },
    "consumers_mem_cache_size": {
      "defaultValue": "128m",
      "description": "Size of the shared memory cache for consumers\nand credentials.\n\nThe accepted units are `k` and `m`, with a minimum\nrecommended value of a few MBs.\n\n**Note**: This is only used when the \"externalized consumers\"\nfeature is active.\n",
      "sectionIndex": 4,
      "min_version": {
        "gateway": "3.9"
      }
    },
    "admin_gui_auth_login_attempts_ttl": {
      "defaultValue": "604800",
      "description": "Length, in seconds, of the TTL for changing login attempts\nrecords. Records in the database older than\ntheir TTL are automatically purged.\n\nThis argument can be set to an integer between 0 and 100000000.\n\nExample, 7 days: `7 * 24 * 60 * 60 = 604800.`\n",
      "sectionIndex": 13,
      "min_version": {
        "gateway": "3.9"
      }
    },
    "identity_service": {
      "defaultValue": null,
      "description": "Overrides the default identity service URL for external consumers.\n",
      "sectionIndex": 24,
      "min_version": {
        "gateway": "3.9"
      }
    }
  }
}