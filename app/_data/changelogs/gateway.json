{
  "3.10.0.0": {
    "kong": [
      {
        "message": "**Prometheus**: Added gauge to expose connectivity state to the control plane.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Added a new configuration parameter `admin_gui_csp_header` to Gateway, which controls the Content-Security-Policy (CSP) header served with Admin GUI (Kong Manager). This defaults to `\"off\"`, and you can opt-in by setting it to `\"on\"`.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Backported the `balancer.set_upstream_tls` feature from the OpenResty upstream [openresty/lua-resty-core#460](https://github.com/openresty/lua-resty-core/pull/460).",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Bumped atc-router from v1.6.2 to v1.7.1. This release contains upgraded dependencies and a new interface for validating expressions.\n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped Kong Nginx Module from 0.15.0 to 0.15.1.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped libexpat from 2.6.2 to 2.6.4 to fix a crash in the XML_ResumeParser function caused by XML_StopParser stopping an uninitialized parser.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-kong-nginx-module from 0.13.0 to 0.14.0.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-simdjson from 1.1.0 to 1.2.0.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `ngx_wasm_module` to `a376e67ce02c916304cc9b9ef25a540865ee6740`",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped OpenResty from 1.25.3.2 to 1.27.1.1.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped PCRE2 from 10.44 to 10.45 (https://github.com/PCRE2Project/pcre2/blob/pcre2-10.45/NEWS).",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped Snappy Library from 1.2.0 to 1.2.1.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped OpenSSL to 3.4.1 in Core dependencies.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**AI Plugins**: Deprecated `preserve` mode in `config.route_type`. Use `config.llm_format` instead. The `preserve` mode setting will be removed in a future release.",
        "type": "deprecation",
        "plugins": [
          "ai-proxy",
          "ai-proxy-advanced",
          "ai-request-transformer",
          "ai-response-transformer"
        ],
        "scope": "Plugin"
      },
      {
        "message": "dynamic control upstream tls when kong.service.request.set_scheme was called",
        "type": "feature",
        "scope": "PDK"
      },
      {
        "message": "**CORS**: Added an option to skip returning the Access-Control-Allow-Origin response header when requests don't have the Origin header.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Added a new field `x5t` to the entity `keys`, letting you use a X.509 Certificate Thumbprint to identify the key.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added a patch for `kong.resty.set_next_upstream()` to control the next upstream retry logic on the Lua side. [Kong/lua-kong-nginx-module#98](https://github.com/Kong/lua-kong-nginx-module/pull/98)\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Opentelemetry**: This plugin now supports variable resource attributes.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where a GET request to the Admin API root `/` path would return a 500 server error.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**AI Plugins**: Changed the serialized log key of AI metrics from `ai.ai-proxy` to `ai.proxy` to avoid conflicts with metrics generated from plugins other than AI Proxy and AI Proxy Advanced. If you are using logging plugins (for example, File Log, HTTP Log, etc.), you will have to update metrics pipeline configurations to reflect this change.\n",
        "type": "Breaking Change",
        "plugins": [
          "ai-proxy",
          "ai-proxy-advanced"
        ],
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy**: Fixed a bug in the Azure provider where `model.options.upstream_path` overrides would always return a 404 response.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy**: Fixed a bug where Azure streaming responses would be missing individual tokens.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy**: Fixed a bug where response streaming in Gemini and Bedrock providers was returning whole chat responses in one chunk.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy**: Fixed a bug with the Gemini provider, where multimodal requests (in OpenAI format) would not transform properly.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**AI Plugins**: Fixed an issue where AI upstream URL trailing would be empty.",
        "type": "bugfix",
        "plugins": [
          "ai-proxy-advanced",
          "ai-proxy",
          "ai-rag-injector",
          "ai-request-transformer",
          "ai-response-transformer",
          "ai-semantic-cache",
          "ai-semantic-prompt-guard"
        ],
        "scope": "Plugin"
      },
      {
        "message": "**AWS-Lambda**: Fixed an issue that occurred when `is_proxy_integration` was enabled, where Kong's response could behave incorrectly when the response was changed after the execution of the AWS Lambda plugin. The Content-Length header in the lambda function response is now ignored by the AWS Lambda plugin.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where consistent hashing did not correctly handle hyphenated-Pascal-case headers, leading to uneven distribution of requests across upstream targets.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the `db_resurrect_ttl` configuration didn't take effect.",
        "type": "bugfix",
        "scope": "Configuration"
      },
      {
        "message": "Fixed an issue where `POST /config?flatten_errors=1` could not return a proper response if the input contained duplicate consumer credentials.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where a valid declarative config with certificate or SNI entities couldn't be loaded in DB-less mode.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed error caused by duplicate `Content-Type`.\n",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "Fixed an issue where `POST /config?flatten_errors=1` could return a JSON object instead of an empty array.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the error reason wasn't thrown when parsing the certificate from vault.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Users can now use a backslash to escape dots in logging plugins' `custom_fields_by_lua`  key strings, preventing dots from creating nested tables.",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "**grpc-web** and **grpc-gateway**: Fixed a bug where the `TE` (transfer-encoding) header would not be sent to the upstream gRPC servers when `grpc-web` or `grpc-gateweay` are in use.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where the new DNS client did not correctly handle the timeout option in resolv.conf.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the schema library would error with a nil reference if an entity checker referred to a nonexistent field.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**authentications**: Improved the error message which occurred when an anonymous consumer was configured but did not exist.",
        "type": "bugfix",
        "plugins": [
          "basic-auth",
          "hmac-auth",
          "jwt",
          "key-auth",
          "ldap-auth",
          "oauth2"
        ],
        "scope": "Plugin"
      },
      {
        "message": "**kong.service.request.clear_query_arg**: Changed the encoding of spaces in query arguments from `+`\nto `%20` as a short-term solution to an issue that some users are reporting. While the `+` character is the correct\nencoding of space in querystrings, Kong uses `%20` in many other APIs (inherited from Nginx / OpenResty).\n",
        "type": "Breaking Change",
        "scope": "Plugin"
      },
      {
        "message": "Fixed potential connection leaks when the data plane failed to connect to the control plane.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**response-ratelimiting**: Fixed an issue where usage headers that were supposed to be sent to the upstream were lost instead.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where `socket_path` permissions were not correctly set to `755` when the umask setting did not give enough permissions.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where targets couldn't be removed from the DNS query if they were deleted or updated via the Admin API.",
        "scope": "Core",
        "type": "bugfix"
      },
      {
        "message": "Fixed an issue where the `tls_verify`, `tls_verify_depth`, and `ca_certificates` properties of a service were not included in the upstream keepalive pool name.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**file-log**: Fixed an issue where an error would occur when there were spaces at the beginning or end of a path.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenTelemetry**: This plugin now supports instana headers in propagation.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Reduced the LMDB storage space by optimizing the key format.",
        "type": "performance",
        "scope": "Core"
      },
      {
        "message": "Improved performance of trace ID size lookup.",
        "type": "performance",
        "scope": "Core"
      },
      {
        "message": "**Prometheus**: Added the capability to enable or disable exporting of Proxy-Wasm metrics.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Refined PDK usage for better performance.",
        "type": "performance",
        "scope": "PDK"
      },
      {
        "message": "**session**: Added two boolean configuration fields `hash_subject` (default `false`) and `store_metadata` (default `false`) to store the session's metadata in the database.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "The upstream URI variable is now refreshed when the proxy pass balancer is recreated.",
        "type": "feature",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "**Confluent**: Added support for message manipulation with the new configuration field `message_by_lua_functions`.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Confluent**: Added support for sending messages to multiple topics with `topics_query_arg`, and enabled topic allowlisting with `allowed_topics`.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Added external consumer support for Konnect.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**kafka-upstream**: Added support for sending messages to multiple topics with `topics_query_arg`, and enabled topic allowlisting with `allowed_topics`.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**kafka-upstream**: Added support for message manipulation with the new configuration field `message_by_lua_functions`.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**ai-sanitizer**: Added a new plugin that can sanitize the PII information in requests before the requests are proxied by the AI Proxy or AI Proxy Advanced plugin.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**ai**: Added support for boto3 SDKs for Bedrock provider, and for Google GenAI SDKs for Gemini provider.\n",
        "type": "feature",
        "plugins": [
          "ai-prompt-decorator",
          "ai-prompt-guard",
          "ai-proxy-advanced",
          "ai-proxy",
          "ai-rate-limiting-advanced",
          "ai-semantic-cache",
          "ai-semantic-prompt-guard"
        ],
        "scope": "Plugin"
      },
      {
        "message": "**ai**: Added an AI Gateway sales counter for license reporting.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**ai-rate-limiting-advanced**: Added support for allowing multiple rate limits for the same providers.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**kafka-consume**: Added the `kafka-consume` plugin, which adds Kafka consumption capabilities to Kong.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Added a new core entity to Kong Gateway: partials. Partials enable users to define shared configuration for Redis.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**ai**: Added support for `pgvector` database in the `ai` related plugins.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**ai-proxy-advanced**: Added new `priority` balancer algorithm, which allows setting apriority group for each upstream model.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**request-callout**: Added the `request-callout` plugin, which provides complex request augmentation and internal authentication.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy-advanced**: Added the `failover_criteria` configuration option, which allows retrying requests to the next upstream server in case of failure.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Added an optional configuration parameter `admin_gui_csp_header_value` to Gateway, which controls the value of the Content-Security-Policy (CSP) header served with Admin GUI (Kong Manager).",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Bumped libxml2 from 2.12.9 to 2.12.10.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Updated included debug tools: `curl` to 8.12.1, the Mozilla CA Certificate Store to 2025-02-25, and `nghttp2` to 1.65.0.\n",
        "type": "dependency",
        "scope": "CLI Command"
      },
      {
        "message": "**AI-RAG-Injector**: Added a new plugin which allows automatically injecting documents to simplify building RAG pipelines.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**AI Proxy Advanced**: Added cost to `tokens_count_strategy` when using the lowest-usage load balancing strategy.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**oas-validation**: Added support for the `discriminator` keyword in OpenAPI specs.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**AI Plugins**: Added the `huggingface`, `azure`, `vertex`, and `bedrock` providers to embeddings. They can be used by the ai-proxy-advanced, ai-semantic-cache, ai-semantic-prompt-guard, and ai-rag-injector plugins.\n",
        "type": "feature",
        "plugins": [
          "ai-proxy-advanced",
          "ai-semantic-cache",
          "ai-semantic-prompt-guard",
          "ai-rag-injector"
        ],
        "scope": "Plugin"
      },
      {
        "message": "Added support for incremental config sync for hybrid mode deployments. Instead of sending the entire entity config to data planes on each config update, incremental config sync lets you send only the changed configuration to data planes.\n",
        "type": "feature",
        "scope": "Clustering"
      },
      {
        "message": "**json-threat-protection**: Added the schema field `allow_duplicate_object_entry_name` to allow or disallow duplicate object keys in JSON payloads. When set to `false`, the plugin will reject JSON payloads with duplicate object keys. The default value is `true`, which is same as the previous behavior.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**jwe**: JWE now supports the following encryption algorithms: A128GCM, A192GCM, A128CBC-HS256, A192CBC-HS384, A256CBC-HS512.\n",
        "type": "feature",
        "scope": "PDK"
      },
      {
        "message": "**AI Plugins**: Allow authentication to Bedrock services with assume roles in AWS.\n",
        "type": "feature",
        "plugins": [
          "ai-proxy-advanced",
          "ai-proxy",
          "ai-rag-injector",
          "ai-request-transformer",
          "ai-response-transformer",
          "ai-semantic-cache",
          "ai-semantic-prompt-guard"
        ],
        "scope": "Plugin"
      },
      {
        "message": "**oas-validation**: Added support for `oneOf`, `anyOf`, `allOf`, and `not` keywords.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**AI Proxy Advanced**: Added the ability to set a catch-all target in semantic routing.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy-advanced**: Fixed an issue where the ai-proxy-advanced plugin failed to failover between providers of different formats.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**app-dynamics**: Fixed a segmentation fault caused by a missing destructor call on process exit.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where a certificate entity configured with a vault reference occasionally didn't get refreshed on time when initialized with an invalid string.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where a mismatch between If-Match in requests and ETag in responses would result in a bad case in the response phase.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where modifying x-forwarded header before access phase may not take effect\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**forward-proxy**: Fixed an issue where the `upstream_status` field was empty in logs when using the `forward-proxy` plugin.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**jq**: Fixed an issue where jq did not work properly with proxy-cache-advanced.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**jwt-signer**: Fixed an issue where the jwt-signer plugin failed to upsert jwks if the jwks contains extra custom fields.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ldap-auth-advanced**: Fixed an issue where binary string was truncated at the first null character.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where Admin API Enterprise-only entities were not writable when a license expired but was still in the grace period.",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "**mocking**: Fixed an issue where random delays were out of range.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where DNS answers with TTL=0 were incorrectly cached indefinitely in the new DNS client.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**rate-limiting-advanced**: Fixed an issue where the runtime failed due to `sync_rate` not being set if the `strategy` was `local`.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**service-protection**: Fixed an issue where the runtime failed due to `sync_rate` not being set if the `strategy` was `local`.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**oas-validation**: Fixed an issue where query params without values caused an assertion failure.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**openid-connect**: Fixed an issue where forbidden requests were redirected to `unauthorized_redirect_uri` if configured. After the fix, forbidden requests will be redirected to `forbidden_redirect_uri` if configured.\n",
        "type": "Breaking Change",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where Kong could have connection leaks when failing to connect to an upstream by websocket.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where a newly spawned worker couldn't use RDS IAM authentication when an old worker was decommissioned.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Created connection pools for each `host`, `port`, `username`, `ssl` combination to fix the following issues:\n\n  - Fixed a 401 error where multiple plugins (for example, Rate Limiting Advanced and OpenID Connect) were configured to use different Redis databases.\n  - Prevented malicious clients from gaining access to shared authenticated connections, thus protecting Redis servers.\n  - Restricted clients with limited ACL control to their granted scope.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**pre-function**: Fixed an issue where a duplicate `protocols` field was accidentally added to the `pre-function` schema.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-semantic-cache**: Fixed an issue where the Refresh header wasn't properly sent to the client.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Analytics**: Fixed an issue where `trace_id` did not honor the value extracted during tracing headers propagation.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Vault**: Updated the AWS Vault supported regions list to the latest.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**ai-proxy**: Fixed an issue where Gemini streaming responses were getting truncated and/or missing tokens.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy**: Fixed an incorrect error thrown when trying to log streaming responses.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**AI Plugins**: - Fixed an issue where templates weren't being resolved correctly.\n- The plugins now support nested fields.\n",
        "type": "bugfix",
        "scope": "Plugin",
        "plugins": [
          "ai-proxy",
          "ai-request-transformer",
          "ai-response-transformer"
        ]
      },
      {
        "message": "**ai-rate-limiting-advanced**: `window_size` and `limit` now require an array of numbers instead of a single number.\nIf you configured the plugin before 3.10 and use `kong migrations` to upgrade to 3.10, it will be automatically migrated to use the array.\n",
        "type": "Breaking Change",
        "scope": "Plugin"
      },
      {
        "message": "**ai-semantic-cache**: Fixed issue where the SSE body may have extra trailing.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy**: Fixed tool calls not working in streaming mode for Bedrock and Gemini providers.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where Konnect analytics were missing for Kong AI Gateway.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Added support for the new Ollama streaming content type in the AI driver.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**ai-proxy**: Fixed preserve mode.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-semantic-prompt-guard**: Fixed an issue where Kong Gateway was not able to reconfigure the plugin when using DB-less mode.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where a false error log was generated when a DELETE request with `Content-Type: application/json` and no body was made.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where event hooks sometimes ignored events, caused by the normalized table not including values of type number or boolean.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the PEM-formatted private keys in the keys entity were not encrypted when keyring was enabled.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**service-protection**: Enhanced robustness for user misconfigurations. The following use cases are now handled:\n  - RLA and service-protection are configured on the same service.\n  - There is no service but the service-protection plugin is enabled with global scope.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy-advanced**: Fixed an issue where the ai-proxy-advanced plugin identity running failed in retry scenarios.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Added a new feature to invalidate the admin's or the developer's related session while changing the password.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**json-threat-protection**: This plugin now accurately supports proxying for non-`POST/PUT/PATCH` requests.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**oas-validation**: Improved performance on OpenAPI 3.0.",
        "type": "performance",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID-Connect**: Removed issuer discovery from schema to improve performance upon plugin initialization or updating. The issuer discovery will only be triggerd by client requests.",
        "type": "performance",
        "scope": "Plugin"
      },
      {
        "message": "Free mode is no longer available. Starting Kong without a license will now function the same as Kong with an expired license.",
        "type": "Breaking Change",
        "scope": "Core"
      },
      {
        "message": "Added a feature to store the last sync time on the Data Plane side.\n",
        "type": "feature",
        "scope": "Clustering"
      },
      {
        "message": "Updated `/license/report` endpoint to include counts for Kafka consumption, Confluent Kafka consumption, and Confluent production.\n",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "Fixed an issue where the \"meta\" field was not validated when creating or updating a portal developer.",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "**AI Proxy**: Some active tracing latency values are incorrectly reported as having zero length when using the AI Proxy plugin.\n",
        "type": "known-issues",
        "scope": "Plugin"
      },
      {
        "message": "**Kafka Consume**: Kong Gateway allows you to configure the Kafka Consume plugin without authentication settings, but authentication must be configured for the plugin to work.\n\nIf authentication is not configured, or if the authentication strategy is missing, the plugin will fail with a generic authentication error.\n",
        "type": "known-issues",
        "scope": "Plugin"
      },
      {
        "message": "**Confluent Consume and Kafka Consume plugins**: An error message appears in the logs about a missing cluster name, even when the name is specified.\n",
        "type": "known-issues",
        "scope": "Plugin"
      },
      {
        "message": "**Vault Auth**: The Vault Auth plugin doesn't clear its cache when incremental sync is turned on. This means that deleted secrets will remain in the cache, and can still be accessed by the plugin.\n",
        "type": "known-issues",
        "scope": "Plugin"
      },
      {
        "message": "A bug originating from the underlying OpenResty platform affects connection pooling in certain circumstances. \nThis issue impacts transaction handling and negatively impacts performance, resulting in reduced request rates and increased latencies.\n Versions 3.10.0.0 and 3.10.0.1 are both affected. To resolve this regression, please upgrade to Kong Gateway 3.10.0.2 or later.\n",
        "type": "known-issues",
        "scope": "Core"
      },
      {
        "message": "When running in incremental sync mode ([`incremental_sync=on`](/gateway/configuration/#incremental-sync)), Kong Gateway can't apply configuration deltas to the stream subsystem. \nThis issue affects versions 3.10.0.0 and above, where incremental sync is enabled alongside stream proxying ([`stream_listen`](/gateway/configuration/#stream-listen)).\nAs a workaround for this issue, set `incremental_sync=off` when using stream proxying.\n",
        "type": "known-issues",
        "scope": "Core"
      },
      {
        "message": "The Brotli module is missing from all of the following ARM64 Kong Gateway Docker images:\n* RHEL 9\n* Debian 12\n* Amazon Linux 2\n* Amazon Linux 2023\n",
        "type": "known-issues",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "Fixed an issue where the lists in the UI would flicker under some circumstances.",
        "type": "bugfix",
        "githubs": [
          3663
        ],
        "scope": "Core"
      },
      {
        "message": "Add Redis shared configuration support in Plugins.",
        "type": "feature",
        "githubs": [
          3701
        ],
        "scope": "Core"
      },
      {
        "message": "Kong Manager now shows the scope option in gray when it can't be changed.",
        "type": "feature",
        "githubs": [
          3664
        ],
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the license expiration date was calculated incorrectly.",
        "type": "bugfix",
        "githubs": [
          3675
        ],
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where creating `jwt-credential` with special algorithms (`PS256`, `PS384`, `PS512`, and `EdDSA`) couldn't populate `rsa_public_key` in the Kong Manager.\n",
        "type": "bugfix",
        "githubs": [
          3755
        ],
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where editing an upstream would not remove the values of some fields (`client certificate`, `tags`, `timeouts`, and `host_header`, etc) in the Kong Manager.\n",
        "type": "bugfix",
        "githubs": [
          3793
        ],
        "scope": "Core"
      },
      {
        "message": "Kong Manager now returns to the previous page upon canceling plugin editing.",
        "type": "feature",
        "githubs": [
          3690
        ],
        "scope": "Core"
      }
    ]
  },
  "3.9.0.0": {
    "kong": [
      {
        "message": "Add Ubuntu 24.04 (Noble Numbat) to build",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**ai-proxy**: Fixed a bug where tools (function) calls to Anthropic would return empty results.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy**: Fixed a bug where tools (function) calls to Bedrock would return empty results.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy**: Fixed a bug where Bedrock Guardrail config was ignored.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy**: Fixed a bug where tools (function) calls to Cohere would return empty results.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy**: Fixed a bug where Gemini provider would return an error if content safety failed in AI Proxy.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy**: Fixed a bug where tools (function) calls to Gemini (or via Vertex) would return empty results.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy**: Fixed an issue where AI Transformer plugins always returned a 404 error when using 'Google One' Gemini subscriptions.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-transformers**: Fixed a bug where the correct LLM error message was not propagated to the caller.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Bumped the bundled `datakit` Wasm filter to `0.3.1`",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Updated the default base for RPM Dockerfile from UBI 8 to UBI 9.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-kong-nginx-module from 0.11.0 to 0.13.1 to fix the upstream cert chain issue and enable the new API for retrieving SSL pointer.\n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-aws to 1.5.4, to fix a bug inside region prefix generating",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-events to 0.3.1. Optimized the memory usage.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Updated lua-resty-ljsonschema to 1.2.0. Fixed UTF-8 string length calculation and added support for `null` in `enum` types.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-lmdb to 1.6.0. Allowing page_size to be 1.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-lmdb to 1.5.0. Added page_size parameter to allow overriding page size from caller side.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `ngx_wasm_module` to `9136e463a6f1d80755ce66c88c3ddecd0eb5e25d`",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**Prometheus**: Bumped KONG_LATENCY_BUCKETS bucket's maximal capacity to 6000",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Bumped `Wasmtime` version to `26.0.0`",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped OpenSSL to 3.2.3, to fix unbounded memory growth with session handling in TLSv1.3 and other CVEs",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**Clustering**: Adjust error log levels for control plane connections.",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Added a remote procedure call (RPC) framework for Hybrid mode deployments.",
        "type": "feature",
        "scope": "Clustering"
      },
      {
        "message": "`node_id` in configuration has been deprecated.",
        "scope": "Core",
        "type": "deprecation"
      },
      {
        "message": "**Core**: Added Ada dependency - WHATWG-compliant and fast URL parser.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Addded a new LLM driver for interfacing with the Hugging Face inference API.\nThe driver supports both serverless and dedicated LLM instances hosted by\nHugging Face for conversational and text generation tasks.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**ai-proxy**: Disabled HTTP/2 ALPN handshake for connections on routes configured with AI-proxy. \n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Admin API**: Added support for official YAML media-type (application/yaml) to /config endpoint.\n",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "**Core**: Added `tls.disable_http2_alpn()` function needed patch for disabling HTTP/2 ALPN when tls handshake.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Add the `kong drain` CLI command to make the `/status/ready` endpoint return `503 Service Unavailable` response.",
        "type": "feature",
        "scope": "CLI Command"
      },
      {
        "message": "Added `kong.service.request.clear_query_arg(name)` to PDK.",
        "type": "feature",
        "scope": "PDK"
      },
      {
        "message": "Improved the output of the request debugger:\n- Now the resolution of field `total_time` is microseconds.\n- A new field `total_time_without_upstream` on the top level shows the latency only introduced by Kong.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Array and Map type span attributes are now supported by the tracing PDK",
        "type": "feature",
        "scope": "PDK"
      },
      {
        "message": "Fix for querying admin API entities with empty tags",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "**AI-Proxy**: Fixed issue where multi-modal requests is blocked on azure provider. \n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an bug that AI semantic cache can't use request provided models",
        "type": "bugfix",
        "plugins": [
          "ai-semantic-cache"
        ],
        "scope": "Plugin"
      },
      {
        "message": "**AWS-Lambda**: Fixed an issue in proxy integration mode that caused internal server error when the `multiValueHeaders` is null.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed a bug where the health checker could fail to initialize in rare cases.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fix to always pass `ngx.ctx` to `log_init_worker_errors` as otherwise it may runtime crash.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**jwt**: ensure `rsa_public_key` isn't base64-decoded.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**key-auth**: Fixed to retain order of query arguments when hiding the credentials.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Loggly**: Fixed an issue where `/bin/hostname` missing caused an error warning on startup.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Core**: Fixed an issue where `ngx.balancer.recreate_request` API does not refresh body buffer when `ngx.req.set_body_data` is used in balancer phase\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where nested parameters can not be parsed correctly when using form-urlencoded requests.",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "Line up the `kong.log.inspect` function to log at `notice` level as documented\nin the PDK documentation (used to be `debug`).\n",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "Fixed an issue where the workspace id was not included in the plugin config in the plugins iterator.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the `retries` error message incorrectly referred to the port.",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "**rate-limiting**: Fix a bug where the return values from `get_redis_connection()` are mistaken.",
        "scope": "Plugin",
        "type": "bugfix"
      },
      {
        "message": "**Rate-Limiting**: Fixed an issue that caused an HTTP 500 error when `hide_client_headers` is set to `true` and the request exceeds the rate limit.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed a 500 error triggered by unhandled nil fields during schema validation.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Vault**: Fixed an issue where array-like configuration fields cannot contain vault reference.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Vault**: Fixed an issue where updating a vault entity in a non-default workspace will not take effect.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Vault**: Fixed an issue where vault reference in kong configuration cannot be dereferenced when both http and stream subsystems are enabled.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**proxy-wasm:** Added a check that prevents Kong from starting when the\ndatabase contains invalid Wasm filters.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**redirect**: Add a new plugin to redirect requests to another location\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Prometheus**: Added support for Proxy-Wasm metrics.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where the `kong.request.enable_buffering` can not be used when downstream uses HTTP/2.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**proxy-wasm**: Added support for Wasm filters to be configured via the /plugins admin API",
        "type": "feature",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "**rate-limiting-advanced**: Added a new configuration field `lock_dictionary_name` to support specifying an independent shared memory for storing locks.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy-advanced**: Added support for streaming responses to the AI Proxy Advanced plugin.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**ai-rate-limiting-advanced**: Added support for Huggingface provider to the AI Rate Limiting Advanced plugin.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Added the ability to remove the consumer list from the return value for consumer groups Admin API `/consumer_groups/:consumer_groups` when `list_consumers=false`.\n",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "Added a new feature for Kong Manager that supports multiple domains, enabling dynamic cross-origin access for Admin API requests.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added a configuration parameter `admin_gui_auth_login_attempts_ttl` (default to `604800`) to allow users to specify a custom duration to wait before they can try login again if they have exceeded the maximum login attempts. This is only meaningful when `admin_gui_auth_login_attempts` is a positive number.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "let the embedding driver cache the embeddings for a given model in the current request\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**ai-semantic-cache**, **ai-semantic-prompt-guard**, **ai-proxy-advanced**: Made the\n`embeddings.model.name` config field a free text entry, enabling use of a\nself-hosted (or otherwise compatible) model.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**ai-semantic-cache**: Fixed the exact matching to catch everything including embeddings.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-semantic-cache**: Added `ignore_tool` configuration option to discard tool role prompts from the input text.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Bumped `kong-redis-cluster` to `1.5.5`.\n\n1. Currently, the timeout for acquiring a lock is fixed to `5s`.\n   We added a new option `lock_timeout` to make it configurable.\n2. The lock timeout parameter was incorrectly set to `time_out = 0`.\n   We fix it to `timeout = 0`. This would improve perf as there is no\n   need for each instance to refresh the slots.\n3. Returned detailed error message to downstream\n   component (e.g. Kong Gateway) for better debuggability.\n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-azure to 1.6.1 to fix a GET request build issue",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Entity counts in `/license/report` were retrieved with `select count` instead of `workspace_entity_counters` table on db mode.",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "Entity counts in `/workspaces?counter` and `/workspace/<workspace>/meta` were retrieved with `select count` instead of `workspace_entity_counters` table on db mode.",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "`/license/report` could retrive entity counts under db-less mode.",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "`/workspaces?counter` and `/workspace/<workspace>/meta` could retrieve entity counts under db-less mode.",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "Fixed an issue where EventHooks is not working in Data Planes.",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "**Rate-Limiting-Advanced**: Added support for authentication from Kong Gateway to Envoy Proxy.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**openid-connect**: Allowed `http_proxy_authorization` and `https_proxy_authorization` to be referenceable.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Rate-Limiting-Advanced**: Added support for combining multiple identifier items with the new configuration field `compound_identifier`.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**ai-semantic-cache**: Plugin can now be enabled on Consumer Groups.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Added an option for GitHub Actions to build nginx/OpenResty with debug symbols.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**openid-connect**: Added the `introspection_post_args_client_headers` config option, \nallowing you to pass client headers as introspection POST body arguments.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy-advanced**, **ai-semantic-prompt-guard**: Fixed an issue where stale plugin config was not updated in dbless and hybrid mode.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy-advanced**: Fixed an issue where lowest-usage and lowest-latency strategy did not update data points correctly.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**AI Rate Limiting Advanced**: Updated the error message for rate limit exceeded to include AI-related information.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-rate-limiting-advanced**: Fixed an issue where the plugin yielded an error when incrementing the rate limit counters in non-yieldable phases.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where the ai-semantic-cache plugin would abort in stream mode when another plugin enable the buffering proxy mode.",
        "type": "bugfix",
        "plugins": [
          "ai-semantic-cache"
        ],
        "scope": "Plugin"
      },
      {
        "message": "**ai-semantic-cache**: Fixed an issue where the ai-semantic-cache plugin put the wrong type value in the metrics when using the prometheus plugin.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-request-transformer**, **ai-response-transformer**: Fixed an issue where Azure Managed Identity did not work for AI Transformer Plugins.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAS-validation**: Fixed an issue where the error message was omitted if `notify_only_request_body_validation_failure` or `notify_only_response_body_validation_failure` was set to `false`.",
        "scope": "Plugin",
        "type": "bugfix"
      },
      {
        "message": "Fixed an issue where paginated results of `audit_requests` fetched via the `next` field were incorrect when `before` and `after` filters were applied.",
        "scope": "Core",
        "type": "bugfix"
      },
      {
        "message": "**oas-validation**: Fixed an issue where the `include_base_path` did not work when multiple servers were provided.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed the clustering compatibility logic for the RDS assume role and custom STS endpoint features backport.",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "**degraphql**: Fixed an issue where the degraphql routes were updated from the control plane but not updated in the degraphql router on the data plane.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed the issue where the entities' counter was not displayed in certain cases when they were empty.",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "Fixed an issue where event_hooks added during runtime didn't function until restart.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**exit-transformer**: Fixed an issue where the exit-transformer could not take effect on invalid non-admin requests.",
        "scope": "Plugin",
        "type": "bugfix"
      },
      {
        "message": "Fixed an issue where using Hashicorp Vault AppRole authentication with a secret ID file would fail to read the secret ID.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**json-threat-protection**: Fixed an issue where the length counting of escape sequences, non-ASCII characters, and object entry names in JSON Strings was incorrect; now using UTF-8 character count instead of bytes.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**jwe-decrypt**: Fixed an issue where an unnecessary warn log was printed.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Kafka Log**: Fixed an issue where the plugin cannot function correctly when it is configured in a non-default workspace with certificate_id.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**openid-connect**: Fixed an `500` error caused by JSON `null` from the request body when parsing bearer tokens or client IDs.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**openid-connect**: Fixed an issue where the configured Redis database was ignored.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID Connect**: Fixed an issue where the `token_cache_key_include_scope` feature was not considering scopes defined via `config.scopes` to generate the cache key.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**kafka-log**: Reduced noisy logs from kafka-log and counters.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fix an issue where running the \"kong migration\" command will fail when upgrading to 3.8 version, which is caused by an incomplete Redis configuration related SQL.",
        "type": "deprecation",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Fixed an issue where counters of the overriding consumer groups didn't fetched when the window_size is different and the workspace is non-default.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**rate-limiting-advanced**: Fixed an issue where a warn log was printed when event_hooks was disabled.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**rate-limiting-advanced**: Fixed an issue where multiple plugin instances sharing the same namespace enforced consumer groups and different `window_size`s were used in the consumer group overriding configs, then the rate limiting of some consumer groups would fall back to local strategy. Now every plugin instance sharing the same namespace can set different `window_size`.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAS**: Fixed an issue where the spec could not be located if the `Content-Type` in the request/response body included parameters (e.g., `application/json; charset=utf8`), while the openapi specification defined in `api_spec` did not include parameters.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed a connection leak issue where the websocket connection was not closed promptly during reconnection.",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "**ai-prompt-guard**: Fixed an issue where the *ai-prompt-guard* plugin could fail when handling requests with multiple models.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-semantic-cache**: Fixed an issue where the plugin failed when handling requests with multiple models.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-semantic-prompt-guard**: Fixed an issue where requests with multiple models caused failures.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**json-threat-protection**: Fixed an issue where certain default parameter values were incorrectly interpreted as 0 in some environments (e.g., ARM64-based):\n* `max_container_depth`\n* `max_object_entry_count`\n* `max_object_entry_name_length`\n* `max_array_element_count`\n* `max_string_value_length`\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-rate-limiting-advanced**: Fixed an issue where the plugin may fail to authenticate to Redis correctly with vault-referenced redis configuration.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**graphql-rate-limiting-advanced**: Fixed an issue where the plugin may fail to authenticate to Redis correctly with vault-referenced redis configuration.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**rate-limiting-advanced**: Fixed an issue where the plugin may fail to authenticate to Redis correctly with vault-referenced redis configuration.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**app-dynamics**: Fixed an issue where the `snapshot` of the fields upstream, service, route and consumer was missing in the AppDynamics plugin.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**jwt-signer**: Supported `/jwt-signer/jwks` endpoint in dbless mode",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**injection-protection**: Added the `injection-protection` plugin that supports blocking requests based on regex patterns.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Request-validator**: Fixed an issue where requests get rejected when defining an object parameter with form style and exploded.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Fixed an issue where RLA stores long expiration time items cause `no memory` errors.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**service-protection**: Implemented a new plugin to protect services with request rate limiting.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where RBAC authorization could be enabled via `enforce_rbac` in DB-less mode. RBAC authorization should be disabled in DB-less mode.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where massive routes insertion causes crashing and 500.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Added Ubuntu 24.04 (Noble Numbat) FIPS packages and image.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Added a feature to allow updating the `belong_workspace` field of an admin via the Admin API and Kong Manager.",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "The Brotli module is missing from all of the following ARM64 Kong Gateway Docker images:\n* RHEL 9\n* Debian 12\n* Amazon Linux 2\n* Amazon Linux 2023\n",
        "type": "known-issues",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "Fixed an issue where the content in the header and footer were not center aligned when enabled.",
        "type": "bugfix",
        "githubs": [
          3547
        ],
        "scope": "Core"
      },
      {
        "message": "Kong Manager will now show a more friendly error message when failing to delete a service.",
        "type": "feature",
        "githubs": [
          3541
        ],
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where Kong Manager was not displaying the overview page when there is a workspace with the name \"portal\" (case-insensitive).",
        "type": "bugfix",
        "githubs": [
          3613
        ],
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where Kong Manager was not redirecting users to the previous page after cancelling the plugin creation.",
        "type": "bugfix",
        "githubs": [
          3554
        ],
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the username does not allow special characters.",
        "type": "bugfix",
        "githubs": [
          3584
        ],
        "scope": "Core"
      }
    ]
  },
  "3.8.0.0": {
    "kong": [
      {
        "message": "**acl**: Added a new config `always_use_authenticated_groups` to support using authenticated groups even when an authenticated consumer already exists.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "AI plugins: retrieved latency data and pushed it to logs and metrics.",
        "type": "feature",
        "scope": "Plugin",
        "plugins": [
          "ai-proxy",
          "ai-request-transformer",
          "ai-response-transformer",
          "prometheus"
        ]
      },
      {
        "message": "**prometheus**: Added `ai_requests_total`, `ai_cost_total` and `ai_tokens_total` metrics in the Prometheus plugin to start counting AI usage.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added support for brackets syntax for map fields configuration via the Admin API",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "**AI plugins**: allow AI plugin to read request from buffered file",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**AI-proxy**: Add `allow_override` option to allow overriding the upstream model auth parameter or header from the caller's request.\n",
        "scope": "Plugin",
        "type": "feature"
      },
      {
        "message": "Kong AI Gateway (AI Proxy and associated plugin family) now supports \nall AWS Bedrock \"Converse API\" models.\n",
        "type": "feature",
        "scope": "Plugin",
        "plugins": [
          "ai-proxy",
          "ai-request-transformer",
          "ai-response-transformer"
        ]
      },
      {
        "message": "**AI-proxy**: Fixed a bug where certain Azure models would return partial tokens/words \nwhen in response-streaming mode.\n",
        "scope": "Plugin",
        "type": "bugfix"
      },
      {
        "message": "**AI-Transformers**: Fixed a bug where cloud identity authentication \nwas not used in `ai-request-transformer` and `ai-response-transformer` plugins.\n",
        "scope": "Plugin",
        "type": "bugfix",
        "plugins": [
          "ai-request-transformer",
          "ai-response-transformer"
        ]
      },
      {
        "message": "**AI-proxy**: Fixed a bug where Cohere and Anthropic providers don't read the `model` parameter properly \nfrom the caller's request body.\n",
        "scope": "Plugin",
        "type": "bugfix"
      },
      {
        "message": "**AI-proxy**: Fixed a bug where using \"OpenAI Function\" inference requests would log a \nrequest error, and then hang until timeout.\n",
        "scope": "Plugin",
        "type": "bugfix"
      },
      {
        "message": "**AI-proxy**: Fixed a bug where AI Proxy would still allow callers to specify their own model,  \nignoring the plugin-configured model name.\n",
        "scope": "Plugin",
        "type": "bugfix"
      },
      {
        "message": "**AI-proxy**: Fixed a bug where AI Proxy would not take precedence of the \nplugin's configured model tuning options, over those in the user's LLM request.\n",
        "scope": "Plugin",
        "type": "bugfix"
      },
      {
        "message": "Kong AI Gateway (AI Proxy and associated plugin family) now supports \nthe Google Gemini \"chat\" (generateContent) interface.\n",
        "type": "feature",
        "scope": "Plugin",
        "plugins": [
          "ai-proxy",
          "ai-request-transformer",
          "ai-response-transformer"
        ]
      },
      {
        "message": "**ai-proxy**: Allowed mistral provider to use mistral.ai managed service by omitting upstream_url",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy**: Added a new response header X-Kong-LLM-Model that displays the name of the language model used in the AI-Proxy plugin.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**AI-proxy**: Fixed a bug where setting OpenAI SDK model parameter \"null\" caused analytics \nto not be written to the logging plugin(s).\n",
        "scope": "Plugin",
        "type": "bugfix"
      },
      {
        "message": "Bumped lua-protobuf 0.5.2",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-acme to 0.15.0 to support username/password auth with redis.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-aws to 1.5.3 to fix a bug related to STS regional endpoint.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-events to 0.3.0 to fix an issue that was preventing the configuration from being updated to the latest version\n",
        "scope": "Core",
        "type": "Feature"
      },
      {
        "message": "Bumped lua-resty-healthcheck from 3.0.1 to 3.1.0 to fix an issue that was causing high memory usage\n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-lmdb to 1.4.3 to get fixes from the upstream (lmdb 0.9.33), which resolved numerous race conditions and fixed a cursor issue.\n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-openssl to 1.5.1 to fix some issues including a potential use-after-free issue.\n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped LuaRocks from 3.11.0 to 3.11.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `ngx_wasm_module` to `96b4e27e10c63b07ed40ea88a91c22f23981db35`",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped OpenResty to 1.25.3.2 to improve the performance of the LuaJIT hash computation.\n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped PCRE2 to 10.44 to fix some bugs and tidy-up the release (nothing important)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `Wasmtime` version to `25.0.1`",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where validation of the certificate schema failed if the `snis` field was present in the request body.",
        "scope": "Admin API",
        "type": "bugfix"
      },
      {
        "message": "**AI-Prompt-Guard**: add `match_all_roles` option to allow match all roles in addition to `user`.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**AWS-Lambda**: A new configuration field `empty_arrays_mode` is now added to control whether Kong should send `[]` empty arrays (returned by Lambda function) as `[]` empty arrays or `{}` empty objects in JSON responses.`\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Added `0` to support unlimited body size. When parameter `max_allowed_file_size` is `0`, `get_raw_body` will return the entire body, but the size of this body will still be limited by Nginx's `client_max_body_size`.",
        "type": "feature",
        "scope": "PDK"
      },
      {
        "message": "Added a new configuration `concurrency_limit`(integer, default to 1) for Queue to specify the number of delivery timers.\nNote that setting `concurrency_limit` to `-1` means no limit at all, and each HTTP log entry would create an individual timer for sending.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added support for json_body rename in response-transformer plugin\n",
        "type": "feature",
        "plugins": [
          "response-transformer"
        ],
        "scope": "Plugin"
      },
      {
        "message": "Append gateway info to upstream `Via` header like `1.1 kong/3.8.0`, and optionally to\nresponse `Via` header if it is present in the `headers` config of \"kong.conf\", like `2 kong/3.8.0`,\naccording to `RFC7230` and `RFC9110`.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**ACME**: Fixed an issue of DP reporting that deprecated config fields are used when configuration from CP is pushed",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ACME**: Fixed an issue where username and password were not accepted as valid authentication methods.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**AI-Proxy**: Fixed issue when response is gzipped even if client doesn't accept.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Prometheus**: Fixed an issue where CP/DP compatibility check was missing for the new configuration field `ai_metrics`.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed certain AI plugins cannot be applied per consumer or per service.",
        "type": "bugfix",
        "scope": "Plugin",
        "plugins": [
          "ai-proxy",
          "ai-prompt-template",
          "ai-response-transformer"
        ]
      },
      {
        "message": "**AI-Prompt-Guard**: Fixed an issue when `allow_all_conversation_history` is set to false, the first user request is selected instead of the last one.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**AI-Proxy**: Resolved a bug where the object constructor would set data on the class instead of the instance",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**AWS-Lambda**: Fixed an issue that the plugin does not work with multiValueHeaders defined in proxy integration and legacy empty_arrays_mode.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**AWS-Lambda**: Fixed an issue that the `version` field is not set in the request payload when `awsgateway_compatible` is enabled.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where hybrid mode not working if the forward proxy password contains special character(#). Note that the `proxy_server` configuration parameter still needs to be url-encoded.",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Fixed an issue where some debug level error logs were not being displayed by the CLI.\n",
        "type": "bugfix",
        "scope": "CLI Command"
      },
      {
        "message": "**correlation-id**: Fixed an issue where the plugin would not work if we explicitly set the `generator` to `null`.\n",
        "scope": "Plugin",
        "type": "bugfix"
      },
      {
        "message": "**CORS**: Fixed an issue where the `Access-Control-Allow-Origin` header was not sent when `conf.origins` has multiple entries but includes `*`.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where 'read' was not always passed to Postgres read-only database operations.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Deprecated shorthand fields don't take precedence over replacement fields when both are specified.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Removed unnecessary DNS client initialization",
        "type": "performance",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where `lua-nginx-module` context was cleared when `ngx.send_header()` triggered `filter_finalize` [openresty/lua-nginx-module#2323](https://github.com/openresty/lua-nginx-module/pull/2323).",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Changed the way deprecated shorthand fields are used with new fields.\nIf the new field contains null it allows for deprecated field to overwrite it if both are present in the request.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**grpc-gateway**: When there is a JSON decoding error, respond with status 400 and error information in the body instead of status 500.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**HTTP-Log**: Fix an issue where the plugin doesn't include port information in the HTTP host header when sending requests to the log server.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**PDK**: Fixed a bug that log serializer will log `upstream_status` as nil in the requests that contains subrequest\n",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "**AI Plugins**: Fixed an issue for multi-modal inputs are not properly validated and calculated.\n",
        "type": "bugfix",
        "scope": "Plugin",
        "plugins": [
          "ai-proxy",
          "ai-request-transformer",
          "ai-response-transformer"
        ]
      },
      {
        "message": "**OpenTelemetry**: Fixed an issue where migration fails when upgrading from below version 3.3 to 3.7.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenTelemetry / Zipkin**: remove redundant deprecation warnings",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Basic-Auth**: Fix an issue of realm field not recognized for older kong versions (before 3.6)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Key-Auth**: Fix an issue of realm field not recognized for older kong versions (before 3.7)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where unnecessary uninitialized variable error log is reported when 400 bad requests were received.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Request Size Limiting**: Fixed an issue where the body size doesn't get checked when the request body is buffered to a temporary file.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where the URI captures are unavailable when the first capture group is absent.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Response-RateLimiting**: Fixed an issue of DP reporting that deprecated config fields are used when configuration from CP is pushed",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate-Limiting**: Fixed an issue of DP reporting that deprecated config fields are used when configuration from CP is pushed",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where the priority field can be set in a traditional mode route\nWhen 'router_flavor' is configured as 'expressions'.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where setting `tls_verify` to `false` didn't override the global level `proxy_ssl_verify`.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the sni cache isn't invalidated when a sni is updated.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**OpenTelemetry**: Improved accuracy of sampling decisions.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "The kong.logrotate configuration file will no longer be overwritten during upgrade.\nWhen upgrading, set the environment variable `DEBIAN_FRONTEND=noninteractive` on Debian/Ubuntu to avoid any interactive prompts and enable fully automatic upgrades.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Vault**: Reference ending with slash when parsed should not return a key.\n",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "Fixed an issue where the Vault secret cache got refreshed during `resurrect_ttl` time and could not be fetched by other workers.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Error logs during Vault secret rotation are now logged at the `notice` level instead of `warn`.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Re-enabled the Lua DNS resolver from proxy-wasm by default.\n",
        "type": "bugfix",
        "scope": "Configuration"
      },
      {
        "message": "**hmac-auth**: Add WWW-Authenticate headers to 401 responses.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "fix a bug that the `host_header` attribute of upstream entity can not be set correctly in requests to upstream as Host header when retries to upstream happen.",
        "scope": "Core",
        "type": "bugfix"
      },
      {
        "message": "**Prometheus**: Improved error logging when having inconsistent labels count.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**jwt**: Add WWW-Authenticate headers to 401 responses.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ldap-auth**: Add WWW-Authenticate headers to all 401 responses.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Made the RPM package relocatable with the default prefix set to `/`.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**AI-proxy**: A configuration validation is added to prevent from enabling `log_statistics` upon\nproviders not supporting statistics. Accordingly, the default of `log_statistics` is changed from\n`true` to `false`, and a database migration is added as well for disabling `log_statistics` if it\nhas already been enabled upon unsupported providers.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Moved internal Unix sockets to a subdirectory (`sockets`) of the Kong prefix.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**OAuth2**: Add WWW-Authenticate headers to all 401 responses and realm option.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenTelemetry**: Added support for OpenTelemetry formatted logs.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue that pdk.log.serialize() will throw an error when JSON entity set by serialize_value contains json.null",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "extend kong.request.get_body and kong.request.get_raw_body to read from buffered file",
        "type": "feature",
        "scope": "PDK"
      },
      {
        "message": "Added a new PDK module `kong.telemetry` and function: `kong.telemetry.log`\nto generate log entries to be reported via the OpenTelemetry plugin.\n",
        "type": "feature",
        "scope": "PDK"
      },
      {
        "message": "**standard-webhooks**: Added standard webhooks plugin.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**proxy-cache**: Fixed an issue where the Age header was not being updated correctly when serving cached responses.\n",
        "scope": "Plugin",
        "type": "bugfix"
      },
      {
        "message": "Starting from this version, a new DNS client library has been implemented and added into Kong, which is disabled by default. The new DNS client library has the following changes - Introduced global caching for DNS records across workers, significantly reducing the query load on DNS servers. - Introduced observable statistics for the new DNS client, and a new Status API `/status/dns` to retrieve them. - Simplified the logic and make it more standardized\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Changed the behaviour of shorthand fields that are used to describe deprecated fields. If\nboth fields are sent in the request and their values mismatch - the request will be rejected.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Debian 10, CentOS 7, and RHEL 7 reached their End of Life (EOL) dates on June 30, 2024. As of version 3.8.0.0 onward, Kong is not building installation packages or Docker images for these operating systems. Kong is no longer providing official support for any Kong version running on these systems.",
        "type": "deprecation",
        "scope": "Core"
      },
      {
        "message": "**Request-Transformer**: Fixed an issue where renamed query parameters, url-encoded body parameters, and json body parameters were not handled properly when target name is the same as the source name in the request.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Introduced a yieldable JSON library `lua-resty-simdjson`,\nwhich would improve the latency significantly.\n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Reverted DNS client to original behaviour of ignoring ADDITIONAL SECTION in DNS responses.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Shortened names of internal Unix sockets to avoid exceeding the socket name limit.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Configure Wasmtime module cache when Wasm is enabled",
        "type": "feature",
        "scope": "Configuration"
      },
      {
        "message": "Improved latency performance when gzipping/gunzipping large data (such as CP/DP config data).",
        "type": "performance",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "**ai-proxy-advanced**: Added the `ai-proxy-advanced` plugin that supports advanced load balancing between LLM services.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**ai-semantic-cache**: Introduced AI Semantic Caching plugin, enabling you \nto configure an embeddings-based caching system for Large Language Model responses.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**ai-semantic-prompt-guard**: Added the `ai-semantic-prompt-guard` plugin that supports semantic similarity-based prompt guarding.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**confluent**: Added the `confluent` plugin which allows to interface with Confluent.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**ai-rate-limiting-advanced**: Add the cost strategy to AI rate Limiting plugin.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**json-threat-protection**: Added JSON threat protection plugin. Validates JSON nesting depth, array elements, object entries, key length, and string length. Logs or terminates violating requests.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Built-in RBAC roles for admins (`admin` under the default workspace and `workspace-admin` under non-default workspaces) now disallow CRUD actions to `/groups` and `/groups/*` endpoints.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**ai-rate-limiting-advanced**: Added the `bedrock` and `gemini` providers to the providers list in \nthe `ai-rate-limiting-advanced` plugin.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**app-dynamics**: Added new ANALYTICS_ENABLE flag and collected more snapshot userdata in runtime.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Fixed a bug where Azure Managed-Identity tokens would never rotate  \nin case of a network failure when authenticating.\n",
        "type": "bugfix",
        "scope": "Plugin",
        "plugins": [
          "ai-proxy",
          "ai-request-transformer",
          "ai-response-transformer"
        ]
      },
      {
        "message": "**ai-rate-limiting-advanced**: Add the stats when reaching limit and exiting AI rate Limiting plugin.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**analytics**: send AI analytics about latency and caching to Konnect.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**analytics**: Added support for also sending cache data of AI analytics to Konnect",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Improved the performance of Konnect Analytics by fetching Rate Limiting context more efficiently.",
        "type": "performance",
        "scope": "Core"
      },
      {
        "message": "The behavior of the configuration option `analytics_flush_interval` has changed\nfor saving memory resources by flushing analytics messages more frequently.\nIt now controls the maximum time interval between two flushes of\nanalytics messages to the configured backend, which means that\nif there are enough (less than `analytics_buffer_size_limit`)\nmessages have already been buffered,\nthe flush will happen before the configured interval.\nPreviously, Kong always tries to flush messages after the configured interval,\nregardless of the number of messages in the buffer.\n",
        "type": "bugfix",
        "scope": "Configuration"
      },
      {
        "message": "Improved the performance of Konnect Analytics by optimizing the buffering mechanism.",
        "type": "performance",
        "scope": "Core"
      },
      {
        "message": "Bumped `kong-lua-resty-kafka` to `0.20` to support TCP socket keepalive and allow client_id to be set for the kafka client.\n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bump lua-resty-jsonschema-rs to 0.1.5",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "bump lua-resty-cookie to 0.3.0",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped libxml2 to 2.12.9.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped libxslt to 1.1.42.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lua-resty-azure` to `1.6.0` to support more Azure authentication methods.\n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped luaexpat to 1.5.2.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped msgpack-c to 6.1.0.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `kong-redis-cluster` to `1.5.4`, fixing the following issues.\n\n1. Fixed an issue where Kong Gateway cannot recover if partial or all pods were restared with new IPs in Kubernetes environment.\n2. Fixed a memory leak issue where master nodes cache expanded infinitely upon refresh.\n3. Fixed an issue where multiple cluster instances were accidently flushed.\n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**oauth2-introspection**: Fixed an issue where the consumer's cache cannot be invalidated when oauth2-introspection uses `client_id` as `consumer_by`.",
        "scope": "Plugin",
        "type": "bugfix"
      },
      {
        "message": "Fixed an issue where luarocks-admin was not available in /usr/local/bin.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where `debug_listen` incorrectly used the SSL-related configuration of `status_listen`.\n",
        "type": "bugfix",
        "scope": "Configuration"
      },
      {
        "message": "Fixed an issue where resetting the token was allowed while disabling rbac_token_enabled.",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "**AWS-Lambda**: Added support for a configurable STS endpoint with the new configuration field `aws_sts_endpoint_url`.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Added connection support via Redis Proxy (e.g. Envoy Redis proxy or Twemproxy) via configuration field `connection_is_proxied`.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added support for AWS IAM role assuming in AWS IAM Database Authentication, with new configuration fields: \"pg_iam_auth_assume_role_arn\", \"pg_iam_auth_role_session_name\", \"pg_ro_iam_auth_assume_role_arn\", and \"pg_ro_iam_auth_role_session_name.\"\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added keyring encryption support to license database entity payloads.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added support for a configurable STS endpoint for RDS IAM Authentication, with new configuration fields: `pg_iam_auth_sts_endpoint_url` and `pg_ro_iam_auth_sts_endpoint_url`.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added support for a configurable STS endpoint for AWS Vault. This can either be configured by `vault_aws_sts_endpoint_url` as a global configuration, or `sts_endpoint_url` on a custom AWS vault entity.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**ai-rate-limiting-advanced**: Edit the logic for the window ajustement and fix missing passing window to shm",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-semantic-cache**: Fix the `ai-semantic-caching` plugin with a condition for calculating latencies when no embeddings, add deep copy for the request table and fix countback.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where `db_import` fails when there are licenses in declarative YAML.",
        "type": "bugfix",
        "scope": "CLI Command"
      },
      {
        "message": "Fixed an issue where running Kong CLI commands with database configurations containing Hashicorp Vault references would fail to execute.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the stale license expiry warning continued to be logged even if the license was updated.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**OAS Validation**: Fixed an issue where parameter serialization does not behave the same as in the OpenAPI specification",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID Connect**: Fixed a bug where anonymous consumers may be cached as nil under a certain condition.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID Connect**: Updated the rediscovery to use a short lifetime (5s) if the last discovery failed.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed a Redis schema issue where `connect_timeout`, `read_timeout`, `send_timeout` were\nreset to `null` if the deprecated `timeout` is `null`.\n",
        "type": "bugfix",
        "scope": "Plugin",
        "plugins": [
          "rate-limiting-advanced"
        ]
      },
      {
        "message": "License expiry warnings are no longer logged and license info is removed from /metrics in Konnect.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Rate Limiting Advanced**: Fixed an issue where if the `window_size` in the consumer group overriding config is different from the `window_size` in the default config, the rate limiting of that consumer group would fall back to local strategy.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced** Fixed an issue where the sync timer may stop working due to race condition.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**tls-metadata-headers**: Fixed an issue where intermediate certificates details were not added to request headers.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**header-cert-auth**: Added a new plugin for header-based certificate authentication.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "The `application-registration` plugin will be hidden from `available_plugins` when the Dev Portal is disabled.",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "Fixed an issue where the field `is_default` should be immutable when updating the rbac_roles.",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "**jwt-signer**: Supported `/jwt-signer/jwks/:jwt_signer_jwks` endpoint in dbless mode.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**key-auth-enc**: Added WWW-Authenticate headers to all 401 responses.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where the CPs won't trigger a configuration push after a keyring recovery.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**ldap-auth-advanced**: Supported decoding an empty sequence or set represented in long form length",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**ldap-auth-advanced**: Added WWW-Authenticate headers to all 401 response.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where the license report returns 500 when non-required fields are not specified in the Lambda and Kafka plugins.",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "Added two configurations, `admin_gui_auth_change_password_attempts` (default value `0`) and `admin_gui_auth_change_password_ttl` (default value `86400`), to limit the number of password change attempts.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added a new sub-command `status` to the `kong debug` CLI tool.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "The shared configuration for Redis `kong/enterprise_edition/redis/init.lua` was deprecated in favor of `kong/enterprise_edition/tools/redis/v2/init.lua`",
        "type": "deprecation",
        "scope": "PDK"
      },
      {
        "message": "**OpenID-connect**: Fixed an issue where using_pseudo_issuer does not work when patching.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID-connect**: Added `claims_forbidden` property to restrict access.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**ai-rate-limiting-advanced**: Added Redis cluster_max_redirections configuration option.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**ai-rate-limiting-advanced**: Switched to sentinel_nodes and cluster_nodes for redis configuration.",
        "type": "deprecation",
        "scope": "Plugin"
      },
      {
        "message": "**ai-rate-limiting-advanced**: Deprecated timeout config field in redis config in favor of connect_/send_/read_timeout (timeout field will be removed in 4.0).",
        "type": "deprecation",
        "scope": "Plugin"
      },
      {
        "message": "**degraphql**: Fixed an issue where multiple parameter types were not handled correctly when converting query parameters.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**GraphQL-Proxy-Cache-Advanced**: Added Redis cluster_max_redirections configuration option.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**graphql-proxy-cache-advanced**: Switched to sentinel_nodes and cluster_nodes for redis configuration.",
        "type": "deprecation",
        "scope": "Plugin"
      },
      {
        "message": "**graphql-proxy-cache-advanced**: Deprecated timeout config field in redis config in favor of connect_/send_/read_timeout (timeout field will be removed in 4.0).",
        "type": "deprecation",
        "scope": "Plugin"
      },
      {
        "message": "**GraphQL-Rate-Limiting-Advanced**: Added Redis cluster_max_redirections configuration option.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**graphql-rate-limiting-advanced**: Deprecated timeout config field in redis config in favor of connect_/send_/read_timeout (timeout field will be removed in 4.0).",
        "type": "deprecation",
        "scope": "Plugin"
      },
      {
        "message": "**graphql-rate-limiting-advanced**: Switched to sentinel_nodes and cluster_nodes for redis configuration.",
        "type": "deprecation",
        "scope": "Plugin"
      },
      {
        "message": "**OAS-Validation**: Fixed a bug where the non-string primitive types passed via URL query were unexpectedly cast to string when OpenAPI spec is v3.1.0.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAS-Validation**: Fixed an issue where the plugin cannot obtain the value when the path parameter name contains hyphen characters.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Proxy-Cache-Advanced**: Added Redis cluster_max_redirections configuration option.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**proxy-cache-advanced**: Deprecated timeout config field in redis config in favor of connect_/send_/read_timeout (timeout field will be removed in 4.0).",
        "type": "deprecation",
        "scope": "Plugin"
      },
      {
        "message": "**proxy-cache-advanced**: Switched to sentinel_nodes and cluster_nodes for redis configuration.",
        "type": "deprecation",
        "scope": "Plugin"
      },
      {
        "message": "**Rate-Limiting-Advanced**: Added Redis cluster_max_redirections configuration option.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**rate-limiting-advanced**: Deprecated timeout config field in redis config in favor of connect_/send_/read_timeout (timeout field will be removed in 4.0).",
        "type": "deprecation",
        "scope": "Plugin"
      },
      {
        "message": "**rate-limiting-advanced**: Switched to sentinel_nodes and cluster_nodes for redis configuration.",
        "type": "deprecation",
        "scope": "Plugin"
      },
      {
        "message": "**proxy-cache-advanced**: Fixed a bug where the Age header was not being updated correctly when serving cached requests\n",
        "scope": "Plugin",
        "type": "bugfix"
      },
      {
        "message": "**Rate Limiting Advanced**: Improved that timer spikes do not occur when there is network instability with the central data store.",
        "type": "performance",
        "scope": "Plugin"
      },
      {
        "message": "**Request-Validator**: Fix an issue where the plugin may fail to handle requests when param_schema is $ref schema.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Request-Validator**: Added a new configuration field `content_type_parameter_validation` to determine whether to enable Content-Type parameters validation.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID-Connect**: Added support for redis cache for introspection result with new fields `cluster_cache_strategy` and `cluster_cache_redis`. When configured, the plugin will share the tokens introspection responses cache across nodes configured to use the same Redis Database.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**openid-connect**: Standardized Redis configuration across plugins. The Redis configuration now follows a common schema shared with other plugins.",
        "type": "deprecation",
        "scope": "Plugin"
      },
      {
        "message": "**SAML**: Standardized Redis configuration across plugins. The Redis configuration now follows a common schema shared with other plugins.",
        "type": "deprecation",
        "scope": "Plugin"
      },
      {
        "message": "**statsd**:Fixed an issue where the exported workspace was always `default` when the workspace identifier was set to the workspace name.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**upstream-oauth**: Added the Upstream OAuth plugin, enabling Kong to obtain an OAuth2 token to consume an upstream API.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Returns a detailed error message when failed to cascade delete a workspace caused by admins associated.",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "The Brotli module is missing from all of the following ARM64 Kong Gateway Docker images:\n* RHEL 9\n* Debian 12\n* Amazon Linux 2\n* Amazon Linux 2023\n",
        "type": "known-issues",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "Kong Manager will now show input boxes that allow optionally creating SNIs while creating a certificate.",
        "type": "feature",
        "githubs": [
          3488
        ],
        "scope": "Core"
      },
      {
        "message": "While deleting a workspace, Kong Manager will now list admins that prevent the operation.",
        "type": "feature",
        "githubs": [
          3427
        ],
        "scope": "Core"
      },
      {
        "message": "Kong Manager will now show scoping entities as links in the plugin detail page.",
        "type": "feature",
        "githubs": [
          3454
        ],
        "scope": "Core"
      },
      {
        "message": "Added UI components for building the vault reference easily while configuring referenceable fields for plugins.",
        "type": "feature",
        "githubs": [
          3495
        ],
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where dynamic ordering was configurable for plugins scoped by consumers and/or consumer groups. These plugins does not support dynamic ordering.",
        "type": "bugfix",
        "githubs": [
          3415
        ],
        "scope": "Core"
      },
      {
        "message": "Removed redundant data previously saved in browser's local storage.",
        "type": "bugfix",
        "githubs": [
          3438
        ],
        "scope": "Core"
      },
      {
        "message": "Fixed issues with `cluster_addresses` and `sentinel_addresses` fields for plugins that support Redis clusters.",
        "type": "bugfix",
        "githubs": [
          3375
        ],
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the overview page for Dev Portal was not correctly rendered.",
        "type": "bugfix",
        "githubs": [
          3395
        ],
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where user info was not refreshed after the active admin was updated.",
        "type": "bugfix",
        "githubs": [
          3386
        ],
        "scope": "Core"
      }
    ]
  },
  "3.7.0": {
    "kong": [
      {
        "message": "Added `events:ai:response_tokens`, `events:ai:prompt_tokens` and `events:ai:requests` to the anonymous report to start counting AI usage",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**AI Proxy**: To support the new messages API of `Anthropic`, the upstream path of the `Anthropic` for `llm/v1/chat` route type has changed from `/v1/complete` to `/v1/messages`.\n",
        "type": "Breaking Change",
        "scope": "Plugin",
        "jiras": [
          "FTI-5770"
        ]
      },
      {
        "message": "Added package `tzdata` to DEB Docker image for convenient timezone setting.\n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "AI Proxy now reads most prompt tuning parameters from the client,\nwhile the plugin config parameters under `model_options` are now just defaults.\nThis fixes support for using the respective provider's native SDK.\n",
        "type": "feature",
        "plugins": [
          "ai-proxy"
        ],
        "scope": "Plugin"
      },
      {
        "message": "AI Proxy now has a `preserve` option for `route_type`, where the requests and responses\nare passed directly to the upstream LLM. This is to enable compatibility with any\nand all models and SDKs that may be used when calling the AI services.\n",
        "type": "feature",
        "plugins": [
          "ai-proxy"
        ],
        "scope": "Plugin"
      },
      {
        "message": "**AI-proxy**: Fixed the bug that the `route_type` `/llm/v1/chat` didn't include the analytics in the responses.\n",
        "scope": "Plugin",
        "type": "bugfix"
      },
      {
        "message": "Bumped atc-router from v1.6.0 to v1.6.2",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped libexpat to 2.6.2",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-kong-nginx-module from 0.8.0 to 0.11.0\n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-protobuf to 0.5.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-acme to 0.13.0",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-aws from 1.3.6 to 1.4.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-http to 0.17.2.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-lmdb from 1.4.1 to 1.4.2",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-openssl from 1.2.0 to 1.3.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-timer-ng to 0.2.7",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped LuaRocks from 3.9.2 to 3.11.0",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `ngx_wasm_module` to `91d447ffd0e9bb08f11cc69d1aa9128ec36b4526`",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped PCRE from the legacy libpcre 8.45 to libpcre2 10.43",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped penlight to 1.14.0",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `V8` version to `12.0.267.17`",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `Wasmtime` version to `19.0.0`",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Fixed a bug where, if the the ulimit setting (open files) was low, Kong would fail to start as the `lua-resty-timer-ng` exhausted the available `worker_connections`. Decreased the concurrency range of the `lua-resty-timer-ng` library from `[512, 2048]` to `[256, 1024]` to fix this bug.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "TLSv1.1 and lower versions are disabled by default in OpenSSL 3.x.",
        "type": "feature",
        "scope": "Configuration"
      },
      {
        "message": "**Prometheus**: Added workspace label to Prometheus plugin metrics.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**AI Proxy**: Added support for streaming event-by-event responses back to the client on supported providers.\n",
        "scope": "Plugin",
        "type": "feature"
      },
      {
        "message": "Added support for debugging with EmmyLuaDebugger.  This feature is a\ntech preview and not officially supported by Kong Inc. for now.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Improved config handling when the CP runs with the router set to the `expressions` flavor:\n  - If mixed config is detected and a lower DP is attached to the CP, no config will be sent at all\n  - If the expression is invalid on the CP, no config will be sent at all\n  - If the expression is invalid on a lower DP, it will be sent to the DP and DP validation will catch this and communicate back to the CP (this could result in partial config application)\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**AI Prompt Guard**: Increased the maximum length of regex expressions to 500 for the allow and deny parameters.\n",
        "scope": "Plugin",
        "type": "feature"
      },
      {
        "message": "Addded support for EdDSA algorithms in JWT plugin\n",
        "type": "feature",
        "plugins": [
          "jwt"
        ],
        "scope": "Plugin"
      },
      {
        "message": "Added support for ES512, PS256, PS384, PS512 algorithms in JWT plugin\n",
        "type": "feature",
        "plugins": [
          "jwt"
        ],
        "scope": "Plugin"
      },
      {
        "message": "Introduced `nginx_wasm_main_shm_kv` configuration parameter, which enables\nWasm filters to use the Proxy-Wasm operations `get_shared_data` and\n`set_shared_data` without namespaced keys.\n",
        "type": "feature",
        "scope": "Configuration"
      },
      {
        "message": "**ACME**: Fixed an issue where the certificate was not successfully renewed during ACME renewal.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**AWS-Lambda**: Fixed an issue where the latency attributed to AWS Lambda API requests was counted as part of the latency in Kong.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Improved the robustness of lua-cjson when handling unexpected input.\n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**PDK:** Fixed `kong.request.get_forwarded_port` to always return a number,\nwhich was caused by an incorrectly stored string value in `ngx.ctx.host_port`.\n",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "Fixed an issue where `POST /config?flatten_errors=1` could not return a proper response if the input included duplicate upstream targets.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed the default value in kong.conf.default documentation from 1000 to 10000\nfor the `upstream_keepalive_max_requests` option.\n",
        "type": "bugfix",
        "scope": "Configuration"
      },
      {
        "message": "**DNS Client**: Ignore a non-positive values on resolv.conf for options timeout, and use a default value of 2 seconds instead.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where an external plugin (Go, Javascript, or Python) would fail to\napply a change to the plugin config via the Admin API.\n",
        "type": "bugfix",
        "scope": "Configuration"
      },
      {
        "message": "Updated the file permission of `kong.logrotate` to 644.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a problem on hybrid mode DPs, where a certificate entity configured with a vault reference may not get refreshed on time.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Jwt**: Fixed an issue where the plugin would fail when using invalid public keys for ES384 and ES512 algorithms.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed the missing router section for the output of the request-debugging.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue in the internal caching logic where mutexes could get never unlocked.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the router didn't work correctly\nwhen the route's configuration changed.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where SNI-based routing didn't work\nusing `tls_passthrough` and the `traditional_compatible` router flavor.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a bug that `X-Kong-Upstream-Status` didn't appear in the response headers even if it was set in the `headers` parameter in the `kong.conf` file when the response was hit and returned by the Proxy Cache plugin.",
        "scope": "Core",
        "type": "bugfix"
      },
      {
        "message": "Fixed vault initialization by postponing vault reference resolving on init_worker",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a bug that allowed vault secrets to refresh even when they had no TTL set.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Vault**: do not use incorrect (default) workspace identifier when retrieving vault entity by prefix",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Disabled usage of the Lua DNS resolver from proxy-wasm by default.\n",
        "type": "bugfix",
        "scope": "Configuration"
      },
      {
        "message": "**Admin API**: fixed an issue where calling the endpoint `POST /schemas/vaults/validate` was conflicting with the endpoint `/schemas/vaults/:name` which only has GET implemented, hence resulting in a 405.",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "**Core**: Fixed unexpected table nil panic in the balancer's stop_healthchecks function",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Use `-1` as the worker ID of privileged agent to avoid access issues.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "The route entity now supports the following fields when the\n`router_flavor` is `expressions`: `methods`, `hosts`, `paths`, `headers`,\n`snis`, `sources`, `destinations`, and `regex_priority`.\nThe meaning of these fields are consistent with the traditional route entity.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added WWW-Authenticate headers to all 401 responses in the Key Auth plugin.",
        "type": "bugfix",
        "plugins": [
          "key-auth"
        ],
        "scope": "Plugin"
      },
      {
        "message": "The value of `latencies.kong` in the log serializer payload no longer includes\nthe response receive time, so it now has the same value as the\n`X-Kong-Proxy-Latency` response header. Response receive time is recorded in\nthe new `latencies.receive` metric, so if desired, the old value can be\ncalculated as `latencies.kong + latencies.receive`. **Note:** this also\naffects payloads from all logging plugins that use the log serializer:\n`file-log`, `tcp-log`, `udp-log`,`http-log`, `syslog`, and `loggly`, e.g.\n[descriptions of JSON objects for the HTTP Log Plugin's log format](https://docs.konghq.com/hub/kong-inc/http-log/log-format/#json-object-descriptions).\n",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "Added the `latencies.receive` property to the log serializer",
        "type": "feature",
        "scope": "PDK"
      },
      {
        "message": "**Opentelemetry**: Increased queue max batch size to 200.",
        "type": "performance",
        "scope": "Plugin"
      },
      {
        "message": "**Opentelemetry**: Fixed an OTEL sampling mode Lua panic bug, which happened when the `http_response_header_for_traceid` option was enabled.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Schema**: Added a deprecation field attribute to identify deprecated fields",
        "type": "feature",
        "scope": "Configuration"
      },
      {
        "message": "Fix an issue where external plugins using the protobuf-based protocol would fail to call the `kong.Service.SetUpstream` method with an error `bad argument #2 to 'encode' (table expected, got boolean)`.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**OpenTelemetry, Zipkin**: The propagation module has been reworked. The new\noptions allow better control over the configuration of tracing headers propagation.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Reverted the hard-coded limitation of the `ngx.read_body()` API in OpenResty upstreams' new versions when downstream connections are in HTTP/2 or HTTP/3 stream modes.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Each Kong cache instance now utilizes its own cluster event channel. This approach isolates cache invalidation events and reducing the generation of unnecessary worker events.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Set security level of gRPC's TLS to 0 when `ssl_cipher_suite` is set to `old`.",
        "type": "bugfix",
        "scope": "Configuration"
      },
      {
        "message": "Improved proxy performance by refactoring internal hooking mechanism.",
        "type": "performance",
        "scope": "Performance"
      },
      {
        "message": "Sped up the router matching when the `router_flavor` is `traditional_compatible` or `expressions`.",
        "type": "performance",
        "scope": "Performance"
      },
      {
        "message": "**Tracing**: enhanced robustness of trace ID parsing",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "Updated telemetry collection for AI Plugins to allow multiple plugins data to be set for the same request.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Added the `wasm_filters` configuration parameter for enabling individual filters",
        "type": "feature",
        "scope": "Configuration"
      }
    ],
    "kong-manager": [
      {
        "message": "Kong Manager now supports creating and editing Expressions routes with an interactive in-browser editor with syntax highlighting and autocompletion features for Kong's Expressions language.",
        "type": "feature",
        "githubs": [
          217
        ],
        "scope": "Core"
      },
      {
        "message": "Kong Manager now groups the parameters to provide a better user experience while configuring plugins. Meanwhile, several issues with the plugin form page were fixed.",
        "type": "feature",
        "githubs": [
          195,
          199,
          201,
          202,
          207,
          208,
          209,
          213,
          216
        ],
        "scope": "Core"
      },
      {
        "message": "Improved the user experience in Kong Manager by fixing various UI-related issues.",
        "type": "bugfix",
        "githubs": [
          185,
          188,
          190,
          195,
          199,
          201,
          202,
          207,
          208,
          209,
          213,
          216
        ],
        "scope": "Core"
      }
    ]
  },
  "3.7.0.0": {
    "kong": [
      {
        "message": "Improve error handling in AI plugins.\n",
        "type": "bugfix",
        "scope": "Plugin",
        "plugins": [
          "ai-prompt-guard",
          "ai-prompt-decorator"
        ]
      },
      {
        "message": "Fixed an issue where the `pg_timeout` was overridden to `60s` even if `--db-timeout`\nwas not explicitly passed in CLI arguments.\n",
        "type": "bugfix",
        "scope": "CLI Command"
      },
      {
        "message": "**ACME**: Fixed migration of redis configuration.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Response-RateLimiting**: Fixed migration of redis configuration.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate-Limiting**: Fixed migration of redis configuration.",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-ee": [
      {
        "message": "Introduced the new **AI Rate Limiting Advanced** plugin that allow to implement a rate limit by AI provider.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Add LHS brackets filtering to search fields",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "Adjust clustering compatible check related to AWS Secrets Manager",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Adjust clustering compatible check related to HCV kube auth path",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Adjusted a clustering compatible check related to Hashicorp Vault Approle authentication.",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "The `/<workspace>/admins` endpoint was used to return admins associated with a workspace based on their assigned RBAC roles. It has been fixed to return admins according to the workspace they belong to.",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "**AI Azure Content Safety**: Adds a new plugin that allows the Kong administrator to enforce \nthat all AI-Proxy requests must be introspected with the Azure Content Safety service.\n\nThe plugin enables configurable thresholds for the different moderation categories, \nand reports audit results into the Kong log serializer for reporting purposes.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Added support for Managed Identity authentication when using the\nAzure provider with AI Proxy.\n",
        "type": "feature",
        "plugins": [
          "ai-proxy"
        ],
        "scope": "Plugin"
      },
      {
        "message": "**Analytics**: Add `latencies.receive_ms` and `websocket` fields",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**Analytics**: `latencies.kong_gateway_ms` no longer includes receive time/latency",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**Analytics**: Add `sse` boolean field to payload, which is set to `true` for Server-Sent Event requests/responses.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**Audit Log:** Add request_timestamp to audit_objects.",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "**Audit Log**: Add before / after aliases for LHS Brackets filters.",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "**Audit Log:** Allow audit_requests and audit_objects to be filtered by request_timestamp.",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "**Audit Log:** change default ordering of audit_requests to sorted by request_timestamp descending",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "\"**Hashicorp Vault**: Starting from this version, a string fully made of spaces cannot be specified as the `role_id` or `secret_id` value in the Hashicorp Vault entity with Approle authentication method.\n\"**Hashicorp Vault**: Starting from this version, at least one of `secret_id` and `secret_id_file` must be specified in the Hashicorp Vault entity with Approle authentication method.\n",
        "type": "Breaking Change",
        "scope": "Core"
      },
      {
        "message": "Updated `kong-lua-resty-kafka` to `0.18`.\n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Updated submodule kong-openid-connect to 2.7.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Updated `lua-resty-luasocket` to `1.1.2` for fixing [luasocket#427](https://github.com/lunarmodules/luasocket/issues/427).\n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Updated lua-resty-mail to 1.1.0",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Updated OpenSSL FIPS-provider to 3.0.9",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Updated libpasswdqc to 2.0.3",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Updated lua-resty-cookie to 0.2.0",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Updated lua-resty-passwdqc to 2.0",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Updated xmlua to 1.2.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Updated libxml2 to 2.12.6",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Updated libxslt to 1.1.39",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Updated msgpack-c to 6.0.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**DegraphQL**: Fixed an issue where GraphQL variables were not being correctly parsed and coerced into their defined types.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Degraphql plugin now uses new configure handler to update graphql router with better error handling",
        "type": "bugfix",
        "plugins": [
          "degrapqhl"
        ],
        "scope": "Plugin"
      },
      {
        "message": "**OpenID Connect**: Added support for DPoP (Demonstrating Proof-of-Possession) tokens validation. The feature is available by enabling `proof_of_possession_dpop`",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Core**: Disable analytics in stream module to avoid unnecessary error logs.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a problem where event_hooks were prematurely validated in hybrid mode. The fix delays the validation of event_hooks to the point where event_hooks are emitted.\n",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "**graphql-proxy-cache-advanced**: Addded redis strategy support and `bypass_on_err` config for `graphql-proxy-cache-advanced` plugin.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Fixed a bug that caused the `kong` command line tool to ignore the `lua_ssl_trusted_certificate` configuration option.\n",
        "type": "bugfix",
        "scope": "CLI Command"
      },
      {
        "message": "Fix a problem that a new DP cannot resolve the license required Vault reference after the first configuration push.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**ACME**: fix a bug where the wrong error log is printed, regarding private keys.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where DP was unable to resolve license required Vault reference when loading an existing lmdb.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**JWT-Signer**: supports basic auth and mtls auth to external jwks services",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**JWT-Signer**: The plugin now supports periodically rotating the jwks. For example, to autmatically rotate `access_token_jwks_uri`, you can set the config `access_token_jwks_uri_rotate_period`",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**JWT-Signer**: The plugin now supports adding the original JWT(s) to the upstream request header by specifying the names of the upstream request header with `original_access_token_upstream_header` and `original_channel_token_upstream_header`.\nAnd `access_token_upstream_header`, `channel_token_upstream_header`, `original_access_token_upstream_header`, and `original_channel_token_upstream_header` should not have the same value.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Support pseudo json value in add_claims and set_claims for JWT-Signer. We can achieve the goal of passing multiple values to a key by passing a JSON string as the value. And add add_access_token_claims, set_access_token_claims, add_channel_token_claims, set_channel_token_claims for individually adding claims to access tokens and channel tokens. Additionally, add remove_access_token_claims and remove_channel_token_claims to support the removal of claims.",
        "type": "feature",
        "plugins": [
          "jwt-signer"
        ],
        "scope": "Plugin"
      },
      {
        "message": "**ldap-auth-advanced**: fix an issue where if the credential is encoded with no username kong will throw an error and return 500",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ldap-auth-advanced**: fix an issue where an exception will be thrown when ldap search fails",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Mocking**: Add the `custom_base_path` field to specifiy a custom base path. It will be used with the `deck file namespace` feature",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**mtls-auth**: Add `default_consumer` option that allows a default consumer to be used when the client certificate is valid but does not match any existing consumers.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OAS-Validation**: Add a new field `api_spec_encoded` to indicate whether the `api_spec` is URI-Encoded.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OAS-Validation**: Add the `custom_base_path` field to specifiy a custom base path. It will be used with the `deck file namespace` feature",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OAS-Validation**: Supported OpenAPI Specification v3.1.0. The plugin now switches to a new JSONSchema validator when the specification version is v3.1.0.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID Connect**: Add support for JWT Secured Authorization Requests (JAR) on Authorization and Pushed Authorization (PAR) endpoints, see: `config.require_signed_request_object`",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID Connect**: Add support for JARM response modes: `query.jwt`, `form_post.jwt`, `fragment.jwt`, `jwt`",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Fixing an issue where users were not allowed to start Kong Gateway if `admin_gui_auth_conf.scope` is missing `\"openid\"` or `\"offline_access\"` when `admin_gui_auth` is set to `openid-connect`. Kong Gateway will now print warning logs only if `\"openid\"` is missing from `admin_gui_auth_conf.scope`.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**OAS Validation**, **WebSocket Size Limit**, **WebSocket Validator**, **XML Threat Protection**:\npriorities have been updated to prevent collisions between plugins.\nThe relative priority (and the order of execution) of bundled plugins remained unchanged.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Refactored `kong/tools/public/rate-limiting` to keep the original interfaces unchanged (backward compatibility) and extend a new interface `new_instance` to provide isolation between different plugins. If you are using custom Rate Limiting plugins based on this library, please update the initialization code to the new format like 'local ratelimiting = require(\"kong.tools.public.rate-limiting\").new_instance(\"custom-plugin-name\")'. The old interface will be removed in the upcoming major release.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Fixed an issue where RLA and other similar plugins using the `rate-limiting` library, when used together, would interfere with each other and thus fail to synchronize counter data to the central data store",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Removed the Granular Tracing feature, and configurations like `tracing = on` are not available any longer. You should now use [OpenTelemetry Instrumentation](https://docs.konghq.com/gateway/latest/production/tracing/) instead.",
        "type": "Breaking Change",
        "scope": "Core"
      },
      {
        "message": "Remove lua-resty-openssl-aux-module dependency",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**Rate Limiting Advanced**: Falling back to local strategy if sync_rate = 0 when redis goes down",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: The plugin now creates counter syncing timers when being executed instead of being created to reduce some meaningless error logs",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Print error log when multiple plugins with the same namespace have different configurations",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: fix an issue where if `sync_rate` is changed from a value greater than `0` to `0`, the namespace will be cleared unexpectedly",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: fix some timer-related issues where the counter syncing timer can't be created or destroyed properly",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Speeded up tracing mechanism.",
        "type": "performance",
        "scope": "Performance"
      },
      {
        "message": "When authenticating Kong Manager with IDPs (e.g., OIDC, LDAP), the source of an RBAC role will be stored in its `role_source` field, which enables the existing roles with a source of `idp` to be removed upon new logins after IDP role mapping has changed. This also allows users to change a role's source between `local` and `idp` via the Admin API manually.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "The Brotli module is missing from all of the following ARM64 Kong Gateway Docker images:\n* RHEL 9\n* Debian 12\n* Amazon Linux 2\n* Amazon Linux 2023\n",
        "type": "known-issues",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "Fixed an issue where the \"Add Role\" button was visible when authenticating with an IDP. It is now hidden when Kong Manager is set to authenticate with an IDP.",
        "type": "bugfix",
        "githubs": [
          3183
        ],
        "scope": "Core"
      },
      {
        "message": "Corrected the documentation link shown on the RBAC user form page.",
        "type": "bugfix",
        "githubs": [
          3372
        ],
        "scope": "Core"
      }
    ]
  },
  "3.6.0.0": {
    "kong": [
      {
        "message": "Fix incorrect LuaJIT LDP/STP fusion on ARM64 which may sometimes cause incorrect logic",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Introduced the new **AI Prompt Decorator** plugin that enables prepending and appending llm/v1/chat messages onto consumer LLM requests, for prompt tuning.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Introduced the new **AI Prompt Guard** which can allow and/or block  LLM requests based on pattern matching.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Introduced the new **AI Prompt Template** which can offer consumers and array of LLM prompt templates, with variable substitutions.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Introduced the new **AI Proxy** plugin that enables simplified integration with various AI provider Large Language Models.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Adds telemetry collection for AI Proxy, AI Request Transformer, and AI Response Transformer, pertaining to model and provider usage.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Introduced the new **AI Request Transformer** plugin that enables passing mid-flight consumer requests to an LLM for transformation or sanitization.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Introduced the new **AI Response Transformer** plugin that enables passing mid-flight upstream responses to an LLM for transformation or sanitization.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "add gateway edition to the root endpoint of the admin api",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "add ngx_brotli module to kong prebuild nginx",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Reuse match context between requests to avoid frequent memory allocation/deallocation",
        "type": "performance",
        "scope": "Core"
      },
      {
        "message": "Add missing WWW-Authenticate headers to 401 response in basic auth plugin.",
        "type": "bugfix",
        "plugins": [
          "basic-auth"
        ],
        "scope": "Plugin"
      },
      {
        "message": "Bumped atc-router from 1.2.0 to 1.6.0",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped the concurrency range of the lua-resty-timer-ng library from [32, 256] to [512, 2048].",
        "type": "performance",
        "scope": "Performance"
      },
      {
        "message": "Bumped kong-lapis from 1.14.0.3 to 1.16.0.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped LPEG from 1.0.2 to 1.1.0",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-messagepack from 0.5.2 to 0.5.3",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-messagepack from 0.5.3 to 0.5.4",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-aws from 1.3.5 to 1.3.6",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-healthcheck from 3.0.0 to 3.0.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-lmdb from 1.3.0 to 1.4.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-timer-ng from 0.2.5 to 0.2.6",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bump `ngx_wasm_module` to `a7087a37f0d423707366a694630f1e09f4c21728`",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped OpenResty from 1.21.4.2 to 1.25.3.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped OpenSSL from 3.1.4 to 3.2.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bump resty-openssl from 0.8.25 to 1.2.0",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bump `Wasmtime` version to `14.0.3`",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bump `dns_stale_ttl` default to 1 hour so stale DNS record can be used for longer time in case of resolver downtime.",
        "type": "performance",
        "scope": "Configuration"
      },
      {
        "message": "Bumped ngx_brotli to master branch, and disabled it on rhel7 rhel9-arm64 and amazonlinux-2023-arm64 due to toolchain issues",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "prevent ca to be deleted when it's still referenced by other entities and invalidate the related ca store caches when a ca cert is updated.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fix a bug causing data-plane status updates to fail when an empty PING frame is received from a data-plane",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Now cookie names are validated against RFC 6265, which allows more characters than the previous validation.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Clustering**: Expose data plane certificate expiry date on the control plane API.\n",
        "type": "feature",
        "scope": "Clustering"
      },
      {
        "message": "Allow primary key passed as a full entity to DAO functions.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Build deb packages for Debian 12. The debian variant of kong docker image is built using Debian 12 now.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Remove nulls only if the schema has transformations definitions.\nImprove performance as most schemas does not define transformations.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Enable `status_listen` on `127.0.0.1:8007` by default",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "Bumped lua-resty-healthcheck from 1.6.3 to 3.0.0",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "display a warning message when Kong Manager is enabled but the Admin API is not enabled",
        "type": "feature",
        "scope": "Configuration"
      },
      {
        "message": "Enhance error responses for authentication failures in the Admin API",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fix a bug that the error_handler can not provide the meaningful response body when the internal error code 494 is triggered.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Header value matching (`http.headers.*`) in `expressions` router flavor are now case sensitive.\nThis change does not affect on `traditional_compatible` mode\nwhere header value match are always performed ignoring the case.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "The expressions route now supports the `!` (not) operator, which allows creating routes like\n`!(http.path =^ \"/a\")` and `!(http.path == \"/a\" || http.path == \"/b\")`\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "add DHE-RSA-CHACHA20-POLY1305 cipher to the intermediate configuration",
        "type": "feature",
        "scope": "Configuration"
      },
      {
        "message": "fix error data loss caused by weakly typed of function in declarative_config_flattened function",
        "type": "bugfix",
        "scope": "Configuration"
      },
      {
        "message": "print error message correctly when plugin fails",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "fix ldoc intermittent failure caused by LuaJIT error.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "response.set_header support header argument with table array of string",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "**azure-functions**: azure-functions plugin now eliminates upstream/request URI and only use `routeprefix` configuration field to construct request path when requesting Azure API",
        "type": "Breaking Change",
        "scope": "Plugin"
      },
      {
        "message": "use NGX_WASM_MODULE_BRANCH environment variable to set ngx_wasm_module repository branch when building Kong.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Eliminate asynchronous timer in syncQuery() to prevent hang risk",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "The default value of `dns_no_sync` option has been changed to `off`",
        "type": "feature",
        "scope": "Configuration"
      },
      {
        "message": "**tracing:** Fixed an issue where a DNS query failure would cause a tracing failure.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**forward-proxy** fallback to the non-streaming proxy when the request body has already been read",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Allow to inject Nginx directives into Kong's proxy location block",
        "type": "feature",
        "scope": "Configuration"
      },
      {
        "message": "Validate LMDB cache by Kong's version (major + minor),\nwiping the content if tag mismatch to avoid compatibility issues\nduring minor version upgrade.\n",
        "type": "feature",
        "scope": "Configuration"
      },
      {
        "message": "Add `source` property to log serializer, indicating the response is generated by `kong` or `upstream`.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**OAS-Validation** Fix a bug where the plugin throws a runtime error caused by the ref parameter schema not being dereferenced.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Bumped default values of `nginx_http_keepalive_requests` and `upstream_keepalive_max_requests` to `10000`. These changes are optimized to work better in systems with high throughput. In a low-throughput setting, these new settings may have visible effects in loadbalancing - it can take more requests to start using all the upstreams than before.",
        "type": "performance",
        "scope": "Configuration"
      },
      {
        "message": "Increase the precision of JSON number encoding from 14 to 16 decimals",
        "type": "feature",
        "scope": "PDK"
      },
      {
        "message": "Fix an issue that when using kong.response.exit, the Transfer-Encoding header set by user is not removed",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "Performance optimization to avoid unnecessary creations and garbage-collections of spans",
        "type": "performance",
        "scope": "PDK"
      },
      {
        "message": "Ensure Kong-owned directories are cleaned up after an uninstall using the system's package manager.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Expose metrics for serviceless routes",
        "type": "bugfix",
        "scope": "Plugin",
        "plugins": [
          "prometheus"
        ]
      },
      {
        "message": "**Rate Limiting**: fix to provide better accuracy in counters when sync_rate is used with the redis policy.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "respect custom `proxy_access_log`",
        "type": "bugfix",
        "scope": "Configuration"
      },
      {
        "message": "**Rate Limiting**: fix an issuer where all counters are synced to the same DB at the same rate.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Cooperatively yield when building statistics of routes to reduce the impact to proxy path latency.",
        "type": "performance",
        "scope": "Performance"
      },
      {
        "message": "**Datadog**: Fix a bug that datadog plugin is not triggered for serviceless routes. In this fix, datadog plugin is always triggered, and the value of tag `name`(service_name) is set as an empty value.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ACME**: Standardize redis configuration across plugins. The redis configuration right now follows common schema that is shared across other plugins.",
        "type": "deprecation",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting**: Standardize redis configuration across plugins. The redis configuration right now follows common schema that is shared across other plugins.",
        "type": "deprecation",
        "scope": "Plugin"
      },
      {
        "message": "**Response-RateLimiting**: Standardize redis configuration across plugins. The redis configuration right now follows common schema that is shared across other plugins.",
        "type": "deprecation",
        "scope": "Plugin"
      },
      {
        "message": "Expressions route in `http` and `stream` subsystem now have stricter validation.\nPreviously they share the same validation schema which means admin can configure expressions\nroute using fields like `http.path` even for stream routes. This is no longer allowed.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Support `http.path.segments.len` and `http.path.segments.*` fields in the expressions router\nwhich allows matching incoming (normalized) request path by individual segment or ranges of segments,\nplus checking the total number of segments.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "`net.src.*` and `net.dst.*` match fields are now accessible in HTTP routes defined using expressions.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**Tracing**: dns spans are now correctly generated for upstream dns queries (in addition to cosocket ones)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Tracing Sampling Rate can now be set via the `config.sampling_rate` property of the OpenTelemetry plugin instead of it just being a global setting for the gateway.\n",
        "type": "feature",
        "plugins": [
          "opentelemety"
        ],
        "scope": "Plugin"
      },
      {
        "message": "**proxy-wasm**: Fixed \"previous plan already attached\" error thrown when a filter triggers re-entrancy of the access handler.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Extend support for getting and setting Gateway values via proxy-wasm properties in the `kong.*` namespace.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**BREAKING:** To avoid ambiguity with other Wasm-related nginx.conf directives, the prefix for Wasm `shm_kv` nginx.conf directives was changed from `nginx_wasm_shm_` to `nginx_wasm_shm_kv_`\n",
        "type": "Breaking Change",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "Fix an issue where the `/rbac/roles/:role/endpoints` endpoint did not accept `actions` as an array.",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "add the `examples` field to the metaschema",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Mark the `authorization_value` in the `oauth2-introspection` plugin as an encrypted field",
        "type": "bugfix",
        "plugins": [
          "oauth2-introspection"
        ],
        "scope": "Plugin"
      },
      {
        "message": "Fixed an rbac issue that required adding missing endpoints to all workspaces.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Mark the `introspection_headers_values` in the `openid-connect` plugin as an encrypted and referenceable field",
        "type": "bugfix",
        "plugins": [
          "openid-connect"
        ],
        "scope": "Plugin"
      },
      {
        "message": "**SAML**: adjust the priority of the SAML plugin to 1010 to correct the integration between the SAML plugin and other consumer-based plugins",
        "type": "Breaking Change",
        "scope": "Plugin"
      },
      {
        "message": "Add new `upstream_status` and `source` properties to analytics pusher.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "add the `consumer_groups` support for analytics",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Add CONTROLLER_CERTIFICATE_FILE and CONTROLLER_CERTIFICATE_DIR env config for AppDynamics plugin to use self-signed certificate",
        "type": "feature",
        "plugins": [
          "app-dynamics"
        ],
        "scope": "Plugin"
      },
      {
        "message": "bump submodule kong-openid-connect to 2.7.0",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bump kong-redis-cluster to '1.5.2'",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bump kong-redis-cluster to '1.5.3'",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bump `dns_stale_ttl` default to 1 hour so stale DNS record can be used for longer time in case of resolver downtime.",
        "type": "performance",
        "scope": "Configuration"
      },
      {
        "message": "bump jq to 1.7.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "bump luasec to 1.3.2",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "bump OpenSSL to 3.1.4",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "In OpenSSL 3.2, the default SSL/TLS security level has been changed from 1 to 2. Which means security level set to 112 bits of security. As a result RSA, DSA and DH keys shorter than 2048 bits and ECC keys shorter than 224 bits are prohibited. In addition to the level 1 exclusions any cipher suite using RC4 is also prohibited. SSL version 3 is also not allowed. Compression is disabled.",
        "type": "Breaking Change",
        "scope": "Core"
      },
      {
        "message": "bump lua-resty-aws to 1.3.6",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**IP-restriction**: add support for consumer group scoping",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Proxy-Cache**: add support for consumer group scoping",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**rate-limiting**: add support for consumer group scoping",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Request-Termination**: add support for consumer group scoping",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Proxy-Cache-Advanced**: add support for consumer group scoping",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**ACL**: Add support for consumer-groups",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Fix typo in jwe-decrypt error message",
        "type": "bugfix",
        "plugins": [
          "jwe-decrypt"
        ],
        "scope": "Plugin"
      },
      {
        "message": "The workspace listing API only shows workspaces that the current user has endpoints associated with",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "Dismiss confusing debug log from Redis tool of rate limiting #7077 #7101",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fix an issue where the dataplane's log serializer output has workspace name under Hybrid mode",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Resilience support for homogeneous Dataplane deployments. Now Dataplanes can act as importer and exporter at the same time, and Kong will try to control the concurrency when export the config.",
        "type": "feature",
        "scope": "Clustering"
      },
      {
        "message": "fix a bug where workload identity does not work for dataplane resilience",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Make fips enablement status responding to license conf changes. Also, introduces a new endpoint `/fips-status` to show its current status.\n",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "reduce message push error log when cluster_telemetry_endpoint config is disabled",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Fix a bug that GCP backend vault hides the error message when secrets cannot be fetched",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Ldap-auth-advanced**: fix some cache-related issues which cause groups_required to not work properly and unexpected return codes after a non-200 response",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "fix the missing workspace_id in the output of request debugging when using the filter",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Openid-Connect**: Fix logout uri suffix detection by using normalized version of `kong.request.get_forwarded_path()` instead of `ngx.var.request_uri` (especially when passing query strings to logout)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Do not reinitialize workspace entity counters when migrating from CE to EE.\n",
        "type": "bugfix",
        "scope": "CLI Command"
      },
      {
        "message": "Eliminate asynchronous timer in syncQuery() to prevent hang risk",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "The default value of `dns_no_sync` option has been changed to `off`",
        "type": "feature",
        "scope": "Configuration"
      },
      {
        "message": "**OpenID-Connect**: remove unwanted argument `ignore_signature.userinfo` from the `userinfo_load` function",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Return `-1` as worker id for privileged agent in the Clustering analytics.\n",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "check if `sync_rate` is `nil` when calling the RLA phase `configure()`",
        "type": "bugfix",
        "scope": "Plugin",
        "plugins": [
          "rate-limiting-advanced"
        ]
      },
      {
        "message": "Skip sync with DB or Redis if `sync_rate` is `nil` or `null`.\n",
        "type": "bugfix",
        "scope": "Plugin",
        "plugins": [
          "rate-limiting-advanced"
        ]
      },
      {
        "message": "**Forward-Proxy**: Fixed the issue where request payload is being discarded when payload exceeded the `client_body_buffer_size`.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "HashiCorp Vault backend now supports using Approle authentication method",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**jwt-signer**: support for consumer group scoping by using pdk `kong.client.authenticate` function",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Data-plane nodes running in Konnect will now report config reload failures such as invalid configuration or transient errors to the control-plane.",
        "type": "feature",
        "scope": "Clustering"
      },
      {
        "message": "**Ldap-auth-advanced**: support decoding non-standard asn1 integer and enumerated encoded with redundant leading padding",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**ldap-auth-advanced**: support for consumer group scoping by using pdk `kong.client.authenticate` function",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Mocking**: Fix an issue where valid recursive schemas are always rejected.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Mocking**: Fix an issue where the plugin failed to return the mock response when `resposnes` contains `default` or wildcard codes like 2XX.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Mtls-auth** print notice log if revocation check fails with revocation_check_mode = IGNORE_CA_ERROR",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAS-Validation**: Fixed an issue that the plugin throws a runtime error while validating parameters with AnyType schema and style keyword defined.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAS-Validation**: Fixed an issue that the cookie parameters are not being validated.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAS-Validation**: bypass schema validation when content-type is not `application/json`.",
        "type": "Breaking Change",
        "scope": "Plugin"
      },
      {
        "message": "**OAS-Validation**: Fixed an issue that the nullable keyword did not take effect.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAS-Validation**: Fixed an issue where the request path could not matched when containing regex escape characters.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAS-Validation**: Fixed an issue that the URI component escaped characters were incorrectly unescaped.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**oauth2-introspection**: support for consumer group scoping by using pdk `kong.client.authenticate` function",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**openid-connect**: support for consumer group scoping by using pdk `kong.client.authenticate` function",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID-Connect**: fix the cache key collision when config `issuer` and `extra_jwks_uris` contain the same uri",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID-Connect**: Correctly handle boundary conditions for token expiration time checking",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID-Connect**: update time when calculating token expire",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Openid-Connect**: configurations `scopes`, `login_redirect_uri`, `logout_redirect_uri` can now be referenced as a secret in the Kong Vault",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Openid-Connect**: extend `token_post_args_client` to support injection from headers",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Openid-Connect**: add support for explicit proof key for code exchange (PKCE).",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Openid-Connect**: add support for pushed authorization requests (PAR).",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Support the `tls_client_auth` and `self_signed_tls_client_auth` auth methods in the OpenID Connect plugin, allowing to do mTLS Client Authentication with the IdP.\n",
        "type": "feature",
        "plugins": [
          "openid-connect"
        ],
        "scope": "Plugin"
      },
      {
        "message": "Fix an issue where HTTP 500 errors were returned when paginating and sorting by timestamp fields\n(e.g., `created_at`).\n",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "Fixed critical level logs when starting external plugin servers. Those logs cannot be suppressed due to the limitation of OpenResty. We choose to remove the socket availibilty detection feature.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Plugin Server**: fix an issue where every request causes a new plugin instance to be created",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "Implement relative URLs for portal root path redirection to prevent erroneous redirections to incorrect domains or protocols",
        "type": "bugfix",
        "scope": "Portal"
      },
      {
        "message": "**rate-limiting**: support to ratelimit by consumer group",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Rate-limiting-advanced**: support to ratelimit by consumer group",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Allow using RBAC token to authenticate while using group mapping feature (e.g., OIDC, LDAP) with Kong Manager, and also fix some issue with the group mapping feature.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Fix an issue where unique violation errors were reported while trying to update the user_token\nwith the same value on the same RBAC user.\n",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "Fix an issue where the IAM auth token was not refreshed when the underlying AWS credential expired.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Print to log possible config options that causing DP to CP connection error.\n",
        "type": "feature",
        "scope": "Clustering"
      },
      {
        "message": "Use the value provided by the new Request ID feature for all request ID fields, for better consistency",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**Request Validator** The Request Validator plugin now validates the request body schema when json is the suffix value in the request content type's subtype, for example `application/merge-patch+json`.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Automatically reinitialize the workspace entity counters after executing the cli change migrations commands.",
        "type": "feature",
        "scope": "CLI Command"
      },
      {
        "message": "**Rate Limiting Advanced** Check the error of queries in the redis pipeline",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced** Enhance the resolution of RLA sliding window weight",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Proxy-Cache-Advanced**: remove undesired `proxy-cache-advanced/migrations/001_035_to_050.lua`\nthat blocks migration from OSS to EE. This is a breaking change for customers using Kong Gateway\nbetween `0.3.5` and `0.5.0`.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Ensure the `/developers/:developer` endpoint only accepts `roles` as arrays.",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "Provide better error messages in the route-transformer-advanced plugin",
        "type": "bugfix",
        "plugins": [
          "route-transformer-advanced"
        ],
        "scope": "Plugin"
      },
      {
        "message": "**saml**: support for consumer group scoping by using pdk `kong.client.authenticate` function",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Print Redis's 'timeout' warning message only if it explicitly set. Use the default timeout value if it is not set.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "disallow admins or RBAC users to update their own roles",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "The listing endpoints for consumer groups (`/consumer_groups`) and consumers (`/consumers`) now respond with paginated results. The JSON key for the list has been changed to `data` instead of `consumer_groups` or `consumers`.",
        "type": "Breaking Change",
        "scope": "Admin API"
      },
      {
        "message": "Exclude dot keys like `a.b.c` from both audit requests and audit objects,\nand otherwise exclude singular key like `password` recursively.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "validate private and public key for keys entity",
        "type": "bugfix",
        "scope": "Plugin",
        "plugins": [
          "acme",
          "jwe-decrypt"
        ]
      },
      {
        "message": "The Brotli module is missing from all the following ARM64 Kong Gateway Docker images:\n* RHEL 9\n* Debian 12\n* Amazon Linux 2\n* Amazon Linux 2023\n",
        "type": "known-issues",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "Fix issues with Admin GUI authentication using OpenID Connect, including session, response_mode, and RP-initiated logout.",
        "type": "bugfix",
        "githubs": [
          3055
        ],
        "scope": "Core"
      },
      {
        "message": "Corrected UI descriptions under Teams when mapping roles from external sources (e.g., OIDC, LDAP).",
        "type": "bugfix",
        "githubs": [
          3000,
          3184
        ],
        "scope": "Core"
      },
      {
        "message": "Added support for creating/editing the route-by-header plugin from the UI.",
        "type": "feature",
        "githubs": [
          3049
        ],
        "scope": "Core"
      },
      {
        "message": "Kong Manager now supports operating keys scoped to a specific keyset without permissions on the `/keys/*` endpoint.",
        "type": "bugfix",
        "githubs": [
          3035
        ],
        "scope": "Core"
      },
      {
        "message": "Added an onboarding flow to make it easier for new customers to start using Kong Gateway.",
        "type": "feature",
        "githubs": [
          3131
        ],
        "scope": "Core"
      },
      {
        "message": "Fixed various issues while authenticating the Admin API via OpenID Connect.",
        "type": "bugfix",
        "githubs": [
          3055
        ],
        "scope": "Core"
      },
      {
        "message": "Now the summary section has a new design in both workspaces page and overview page.",
        "type": "feature",
        "githubs": [
          3113
        ],
        "scope": "Core"
      }
    ]
  },
  "3.5.0": {
    "kong": [
      {
        "message": "**response-ratelimiting**: add support for secret rotation with redis connection ",
        "type": "feature",
        "scope": "Plugin",
        "prs": [
          10570
        ]
      },
      {
        "message": "Bumped lua-resty-healthcheck from 1.6.2 to 1.6.3",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped OpenResty from 1.21.4.1 to 1.21.4.2",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Fix several issues in Vault and refactor the Vault code base:\n - Make DAOs to fallback to empty string when resolving Vault references fail\n - Use node level mutex when rotation references\n  - Refresh references on config changes \n- Update plugin referenced values only once per request\n - Pass only the valid config options to vault implementations\n - Resolve multi-value secrets only once when rotating them\n - Do not start vault secrets rotation timer on control planes\n - Re-enable negative caching\n - Reimplement the kong.vault.try function\n - Remove references from rotation in case their configuration has changed",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "Fix response body gets repeated when `kong.response.get_raw_body()` is called multiple times in a request lifecycle.",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "refactor workspace id and name retrieval",
        "type": "performance",
        "scope": "Core",
        "prs": [
          11442
        ],
        "jiras": [
          "FTI-5303"
        ]
      },
      {
        "message": "Fix an issue that the TTL of the key-auth plugin didnt work in DB-less and Hybrid mode.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Opentelemetry**: fix an issue that resulted in invalid parent IDs in the propagated tracing headers",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fix a problem that abnormal socket connection will be reused when querying Postgres database.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Tracing: fix an issue that resulted in some parent spans to end before their children due to different precision of their timestamps",
        "type": "bugfix",
        "scope": "PDK",
        "issues": [
          11294
        ]
      },
      {
        "message": "Fix upstream ssl failure when plugins use response handler",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Bumped the default value of `upstream_keepalive_pool_size` to `512` and `upstream_keepalive_max_requests` to `1000`",
        "type": "performance",
        "scope": "Configuration"
      },
      {
        "message": "Bumped resty.openssl from 0.8.23 to 0.8.25",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**CORS**: Support the `Access-Control-Request-Private-Network` header in crossing-origin pre-light requests",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "add scan_count to redis storage schema",
        "type": "feature",
        "scope": "Plugin",
        "plugins": [
          "acme"
        ],
        "prs": [
          11532
        ]
      },
      {
        "message": "Fix an issue that protocol `tls_passthrough` can not work with expressions flavor",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**AWS-Lambda**: let plugin-level proxy take effect on EKS IRSA credential provider",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Bumped lua-resty-aws from 1.3.1 to 1.3.2",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Fix a bug related to data interference between requests in the kong.log.serialize function.",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "Bumped lua-resty-aws from 1.3.2 to 1.3.5",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Fix incorrect LuaJIT register allocation for IR_*LOAD on ARM64",
        "type": "dependency",
        "scope": "Core",
        "prs": [
          11638
        ],
        "jiras": [
          "KAG-2634"
        ]
      },
      {
        "message": "Fix LDP/STP fusing for unaligned accesses on ARM64",
        "type": "dependency",
        "scope": "Core",
        "prs": [
          11639
        ],
        "jiras": [
          "KAG-2634"
        ]
      },
      {
        "message": "Add a new endpoint `/schemas/vaults/:name` to retrieve the schema of a vault.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Cache the AWS lambda service by those lambda service related fields",
        "type": "bugfix",
        "plugins": [
          "aws-lambda"
        ],
        "scope": "Plugin"
      },
      {
        "message": "rename `privileged_agent` to `dedicated_config_processing. Enable `dedicated_config_processing` by default\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**Opentelemetry**: fix an issue that resulted in traces with invalid parent IDs when `balancer` instrumentation was enabled",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**tcp-log**: fix an issue of unnecessary handshakes when reusing TLS connection",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "The default value of `dns_no_sync` option has been changed to `on`",
        "type": "bugfix",
        "scope": "Configuration"
      },
      {
        "message": "fix the building failure when applying patches",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Bumped kong-lapis from 1.14.0.2 to 1.14.0.3",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bump lua-kong-nginx-module from 0.6.0 to 0.8.0",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**Clustering**: Allow configuring DP metadata labels for on-premise CP Gateway",
        "type": "feature",
        "scope": "Clustering"
      },
      {
        "message": "Support observing the time consumed by some components in the given request.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Plugins can now implement `Plugin:configure(configs)` function that is called whenever there is a change in plugin entities. An array of current plugin configurations is passed to the function, or `nil` in case there is no active configurations for the plugin.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Add a request-aware table able to detect accesses from different requests.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "A unique Request ID is now populated in the error log, access log, error templates, log serializer, and in a new X-Kong-Request-Id header (configurable for upstream/downstream using the `headers` and `headers_upstream` configuration options). \n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**Session**: a new configuration field `read_body_for_logout` was added with a default value of `false`, that changes behavior of `logout_post_arg` in a way that it is not anymore considered if the `read_body_for_logout` is not explicitly set to `true`. This is to avoid session plugin from reading request bodies by default on e.g. `POST` request for logout detection.\n",
        "type": "Breaking Change",
        "scope": "Plugin"
      },
      {
        "message": "Vault references can be used in Dbless mode in declarative config",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Properly warmup Vault caches on init",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Vault resurrect time is respected in case a vault secret is deleted from a vault",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Add support for optional Wasm filter configuration schemas",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Support JSON in Wasm filter configuration",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Bump Wasmtime version to 12.0.2",
        "type": "dependency",
        "scope": "Core"
      }
    ]
  },
  "3.5.0.0": {
    "kong-ee": [
      {
        "message": "aws vault backend use credential provider chain and support role assuming",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "update vitals prometheus grafana dashboard",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Mocking**: Introduces a new property `include_base_path` to indicate whether to include the base path when performing the path match evaluation.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OAS-Validation**: Introduces a new property `include_base_path` to indicate whether to include the base path when performing the path match evaluation.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Fix a bug that when an entity is deleted, the rbac_role_entities records of its cascaded entities are not deleted.",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "**Openid-Connect**: New field `unauthorized_destroy_session`, which when set to true, we destory the session (delete the user's session cookie) when the request is unauthorized. Default to true. Set to false to preserve the session.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID-Connect**: New field `using_pseudo_issuer`. When set to true, the plugin instance will not discover configuration from the issuer.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**graphql-rate-limiting-advanced**: Fix a bug in the schema validation which prevents from using redis in cluster mode",
        "type": "Breaking Change",
        "scope": "Plugin"
      },
      {
        "message": "Fix an issue that made it possible to create colliding routes in different workspaces when using `application/x-www-form-urlencoded` as content type in the admin API",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "mtls-auth should not cache the network failure when doing revocation check",
        "type": "bugfix",
        "plugins": [
          "mtls-auth"
        ],
        "scope": "Plugin"
      },
      {
        "message": "Allow OSS features to continue working with an expired license and configured Kong Enterprise features to continue operating in read-only mode. Kong Gateway now logs a daily critical message when a license is expired and within the 30 days grace period.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "fix flooded json decoding warning logs",
        "type": "bugfix",
        "scope": "Plugin",
        "plugins": [
          "response-transformer"
        ]
      },
      {
        "message": "Fix an issue that remove FIPS from free mode. Add a check of FIPS state and license type in validate_fips. If no license with FIPS `on` will throw an error and exit.",
        "type": "bugfix",
        "scope": "Configuration"
      },
      {
        "message": "allow the 'start' field be a past time",
        "type": "bugfix",
        "scope": "Plugin",
        "plugins": [
          "canary"
        ]
      },
      {
        "message": "Add troubleshooting tool",
        "type": "feature",
        "prs": [
          6450
        ],
        "scope": "Core"
      },
      {
        "message": "**SAML**: When the redis session storage is incorrectly configured, users now receive a 500 error instead of being redirected endlessly",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "sanitize developer name in portal email",
        "type": "bugfix",
        "prs": [
          6462
        ],
        "jiras": [
          "FTI-5212"
        ],
        "scope": "Portal"
      },
      {
        "message": "Fix a keyring issue where a kong node fails to send keyring material when using cluster strategy",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "optimize the performance of querying plugins when access application_services/application_instances endpoint.",
        "type": "bugfix",
        "prs": [
          6486
        ],
        "jiras": [
          "FTI-4027",
          "FTI-5087"
        ],
        "scope": "Admin API"
      },
      {
        "message": "Fix a bug that will cause a failure of sending tracing data to datadog when value of x-datadog-parent-id header in requests is a short dec string",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Openid-Connect**: Fix issue on token revocation on logout where the code was revoking refresh token when it was supposed to revoke access token when using the discovered revocation endpoint.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**SAML**: Reduce severity of 'session was not found' messages to 'info'",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Enforce Content Security Policy (CSP) headers while serving static resources via Dev Portal and Kong Manager",
        "type": "bugfix",
        "prs": [
          6543
        ],
        "jiras": [
          "KAG-1671",
          "SEC-910"
        ],
        "scope": "Core"
      },
      {
        "message": "**Opentelemetry**: A new value is added to the parameter `header_type`, which allows Kong to inject datadog headers into the headers of requests forwarding to upstream.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Add cluster_fallback_export_s3_config option to config s3 config backup `putObject` request",
        "type": "feature",
        "prs": [
          6615
        ],
        "jiras": [
          "KAG-2155"
        ],
        "scope": "Clustering"
      },
      {
        "message": "fix rbac retrieve group roles with the group name that type is number.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "add analytics_debug option to output requests to logs.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "add support for Azure's KeyVault Secrets Engine.",
        "type": "feature",
        "scope": "PDK"
      },
      {
        "message": "workspaces.get_workspace() now tries to get workspace from cache instead of querying database directly",
        "type": "performance",
        "scope": "Core"
      },
      {
        "message": "Fix an issue where users cannot completely delete a developer by email via Admin API.",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "Update included curl to 8.4.0 & nghttp2 1.57.0",
        "type": "dependency",
        "scope": "CLI Command"
      },
      {
        "message": "New kong command `kong debug COMMAND [OPTIONS]`",
        "type": "feature",
        "scope": "CLI Command"
      },
      {
        "message": "Add counters such as routes, plugins, licenses, deployment info, etc. to the report component. Also, add a checksum and timestamp to the output.",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "Add troubleshooting tools to container images",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Add troubleshooting lua scripts",
        "type": "feature",
        "scope": "CLI Command"
      },
      {
        "message": "Allow to specify azure_vault config options in the `kong.conf` file.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "bump submodule kong-openid-connect to 2.5.7",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "bump submodule kong-openid-connect to 2.5.9",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "bump the dependency `kong-openid-connect` of oidc plugin from 2.5.5 to 2.5.7.",
        "type": "dependency",
        "plugins": [
          "openid-connect"
        ],
        "scope": "Plugin"
      },
      {
        "message": "Correctly invalidate caches based on names and ids for Consumer Groups",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Enhance error responses for authentication failures in the Admin API",
        "type": "bugfix",
        "scope": "Plugin",
        "plugins": [
          "basic-auth",
          "key-auth",
          "ldap-auth",
          "key-auth-enc",
          "vault-auth"
        ]
      },
      {
        "message": "Apply Nginx patch for detecting HTTP/2 stream reset attacks early (CVE-2023-44487)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fix an issue where the dataplane hostname is `nil` in Vitals under Hybrid mode",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Hardcode part settings of `admin_gui_auth_conf` while `admin_gui_auth` is `openid-connect`",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Mocking**: Fix the issue that path parameter cannot match non-ascii characters.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID Connect:** Added support for mTLS proof of possession. The feature is available by enabling `proof_of_possession_mtls`",
        "type": "feature",
        "prs": [
          6446
        ],
        "jiras": [
          "KAG-2189"
        ],
        "scope": "Core"
      },
      {
        "message": "**OAS Validation** Fix an issue where non `application/json` content-types are being rejected even though the request body is not required.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAS Validation**: Fix an issue where a null pointer exception may occur in some scenarios when configuration notify_only_request_validation_failure is true",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAS Validation**: Fix the issue that path parameter cannot match non-ascii characters.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAS Validation**: Fix an issue where valid recursive schemas are always rejected.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "'openid-connect' plugin now supports public client",
        "type": "feature",
        "plugins": [
          "openid-connect"
        ],
        "scope": "Plugin"
      },
      {
        "message": "Require a license to use Dynamic Plugin Ordering",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Support boolean token in portal email template and fix 500 error",
        "type": "bugfix",
        "scope": "Portal"
      },
      {
        "message": "**Rate Limiting Advanced** to use the new Plugin:configure for building namespaces without looping through all the plugins",
        "type": "performance",
        "scope": "Plugin"
      },
      {
        "message": "lazily enable FIPS mode after a valid license is received and only emit a warning\ninstead of blocking Kong to start.\n",
        "type": "bugfix",
        "scope": "Configuration"
      },
      {
        "message": "Removed support for Developer Portal and Vitals, which were deprecated in Kong 3.4.\n",
        "type": "deprecation",
        "scope": "Configuration"
      },
      {
        "message": "Support for workspace search by name.",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "Fix when the Dev portal OIDC is enabled, a 500 error is thrown when the administrator login successfully and then retrieves the session",
        "type": "feature",
        "scope": "Plugin",
        "githubs": [
          5813
        ],
        "plugins": [
          "openid-connect"
        ]
      },
      {
        "message": "OpenID-Connect now support designate parameter name of token for introspection and revocation with `introspection_token_param_name` and `revocation_token_param_name` respectively.",
        "type": "feature",
        "plugins": [
          "openid-connect"
        ],
        "scope": "Plugin"
      },
      {
        "message": "**Openid Connect**: Fix the issue where `using_pseudo_issuer` does not work.",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "Fix an issue where the input fields for cert_alt and key_alt in the certificate form do not accept\nmulti-line content.\n",
        "type": "bugfix",
        "githubs": [
          2923
        ],
        "scope": "Core"
      },
      {
        "message": "Fix an issue that Kong Manager 'Invite Admin' button missing on Teams page if no admin created on DB initialization with RBAC disabled",
        "type": "bugfix",
        "githubs": [
          2932
        ],
        "scope": "Core"
      }
    ]
  },
  "3.10.0.1": {
    "kong": [
      {
        "message": "Fixed an issue where `ca_certificate` cache was not invalidated when incremental sync was enabled.\n",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "**AI**: Fixed an issue where the password for the pgvector strategy was not being set correctly in the database.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fix issue where schema library would fail with a nil reference if configurations are set via both deprecated and new names with diverging values",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where validation required all of `timeout` fields (`connect_timeout`, `read_timeout`, `send_timeout`)\nto have the same value. In reality only `connect_timeout` has to have the same value since that is the value used for\ngenerating the `timeout` field in the response if it is missing in the request.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where AI Proxy and AI Proxy Advanced would use corrupted plugin config.\n",
        "type": "bugfix",
        "plugins": [
          "ai-proxy",
          "ai-proxy-advanced"
        ],
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where data plane (DP) might receive incorrect data if the control plane's (CP) configuration version was older than the DP's version.\n",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Fixed an issue where CP may send sync notifications too frequently when incremental sync is enabled.\n",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Fixed an issue where the Control Plane (CP) would send duplicate sync notifications when configuration changes occurred.\n",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Fixed an issue where validation might not report error message correctly when incremental sync was enabled.\n",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "**prometheus**: Fixed an issue where the metric `data_plane_config_hash` might not work correctly for incremental sync.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "A bug originating from the underlying OpenResty platform affects connection pooling in certain circumstances. \nThis issue impacts transaction handling and negatively impacts performance, resulting in reduced request rates and increased latencies.\n Versions 3.10.0.0 and 3.10.0.1 are both affected. To resolve this regression, please upgrade to Kong Gateway 3.10.0.2 or later.\n",
        "type": "known-issues",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "Added a new UI for the Request Callout plugin.",
        "type": "feature",
        "githubs": [
          3839
        ],
        "scope": "Core"
      }
    ]
  },
  "3.9.1.1": {
    "kong": [],
    "kong-ee": [
      {
        "message": "**app-dynamics**: Fixed segmentation fault caused by missing destructor call on process exit.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where modifying x-forwarded header before access phase may not take effect\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where DNS answers with TTL=0 were incorrectly cached indefinitely in the new DNS client.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**AI Plugins**: Fixed issue of template not being resolved correctly and supported nested fields.\n",
        "type": "bugfix",
        "scope": "Plugin",
        "plugins": [
          "ai-proxy",
          "ai-request-transformer",
          "ai-response-transformer"
        ]
      },
      {
        "message": "**ai-semantic-cache**: Fixed issue of SSE body may have extra trailing in some cases.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where Konnect analytics were missing for Kong AI Gateway.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**ai-proxy**: Fixed preserve mode.\n",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": []
  },
  "3.9.1.0": {
    "kong": [
      {
        "message": "**session**: Added two boolean configuration fields `hash_subject` (default `false`) and `store_metadata` (default `false`) to store session's metadata in the database.\n",
        "type": "feature",
        "scope": "Plugin"
      }
    ],
    "kong-ee": [
      {
        "message": "Fixed an issue where A mismatch between If-Match in request and ETag in response would result in bad case in the response phase.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Vault**: Updated the AWS Vault supported regions list to the latest.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**ai-proxy**: Fixed Gemini streaming responses getting truncated and/or missing tokens.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy**: Fixed incorrect error thrown when trying to log streaming responses.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy**: Fixed tool calls not working in streaming mode for Bedrock and Gemini providers.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Added support for the new Ollama streaming content type in AI driver.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**ai-semantic-prompt-guard**: Fixed an issue where the plugin was not able to reconfigure the plugin when using DB-less mode.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Added a new feature to invalidate the admin's or the developer's related session while changing the password.\n",
        "type": "feature",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "3.9.0.1": {
    "kong": [
      {
        "message": "Bumped libexpat from 2.6.2 to 2.6.4 to fix a crash in the XML_ResumeParser function caused by XML_StopParser stopping an uninitialized parser.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-kong-nginx-module from 0.13.1 to 0.13.2.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**ai-proxy**: Fixed a bug in the Azure provider where `model.options.upstream_path` overrides would always return 404.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy**: Fixed a bug where Azure streaming responses would be missing individual tokens.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy**: Fixed a bug where response streaming in Gemini and Bedrock providers was returning whole chat responses in one chunk.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy**: Fixed a bug where multimodal requests (in OpenAI format) would not transform properly, when using the Gemini provider.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where consistent hashing did not correctly handle hyphenated-Pascal-case headers, leading to uneven distribution of requests across upstream targets.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**grpc-web** and **grpc-gateway**: Fixed a bug where the `TE` (transfer-encoding) header would not be sent to the upstream gRPC servers when `grpc-web` or `grpc-gateweay` are in use.",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-ee": [
      {
        "message": "**AI Plugins**: Reverted the analytics container key from \"proxy\" to \"ai-proxy\" to align with previous versions.\n",
        "type": "bugfix",
        "scope": "Plugin",
        "plugins": [
          "ai-proxy",
          "ai-request-transformer",
          "ai-response-transformer"
        ]
      },
      {
        "message": "Fixed an issue that certificate entity configured with vault reference may not get refreshed on time when initial with an invalid string.",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "2.8.4.14": {
    "kong": [
      {
        "message": "Pinned `LPEG` to `1.1.0` to keep the version consistent across all active branches. This is not a version bump, it is just pinning the version already in use.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Disabled requests with both Content-Length and Transfer-Encoding by backporting the Nginx patch.",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "Added an option for GitHub Actions to build nginx/OpenResty with debug symbols.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added a `--lts_34_compatibility` option to the `check` command to perform configuration compatibility check for upgrading to version 3.4.x.x.",
        "type": "feature",
        "scope": "CLI Command"
      }
    ],
    "kong-manager-ee": []
  },
  "2.8.4.13": {
    "kong": [],
    "kong-ee": [
      {
        "message": "Fixed an issue where luarocks-admin was not available in /usr/local/bin.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Rate Limiting Advanced**: Fixed an issue where the sync timer may stop working due to race condition.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed RPM relocation by setting the default prefix to `/`, and added a symbolic link for `resty` to handle missing `/usr/local/bin` in `PATH`.",
        "type": "Breaking Change",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "2.8.4.12": {
    "kong": [],
    "kong-ee": [
      {
        "message": "Made the RPM package relocatable with the default prefix set to `/`.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Debian 10, CentOS 7, and RHEL 7 reached their End of Life (EOL) dates on June 30, 2024. As of this patch, Kong is not building Kong Gateway 2.8.x installation packages or Docker images for these operating systems. Kong is no longer providing official support for any Kong version running on these systems.",
        "type": "deprecation",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "2.8.4.11": {
    "kong": [
      {
        "message": "Reverted DNS client to original behaviour of ignoring ADDITIONAL SECTION in DNS responses.",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-ee": [],
    "kong-manager-ee": []
  },
  "2.8.4.10": {
    "kong": [
      {
        "message": "Improve the robustness of lua-cjson when handling unexpected input. \n",
        "type": "dependency",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "**Vitals**: Fixed a bug that each data plane connecting to the control plane would trigger the control plane to create a redundant table rotater timer.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "add a Docker image for RHEL8.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**Rate Limiting Advanced** Refactored `kong/tools/public/rate-limiting` to keep the original interfaces unchanged (backward compatibility) and extend a new interface `new_instance` to provide isolation between different plugins. If you are using custom Rate Limiting plugins based on this library, please update the initialization code to the new format like 'local ratelimiting = require(\"kong.tools.public.rate-limiting\").new_instance(\"custom-plugin-name\")'. The old interface will be removed in the upcoming major release.",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": []
  },
  "2.8.4.9": {
    "kong": [
      {
        "message": "**PDK:** fix kong.request.get_forwarded_port to always return a number which was caused by an incorrectly\nstored string value in ngx.ctx.host_port.\n",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "Fixed an issue where Vault configuration stayed sticky and cached even when configurations were changed.\n",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "**DegraphQL**: Fixed an issue where GraphQL variables were not being correctly parsed and coerced into their defined types.\n",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": []
  },
  "2.8.4.8": {
    "kong": [
      {
        "message": "Bumped OpenSSL from 3.1.4 to 3.1.5.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "now TLSv1.1 and lower is by default disabled in OpenSSL 3.x",
        "type": "feature",
        "scope": "Configuration"
      },
      {
        "message": "Fix an issue where an external plugin (Go, Javascript, or Python) would fail to\napply a change to the plugin config via the Admin API.\n",
        "type": "bugfix",
        "scope": "Configuration"
      },
      {
        "message": "update file permission of kong.logrotate to 644",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fix the missing router section for the output of the request-debugging",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Bumped default values of `nginx_http_keepalive_requests` and `upstream_keepalive_max_requests` to `10000`.",
        "type": "performance",
        "scope": "Configuration"
      },
      {
        "message": "Set security level of gRPC's TLS to 0 when ssl_cipher_suite is set to old",
        "type": "bugfix",
        "scope": "Configuration"
      }
    ],
    "kong-ee": [
      {
        "message": "Bump `kong-lua-resty-kafka` to `0.18`.\n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-kong-nginx-module to 0.2.3",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bump `lua-resty-luasocket` to `1.1.2` for fixing [luasocket#427](https://github.com/lunarmodules/luasocket/issues/427).\n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Fix a bug that `/metrics` endpoint throws an error when database is down.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Ldap-auth-advanced**: fix some cache-related issues which cause groups_required to not work properly and unexpected return codes after a non-200 response",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced** Fixed an issue where RLA and other similar plugins using the `rate-limiting` library, when used together, would interfere with each other and thus fail to synchronize counter data to the central data store",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced** Falling back to local strategy if sync_rate = 0 when redis goes down",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed the UDP socket leaking issue of the DNS module.",
        "scope": "Core",
        "type": "bugfix"
      }
    ],
    "kong-manager-ee": []
  },
  "2.8.4.7": {
    "kong-ee": [
      {
        "message": "**Rate Limiting Advanced** The plugin now creates counter syncing timers when being executed instead of being created to reduce some meaningless error logs",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced** fix the return info and log of previous errors are missing when use redis cluster mode connection fails",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced** Check the error of queries in the redis pipeline",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced** fix an issue where if `sync_rate` is changed from a value greater than `0` to `0`, the namespace will be cleared unexpectedly",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced** fix some timer-related issues where the counter syncing timer can't be created or destroyed properly",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ]
  },
  "2.8.4.6": {
    "kong": [
      {
        "message": "Bump resty-openssl from 0.8.25 to 1.0.2",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bump Alpine base image from `3.16` to `3.19`.\n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "fix ldoc intermittent failure caused by LuaJIT error.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "respect custom `proxy_access_log`",
        "type": "bugfix",
        "scope": "Configuration"
      }
    ],
    "kong-ee": [
      {
        "message": "Bump `dns_stale_ttl` default to 1 hour so stale DNS record can be used for longer time in case of resolver downtime.",
        "type": "performance",
        "scope": "Configuration"
      },
      {
        "message": "bump lua-resty-healthcheck to 1.5.4",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Fix a bug that GCP backend vault hides the error message when secrets cannot be fetched",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fix an issue that GCP vault could not fetch secret due to SSL verification failure in CLI mode.\nUsers who use secrets management based on GCP should also ensure `system` CA store is included in `lua_ssl_trusted_certificate` configuration.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**OpenID-Connect**: update time when calculating token expire",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": []
  },
  "2.8.4.5": {
    "kong": [
      {
        "message": "Fix a problem that abnormal socket connection will be reused when querying Postgres database.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fix a bug related to data interference between requests in the kong.log.serialize function.",
        "type": "bugfix",
        "scope": "PDK",
        "prs": [
          11566
        ],
        "jiras": [
          "FTI-5357"
        ]
      },
      {
        "message": "Bumped lua-resty-aws from 1.3.2 to 1.3.5",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bump lua-kong-nginx-module from 0.2.0 to 0.2.2",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Support observing the time consumed by some components in the given request.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "reduce upstream health iteration latency spike during scrape",
        "type": "performance",
        "scope": "Plugin",
        "plugins": [
          "prometheus"
        ]
      },
      {
        "message": "A unique Request ID is now populated in the error log, access log, error templates, log serializer, and in a new X-Kong-Request-Id header (configurable for upstream/downstream using the `headers` and `headers_upstream` configuration options). \n",
        "type": "feature",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "**Openid-Connect**: New field `unauthorized_destroy_session`, which when set to true, we destory the session (delete the user's session cookie) when the request is unauthorized. Default to true. Set to false to preserve the session.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "mtls-auth should not cache the network failure when doing revocation check",
        "type": "bugfix",
        "plugins": [
          "mtls-auth"
        ],
        "scope": "Plugin"
      },
      {
        "message": "Fix a keyring issue where a kong node fails to send keyring material when using cluster strategy",
        "type": "bugfix",
        "prs": [
          6480
        ],
        "jiras": [
          "FTI-5326"
        ],
        "scope": "Core"
      },
      {
        "message": "**Openid-Connect**: Fix issue on token revocation on logout where the code was revoking refresh token when it was supposed to revoke access token when using the discovered revocation endpoint.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fix an issue that results in the critical error log 'unexpected eof while read' when an SSL peer does not send close_notify before closing the connection",
        "type": "bugfix",
        "scope": "Core",
        "jiras": [
          "FTI-5354"
        ]
      },
      {
        "message": "**collector**: Fix an issue where Kong cannot start after upgrading to version >= 2.8.4.1 due to the deprecated collector plugin still being used.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Add counters such as routes, plugins, licenses, deployment info, etc. to the report component. Also, add a checksum and timestamp to the output.",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "bump jq to 1.7",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "bump OpenSSL to 3.1.4",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Dismiss confusing debug log from Redis tool of rate limiting #7077 #7101",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Eliminate asynchronous timer in syncQuery() to prevent hang risk",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Update the DNS client to follow configured timeouts in a more predictable manner",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Ensure pluginserver protobut includes are placed in the correct path in packages",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fix an issue where unique violation errors were reported while trying to update the user_token\nwith the same value on the same RBAC user.\n",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "**Request Validator**: Fix an issue where the `allowed_content_types` configuration is unable to contain the \"-\" character caused by the over-strict validation rule.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "consumer-groups: add missing support for tags",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "Upgrade moment.js to v2.29.4 to fix a known CVE vulnerability.",
        "type": "dependency",
        "scope": "Core"
      }
    ]
  },
  "2.8.4.4": {
    "kong": [],
    "kong-ee": [
      {
        "message": "Apply Nginx patch for detecting HTTP/2 stream reset attacks early (CVE-2023-44487)",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "2.8.4.3": {
    "kong": [],
    "kong-ee": [
      {
        "message": "Fix a bug that the anonymous report can't be silenced by setting `anonymous_reports=false`.",
        "type": "bugfix",
        "jiras": [
          "FTI-4469"
        ],
        "scope": "Core"
      },
      {
        "message": "**Rate Limiting Advanced**: cp should not create namespace or do sync.",
        "type": "bugfix",
        "scope": "Plugin",
        "jiras": [
          "FTI-4960"
        ]
      },
      {
        "message": "**OpenID-Connect**: If an invalid opaque token is provided but verified failed, print the correct error.",
        "type": "bugfix",
        "scope": "Plugin",
        "jiras": [
          "FTI-4975"
        ]
      },
      {
        "message": "**Rate Limiting Advanced**: Fix a bug where the rl cluster_events broadcast the wrong data in traditional cluster mode.",
        "type": "bugfix",
        "scope": "Plugin",
        "jiras": [
          "FTI-5014"
        ]
      },
      {
        "message": "The Redis strategy of Rate Limiting catches strategy connection failure.",
        "type": "bugfix",
        "jiras": [
          "FTI-5092",
          "FTI-5246"
        ],
        "scope": "Core"
      },
      {
        "message": "Fix an issue can't create developer with non-default workspace.",
        "type": "bugfix",
        "jiras": [
          "FTI-5229"
        ],
        "scope": "Core"
      },
      {
        "message": "**Response Transformer Advanced**: Do not load response body when `if_status` does not match.",
        "type": "bugfix",
        "scope": "Plugin",
        "jiras": [
          "FTI-5265"
        ]
      },
      {
        "message": "**AWS-Lambda**: the AWS-Lambda plugin has been refactored by using lua-resty-aws as an underlying AWS library. The refactor simplifies the AWS-Lambda plugin code base and adding support for multiple IAM authenticating scenarios.",
        "type": "feature",
        "scope": "Plugin",
        "jiras": [
          "KAG-1386",
          "FTI-5206"
        ]
      },
      {
        "message": "Fix a bug in the exit hook that cause customize headers to be lost.",
        "type": "bugfix",
        "scope": "PDK",
        "jiras": [
          "KAG-2524",
          "FTI-4073"
        ]
      },
      {
        "message": "Ubuntu 18.04 artifacts are no longer supported as it's EOL",
        "type": "Breaking Change",
        "scope": "Core"
      },
      {
        "message": "AmazonLinux 2022 artifacts are renamed to AmazonLinux 2023 according to AWS's decision",
        "type": "Breaking Change",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-protobuf from 0.3.3 to 0.4.2",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-aws from 1.0.0 to 1.3.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-gcp from 0.0.5 to 0.0.13",
        "type": "dependency",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "3.8.1.1": {
    "kong": [
      {
        "message": "Bumped libexpat from 2.6.2 to 2.6.4 to fix a crash in the XML_ResumeParser function caused by XML_StopParser stopping an uninitialized parser.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-kong-nginx-module from 0.11.1 to 0.11.2.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where consistent hashing did not correctly handle hyphenated-Pascal-case headers, leading to uneven distribution of requests across upstream targets.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**session**: Added two boolean configuration fields `hash_subject` (default `false`) and `store_metadata` (default `false`) to store session's metadata in the database.\n",
        "type": "feature",
        "scope": "Plugin"
      }
    ],
    "kong-ee": [
      {
        "message": "Added an option for GitHub Actions to build nginx/OpenResty with debug symbols.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**app-dynamics**: Fixed segmentation fault caused by missing destructor call on process exit.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue that certificate entity configured with vault reference may not get refreshed on time when initial with an invalid string.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where A mismatch between If-Match in request and ETag in response would result in bad case in the response phase.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**ldap-auth-advanced**: Fixed an issue where binary string was truncated at the first null character.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**proxy-cache-advanced**: Fixed an issue where the `kong.plugins.proxy-cache-advanced.migrations` module was not being loaded when upgrading to `3.8.x.y`.\nThis issue was introduced in `3.8.0.0` and Kong refuses to start if `redis.timeout` and `redis.connect_timeout` are set to different values.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fix an issue where running the \"kong migration\" command will fail when upgrading to 3.8 version, which is caused by an incomplete Redis configuration related SQL.",
        "type": "deprecation",
        "scope": "Plugin"
      },
      {
        "message": "**rate-limiting-advanced**: Fixed an issue where the `kong.plugins.rate-limiting-advanced.migrations` module was not being loaded when upgrading to `3.8.x.y`.\nThis issue was introduced in `3.8.0.0` and Kong refuses to start if `redis.timeout` and `redis.connect_timeout` are set to different values.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Vault**: Updated the AWS Vault supported regions list to the latest.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where adding the `hash_subject` and `store_metadata` fields to the `portal_session_conf` in the Dev Portal was not working as expected.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Added a new feature to invalidate the admin's or the developer's related session while changing the password.\n",
        "type": "feature",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "3.8.1.0": {
    "kong": [
      {
        "message": "**ai-proxy**: Fixed an issue where AI Transformer plugins always returned a 404 error when using 'Google One' Gemini subscriptions.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-transformers**: Fixed a bug where the correct LLM error message was not propagated to the caller.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Bumped lua-kong-nginx-module from 0.11.0 to 0.11.1 to fix an issue where the upstream cert chain wasn't properly set\n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-aws to 1.5.4, to fix a bug inside region prefix generating",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**Prometheus**: Bumped KONG_LATENCY_BUCKETS bucket's maximal capacity to 6000",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Fix for querying admin API entities with empty tags",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "**AI-Proxy**: Fixed issue where multi-modal requests is blocked on azure provider. \n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an bug that AI semantic cache can't use request provided models",
        "type": "bugfix",
        "plugins": [
          "ai-semantic-cache"
        ],
        "scope": "Plugin"
      },
      {
        "message": "**Rate-Limiting**: Fixed an issue that caused an HTTP 500 error when `hide_client_headers` is set to `true` and the request exceeds the rate limit.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Vault**: Fixed an issue where updating a vault entity in a non-default workspace will not take effect.\n",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "Bumped lua-resty-azure to 1.6.1 to fix a GET request build issue",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**ai-proxy-advanced**, **ai-semantic-prompt-guard**: Fixed an issue where stale plugin config was not updated in dbless and hybrid mode.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy-advanced**: Fixed an issue where lowest-usage and lowest-latency strategy did not update data points correctly.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-rate-limiting-advanced**: Fixed an issue where the plugin yielded an error when incrementing the rate limit counters in non-yieldable phases.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where the ai-semantic-cache plugin would abort in stream mode when another plugin enable the buffering proxy mode.",
        "type": "bugfix",
        "plugins": [
          "ai-semantic-cache"
        ],
        "scope": "Plugin"
      },
      {
        "message": "**ai-semantic-cache**: Fixed an issue where the ai-semantic-cache plugin put the wrong type value in the metrics when using the prometheus plugin.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed the clustering compatibility logic for the RDS assume role and custom STS endpoint features backport.",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "**degraphql**: Fixed an issue where the degraphql routes were updated from the control plane but not updated in the degraphql router on the data plane.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**json-threat-protection**: Fixed an issue where the length counting of escape sequences, non-ASCII characters, and object entry names in JSON Strings was incorrect; now using UTF-8 character count instead of bytes.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**rate-limiting-advanced**: Fixed an issue where a warn log was printed when event_hooks was disabled.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**json-threat-protection**: Fixed an issue where certain default parameter values were incorrectly interpreted as 0 in some environments (e.g., ARM64-based):\n* `max_container_depth`\n* `max_object_entry_count`\n* `max_object_entry_name_length`\n* `max_array_element_count`\n* `max_string_value_length`\n",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "Fixed an issue where text was not centered in custom banners.",
        "type": "bugfix",
        "githubs": [
          3567
        ],
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where a workspace named 'portal', but with different case letters, does not render the correct overview page.",
        "type": "bugfix",
        "githubs": [
          3615
        ],
        "scope": "Core"
      }
    ]
  },
  "3.7.1.5": {
    "kong": [
      {
        "message": "**session**: Added two boolean configuration fields `hash_subject` (default `false`) and `store_metadata` (default `false`) to store session's metadata in the database.\n",
        "type": "feature",
        "scope": "Plugin"
      }
    ],
    "kong-ee": [
      {
        "message": "**app-dynamics**: Fixed segmentation fault caused by missing destructor call on process exit.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ldap-auth-advanced**: Fixed an issue where binary string was truncated at the first null character.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Vault**: Updated the AWS Vault supported regions list to the latest.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where adding the `hash_subject` and `store_metadata` fields to the `portal_session_conf` in the Dev Portal was not working as expected.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Added a new feature to invalidate the admin's or the developer's related session while changing the password.\n",
        "type": "feature",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "3.7.1.4": {
    "kong": [
      {
        "message": "Bumped libexpat from 2.6.2 to 2.6.4 to fix a crash in the XML_ResumeParser function caused by XML_StopParser stopping an uninitialized parser.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-kong-nginx-module from 0.11.0 to 0.11.2.",
        "type": "dependency",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "Bumped libxml2 to 2.12.9 for CVE-2024-40896",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Added an option for GitHub Actions to build nginx/OpenResty with debug symbols.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue that certificate entity configured with vault reference may not get refreshed on time when initial with an invalid string.",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "3.7.1.3": {
    "kong": [
      {
        "message": "**AI-proxy**: Fixed a bug where certain Azure models would return partial tokens/words \nwhen in response-streaming mode.\n",
        "scope": "Plugin",
        "type": "bugfix"
      },
      {
        "message": "**AI-proxy**: Fixed a bug where Cohere and Anthropic providers don't read the `model` parameter properly \nfrom the caller's request body.\n",
        "scope": "Plugin",
        "type": "bugfix"
      },
      {
        "message": "**AI-proxy**: Fixed a bug where using \"OpenAI Function\" inference requests would log a \nrequest error, and then hang until timeout.\n",
        "scope": "Plugin",
        "type": "bugfix"
      },
      {
        "message": "**AI-proxy**: Fixed a bug where AI Proxy would still allow callers to specify their own model,  \nignoring the plugin-configured model name.\n",
        "scope": "Plugin",
        "type": "bugfix"
      },
      {
        "message": "**AI-proxy**: Fixed a bug where AI Proxy would not take precedence of the \nplugin's configured model tuning options, over those in the user's LLM request.\n",
        "scope": "Plugin",
        "type": "bugfix"
      },
      {
        "message": "**AI-proxy**: Fixed a bug where setting OpenAI SDK model parameter \"null\" caused analytics \nto not be written to the logging plugin(s).\n",
        "scope": "Plugin",
        "type": "bugfix"
      },
      {
        "message": "Bumped lua-resty-aws to 1.5.3 to fix a bug related to STS regional endpoint.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "The kong.logrotate configuration file will no longer be overwritten during upgrade.\nWhen upgrading, set the environment variable `DEBIAN_FRONTEND=noninteractive` on Debian/Ubuntu to avoid any interactive prompts and enable fully automatic upgrades.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Vault**: Fixed an issue where updating a vault entity in a non-default workspace will not take effect.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the Vault secret cache got refreshed during `resurrect_ttl` time and could not be fetched by other workers.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Moved internal Unix sockets to a subdirectory (`sockets`) of the Kong prefix.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Shortened names of internal Unix sockets to avoid exceeding the socket name limit.",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "Bumped lua-resty-azure to 1.6.1 to fix a GET request build issue",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where luarocks-admin was not available in /usr/local/bin.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**AWS-Lambda**: Added support for a configurable STS endpoint with the new configuration field `aws_sts_endpoint_url`.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Added support for AWS IAM role assuming in AWS IAM Database Authentication, with new configuration fields: \"pg_iam_auth_assume_role_arn\", \"pg_iam_auth_role_session_name\", \"pg_ro_iam_auth_assume_role_arn\", and \"pg_ro_iam_auth_role_session_name.\"\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added support for a configurable STS endpoint for RDS IAM Authentication, with new configuration fields: `pg_iam_auth_sts_endpoint_url` and `pg_ro_iam_auth_sts_endpoint_url`.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added support for a configurable STS endpoint for AWS Vault. This can either be configured by `vault_aws_sts_endpoint_url` as a global configuration, or `sts_endpoint_url` on a custom AWS vault entity.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**Rate Limiting Advanced**: Fixed an issue where if the `window_size` in the consumer group overriding config is different from the `window_size` in the default config, the rate limiting of that consumer group would fall back to local strategy.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Fixed an issue where the sync timer may stop working due to race condition.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Made the RPM package relocatable with the default prefix set to `/`.",
        "type": "dependency",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "3.7.1.2": {
    "kong": [
      {
        "message": "Bumped lua-resty-events to 0.3.0",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-healthcheck to 3.1.0",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**AWS-Lambda**: A new configuration field `empty_arrays_mode` is now added to control whether Kong should send `[]` empty arrays (returned by Lambda function) as `[]` empty arrays or `{}` empty objects in JSON responses.`\n",
        "type": "feature",
        "scope": "Plugin"
      }
    ],
    "kong-ee": [
      {
        "message": "Debian 10, CentOS 7, and RHEL 7 reached their End of Life (EOL) dates on June 30, 2024. As of this patch, Kong is not building Kong Gateway 3.7.x installation packages or Docker images for these operating systems. Kong is no longer providing official support for any Kong version running on these systems.",
        "type": "deprecation",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "Fixed an issue where the Dev Portal documentation link was unavailable because the official documentation was removed after the 3.4.x.",
        "type": "bugfix",
        "githubs": [
          3426
        ],
        "scope": "Core"
      }
    ]
  },
  "3.7.1.1": {
    "kong": [
      {
        "message": "Reverted DNS client to original behaviour of ignoring ADDITIONAL SECTION in DNS responses.",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-ee": [],
    "kong-manager-ee": []
  },
  "3.7.1.0": {
    "kong": [
      {
        "message": "Bumped lua-resty-events to 0.2.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-healthcheck from 3.0.1 to 3.0.2, to reduce active healthcheck timer usage.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**AI-Proxy**: Resolved a bug where the object constructor would set data on the class instead of the instance",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Basic-Auth**: Fix an issue of realm field not recognized for older kong versions (before 3.6)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Key-Auth**: Fix an issue of realm field not recognized for older kong versions (before 3.7)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where the priority field can be set in a traditional mode route\nWhen 'router_flavor' is configured as 'expressions'.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "fix a bug that the `host_header` attribute of upstream entity can not be set correctly in requests to upstream as Host header when retries to upstream happen.",
        "scope": "Core",
        "type": "bugfix"
      }
    ],
    "kong-ee": [
      {
        "message": "Built-in RBAC roles for admins (`admin` under the default workspace and `workspace-admin` under non-default workspaces) now disallow CRUD actions to `/groups` and `/groups/*` endpoints.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Bump lua-resty-jsonschema-rs to 0.1.5",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**ai-rate-limiting-advanced**: Edit the logic for the window ajustement and fix missing passing window to shm",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID Connect**: Fixed a bug where anonymous consumers may be cached as nil under a certain condition.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Improved that timer spikes do not occur when there is network instability with the central data store.",
        "type": "performance",
        "scope": "Plugin"
      },
      {
        "message": "**Request-Validator**: Fix an issue where the plugin may fail to handle requests when param_schema is $ref schema.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Request-Validator**: Added a new configuration field `content_type_parameter_validation` to determine whether to enable Content-Type parameters validation.",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": []
  },
  "3.6.1.8": {
    "kong": [
      {
        "message": "Bumped lua-resty-aws to 1.5.3 to fix a bug related to STS regional endpoint.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "The kong.logrotate configuration file will no longer be overwritten during upgrade.\nWhen upgrading, set the environment variable `DEBIAN_FRONTEND=noninteractive` on Debian/Ubuntu to avoid any interactive prompts and enable fully automatic upgrades.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Vault**: Fixed an issue where updating a vault entity in a non-default workspace will not take effect.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the Vault secret cache got refreshed during `resurrect_ttl` time and could not be fetched by other workers.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Moved internal Unix sockets to a subdirectory (`sockets`) of the Kong prefix.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Shortened names of internal Unix sockets to avoid exceeding the socket name limit.",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "Fixed an issue where luarocks-admin was not available in /usr/local/bin.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**AWS-Lambda**: Added support for a configurable STS endpoint with the new configuration field `aws_sts_endpoint_url`.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Added support for AWS IAM role assuming in AWS IAM Database Authentication, with new configuration fields: \"pg_iam_auth_assume_role_arn\", \"pg_iam_auth_role_session_name\", \"pg_ro_iam_auth_assume_role_arn\", and \"pg_ro_iam_auth_role_session_name.\"\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added support for a configurable STS endpoint for RDS IAM Authentication, with new configuration fields: `pg_iam_auth_sts_endpoint_url` and `pg_ro_iam_auth_sts_endpoint_url`.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added support for a configurable STS endpoint for AWS Vault. This can either be configured by `vault_aws_sts_endpoint_url` as a global configuration, or `sts_endpoint_url` on a custom AWS vault entity.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**OpenTelemetry**: Fixed an issue where header_type being nil caused a concatenation error.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced** Fixed an issue where if the `window_size` in the consumer group overriding config is different from the `window_size` in the default config, the rate limiting of that consumer group would fall back to local strategy.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced** Fixed an issue where the sync timer may stop working due to race condition.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ldap-auth-advanced**: fix an issue where an exception will be thrown when ldap search fails",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Made the RPM package relocatable with the default prefix set to `/`.",
        "type": "dependency",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "3.6.1.7": {
    "kong": [
      {
        "message": "Bumped lua-resty-events to 0.3.0",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-healthcheck from 3.1.0",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**AWS-Lambda**: A new configuration field `empty_arrays_mode` is now added to control whether Kong should send `[]` empty arrays (returned by Lambda function) as `[]` empty arrays or `{}` empty objects in JSON responses.`\n",
        "type": "feature",
        "scope": "Plugin"
      }
    ],
    "kong-ee": [
      {
        "message": "Debian 10, CentOS 7, and RHEL 7 reached their End of Life (EOL) dates on June 30, 2024. As of this patch, Kong is not building Kong Gateway 3.6.x installation packages or Docker images for these operating systems. Kong is no longer providing official support for any Kong version running on these systems.",
        "type": "deprecation",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "3.6.1.6": {
    "kong": [
      {
        "message": "Reverted DNS client to original behaviour of ignoring ADDITIONAL SECTION in DNS responses.",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-ee": [],
    "kong-manager-ee": []
  },
  "3.6.1.5": {
    "kong": [
      {
        "message": "Bumped lua-resty-azure from 1.4.1 to 1.5.0, to refine some error logging.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-events to 0.2.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-healthcheck from 3.0.1 to 3.0.2, to reduce active healthcheck timer usage.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Improve the robustness of lua-cjson when handling unexpected input. \n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the `pg_timeout` was overridden to `60s` even if `--db-timeout`\nwas not explicitly passed in CLI arguments.\n",
        "type": "bugfix",
        "scope": "CLI Command"
      },
      {
        "message": "**ACME**: Fixed migration of redis configuration.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Response-RateLimiting**: Fixed migration of redis configuration.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate-Limiting**: Fixed migration of redis configuration.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Basic-Auth**: Fix an issue of realm field not recognized for older kong versions (before 3.6)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "fix a bug that the `host_header` attribute of upstream entity can not be set correctly in requests to upstream as Host header when retries to upstream happen.",
        "scope": "Core",
        "type": "bugfix"
      }
    ],
    "kong-ee": [
      {
        "message": "Add LHS brackets filtering to search fields",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "Built-in RBAC roles for admins (`admin` under the default workspace and `workspace-admin` under non-default workspaces) now disallow CRUD actions to `/groups` and `/groups/*` endpoints.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "The `/<workspace>/admins` endpoint was used to return admins associated with a workspace based on their assigned RBAC roles. It has been fixed to return admins according to the workspace they belong to.",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "**Audit Log:** Add request_timestamp to audit_objects.",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "**Audit Log**: Add before / after aliases for LHS Brackets filters.",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "**Audit Log:** Allow audit_requests and audit_objects to be filtered by request_timestamp.",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "**Audit Log:** change default ordering of audit_requests to sorted by request_timestamp descending",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "**Vitals**: Fixed a bug that each data plane connecting to the control plane would trigger the control plane to create a redundant table rotater timer.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**OpenID Connect**: Fixed a bug where anonymous consumers may be cached as nil under a certain condition.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced** Improved that timer spikes do not occur when there is network instability with the central data store.",
        "type": "performance",
        "scope": "Plugin"
      },
      {
        "message": "**Request-Validator**: Fix an issue where the plugin may fail to handle requests when param_schema is $ref schema.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Request-Validator**: Added a new configuration field `content_type_parameter_validation` to determine whether to enable Content-Type parameters validation.",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "Fixed an issue where the Dev Portal documentation link was unavailable because the official documentation was removed after the 3.4.x.",
        "type": "bugfix",
        "githubs": [
          3425
        ],
        "scope": "Core"
      }
    ]
  },
  "3.6.1.4": {
    "kong": [
      {
        "message": "Bump lua-protobuf to 0.5.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**PDK:** fix kong.request.get_forwarded_port to always return a number which was caused by an incorrectly\nstored string value in ngx.ctx.host_port.\n",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "Fixed a problem that in hybrid DP mode a certificate entity configured with vault reference may not get refreshed on time",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "fix vault initialization by postponing vault reference resolving on init_worker",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "Fixed a problem where event_hooks were prematurely validated in hybrid mode. The fix delays the validation of event_hooks to the point where event_hooks are emitted.\n",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "**mtls-auth**: Add `default_consumer` option that allows a default consumer to be used when the client certificate is valid but does not match any existing consumers.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OAS Validation**, **WebSocket Size Limit**, **WebSocket Validator**, **XML Threat Protection**:\npriorities have been updated to prevent collisions between plugins.\nThe relative priority (and the order of execution) of bundled plugins remained unchanged.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Refactored `kong/tools/public/rate-limiting` to keep the original interfaces unchanged (backward compatibility) and extend a new interface `new_instance` to provide isolation between different plugins. If you are using custom Rate Limiting plugins based on this library, please update the initialization code to the new format like 'local ratelimiting = require(\"kong.tools.public.rate-limiting\").new_instance(\"custom-plugin-name\")'. The old interface will be removed in the upcoming major release.",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": []
  },
  "3.6.1.3": {
    "kong": [],
    "kong-ee": [
      {
        "message": "**OpenTelemetry**: Improved robustness of parsing for short trace IDs.",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "Fixed an issue where admin account profile page returning 404 error if the `admin_gui_path` was not a slash.",
        "type": "bugfix",
        "githubs": [
          3316
        ],
        "scope": "Core"
      }
    ]
  },
  "3.6.1.2": {
    "kong": [
      {
        "message": "Bumped lua-resty-openssl to 1.2.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped PCRE from the legacy libpcre 8.45 to libpcre2 10.43",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**ACME**: Fixed an issue where the certificate was not successfully renewed during ACME renewal.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fix an issue where an external plugin (Go, Javascript, or Python) would fail to\napply a change to the plugin config via the Admin API.\n",
        "type": "bugfix",
        "scope": "Configuration"
      },
      {
        "message": "update file permission of kong.logrotate to 644",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Vault**: do not use incorrect (default) workspace identifier when retrieving vault entity by prefix",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "Adjust clustering compatible check related to AWS Secrets Manager",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Bump `kong-lua-resty-kafka` to `0.18`.\n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-kong-nginx-module to 0.8.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bump `lua-resty-luasocket` to `1.1.2` for fixing [luasocket#427](https://github.com/lunarmodules/luasocket/issues/427).\n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**DegraphQL**: Fixed an issue where GraphQL variables were not being correctly parsed and coerced into their defined types.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fix a problem that a new DP cannot resolve the license required Vault reference after the first configuration push.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**OAS-Validation**: Add a new field `api_spec_encoded` to indicate whether the `api_spec` is URI-Encoded.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Fixing an issue where users were not allowed to start Kong Gateway if `admin_gui_auth_conf.scope` is missing `\"openid\"` or `\"offline_access\"` when `admin_gui_auth` is set to `openid-connect`. Kong Gateway will now print warning logs only if `\"openid\"` is missing from `admin_gui_auth_conf.scope`.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Rate Limiting Advanced**: Fixed an issue where RLA and other similar plugins using the `rate-limiting` library, when used together, would interfere with each other and thus fail to synchronize counter data to the central data store",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "fixed the display of the remaining days of license expireation date",
        "type": "bugfix",
        "githubs": [
          3268
        ],
        "scope": "Core"
      },
      {
        "message": "Fix an issue that setting up Developer Portal configuration `Developer Meta Fields` contains characters outside of the Latin1 range, admins are not able to login to Kong Manager.",
        "type": "bugfix",
        "githubs": [
          3311
        ],
        "scope": "Core"
      },
      {
        "message": "change the type of rbac token for the RBAC user to `password`",
        "type": "bugfix",
        "githubs": [
          3266
        ],
        "scope": "Core"
      }
    ]
  },
  "3.6.1.1": {
    "kong": [
      {
        "message": "Fix the missing router section for the output of the request-debugging",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "revert the hard-coded limitation of the ngx.read_body() API in OpenResty upstreams' new versions when downstream connections are in HTTP/2 or HTTP/3 stream modes.",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "Adjusted a clustering compatible check related to Hashicorp Vault Approle authentication.",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "**Rate Limiting Advanced** Falling back to local strategy if sync_rate = 0 when redis goes down",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced** The plugin now creates counter syncing timers when being executed instead of being created to reduce some meaningless error logs",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced** fix an issue where if `sync_rate` is changed from a value greater than `0` to `0`, the namespace will be cleared unexpectedly",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced** fix some timer-related issues where the counter syncing timer can't be created or destroyed properly",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "Fix an issue where custom plugins were missing from the plugin select page.\n",
        "type": "bugfix",
        "githubs": [
          3246
        ],
        "scope": "Core"
      },
      {
        "message": "Fix an issue where the service was not prefilled in the route form while using Expressions router.\n",
        "type": "bugfix",
        "githubs": [
          3243
        ],
        "scope": "Core"
      }
    ]
  },
  "3.6.1.0": {
    "kong": [
      {
        "message": "Fix a bug where the ulimit setting (open files) is low Kong will fail to start as the lua-resty-timer-ng exhausts the available worker_connections. Decrease the concurrency range of the lua-resty-timer-ng library from [512, 2048] to [256, 1024] to fix this bug.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "now TLSv1.1 and lower is by default disabled in OpenSSL 3.x",
        "type": "feature",
        "scope": "Configuration"
      },
      {
        "message": "**Opentelemetry**: increase queue max batch size to 200",
        "type": "performance",
        "scope": "Plugin"
      },
      {
        "message": "**Opentelemetry**: fix otel sampling mode lua panic bug when http_response_header_for_traceid option enable",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Set security level of gRPC's TLS to 0 when ssl_cipher_suite is set to old",
        "type": "bugfix",
        "scope": "Configuration"
      }
    ],
    "kong-ee": [
      {
        "message": "Adjust clustering compatible check related to HCV kube auth path",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "**ldap-auth-advanced**: fix an issue where if the credential is encoded with no username kong will throw an error and return 500",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ]
  },
  "3.5.0.7": {
    "kong": [
      {
        "message": "**AWS-Lambda**: A new configuration field `empty_arrays_mode` is now added to control whether Kong should send `[]` empty arrays (returned by Lambda function) as `[]` empty arrays or `{}` empty objects in JSON responses.`\n",
        "type": "feature",
        "scope": "Plugin"
      }
    ],
    "kong-ee": [
      {
        "message": "Debian 10, CentOS 7, and RHEL 7 reached their End of Life (EOL) dates on June 30, 2024. As of this patch, Kong is not building Kong Gateway 3.5.x installation packages or Docker images for these operating systems. Kong is no longer providing official support for any Kong version running on these systems.",
        "type": "deprecation",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "3.5.0.6": {
    "kong": [
      {
        "message": "Reverted DNS client to original behaviour of ignoring ADDITIONAL SECTION in DNS responses.",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-ee": [],
    "kong-manager-ee": []
  },
  "3.5.0.5": {
    "kong": [
      {
        "message": "Bumped lua-resty-azure from 1.4.1 to 1.5.0, to refine some error logging.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-events to 0.2.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-healthcheck from 1.6.4 to 1.6.5, to reduce active healthcheck timer usage.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "fix a bug that the `host_header` attribute of upstream entity can not be set correctly in requests to upstream as Host header when retries to upstream happen.",
        "scope": "Core",
        "type": "bugfix"
      }
    ],
    "kong-ee": [
      {
        "message": "Add LHS brackets filtering to search fields",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "Built-in RBAC roles for admins (`admin` under the default workspace and `workspace-admin` under non-default workspaces) now disallow CRUD actions to `/groups` and `/groups/*` endpoints.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "The `/<workspace>/admins` endpoint was used to return admins associated with a workspace based on their assigned RBAC roles. It has been fixed to return admins according to the workspace they belong to.",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "**Audit Log:** Add request_timestamp to audit_objects.",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "**Audit Log**: Add before / after aliases for LHS Brackets filters.",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "**Audit Log:** Allow audit_requests and audit_objects to be filtered by request_timestamp.",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "The workspace listing API only shows workspaces that the current user has endpoints associated with",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "**OpenID Connect**: Fixed a bug where anonymous consumers may be cached as nil under a certain condition.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced** Improved that timer spikes do not occur when there is network instability with the central data store.",
        "type": "performance",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "Fixed an issue where the Dev Portal documentation link was unavailable because the official documentation was removed after the 3.4.x.",
        "type": "bugfix",
        "githubs": [
          3425
        ],
        "scope": "Core"
      }
    ]
  },
  "3.5.0.4": {
    "kong": [
      {
        "message": "add gateway edition to the root endpoint of the admin api",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "Reuse match context between requests to avoid frequent memory allocation/deallocation",
        "type": "performance",
        "scope": "Core"
      },
      {
        "message": "Bumped atc-router from 1.2.0 to 1.6.0",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bump lua-protobuf to 0.5.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-openssl to 1.2.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped OpenSSL from 3.1.4 to 3.2.0",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bump resty-openssl from 0.8.25 to 1.2.0",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "now TLSv1.1 and lower is by default disabled in OpenSSL 3.x",
        "type": "feature",
        "scope": "Configuration"
      },
      {
        "message": "Header value matching (`http.headers.*`) in `expressions` router flavor are now case sensitive.\nThis change does not affect on `traditional_compatible` mode\nwhere header value match are always performed ignoring the case.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "The expressions route now supports the `!` (not) operator, which allows creating routes like\n`!(http.path =^ \"/a\")` and `!(http.path == \"/a\" || http.path == \"/b\")`\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**ACME**: Fixed an issue where the certificate was not successfully renewed during ACME renewal.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Improve the robustness of lua-cjson when handling unexpected input. \n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**PDK:** fix kong.request.get_forwarded_port to always return a number which was caused by an incorrectly\nstored string value in ngx.ctx.host_port.\n",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "Fix an issue where an external plugin (Go, Javascript, or Python) would fail to\napply a change to the plugin config via the Admin API.\n",
        "type": "bugfix",
        "scope": "Configuration"
      },
      {
        "message": "update file permission of kong.logrotate to 644",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a problem that in hybrid DP mode a certificate entity configured with vault reference may not get refreshed on time",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fix the missing router section for the output of the request-debugging",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "fix vault initialization by postponing vault reference resolving on init_worker",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Vault**: do not use incorrect (default) workspace identifier when retrieving vault entity by prefix",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**forward-proxy** fallback to the non-streaming proxy when the request body has already been read",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Bumped default values of `nginx_http_keepalive_requests` and `upstream_keepalive_max_requests` to `10000`.",
        "type": "performance",
        "scope": "Configuration"
      },
      {
        "message": "**Opentelemetry**: increase queue max batch size to 200",
        "type": "performance",
        "scope": "Plugin"
      },
      {
        "message": "**Opentelemetry**: fix otel sampling mode lua panic bug when http_response_header_for_traceid option enable",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Set security level of gRPC's TLS to 0 when ssl_cipher_suite is set to old",
        "type": "bugfix",
        "scope": "Configuration"
      },
      {
        "message": "Expressions route in `http` and `stream` subsystem now have stricter validation.\nPreviously they share the same validation schema which means admin can configure expressions\nroute using fields like `http.path` even for stream routes. This is no longer allowed.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Support `http.path.segments.len` and `http.path.segments.*` fields in the expressions router\nwhich allows matching incoming (normalized) request path by individual segment or ranges of segments,\nplus checking the total number of segments.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "`net.src.*` and `net.dst.*` match fields are now accessible in HTTP routes defined using expressions.\n",
        "type": "feature",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "Fixed an rbac issue that required adding missing endpoints to all workspaces.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Mark the `introspection_headers_values` in the `openid-connect` plugin as an encrypted and referenceable field",
        "type": "bugfix",
        "plugins": [
          "openid-connect"
        ],
        "scope": "Plugin"
      },
      {
        "message": "Adjust clustering compatible check related to AWS Secrets Manager",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Adjust clustering compatible check related to HCV kube auth path",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "**Audit Log:** change default ordering of audit_requests to sorted by request_timestamp descending",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "Bump `kong-lua-resty-kafka` to `0.18`.\n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-kong-nginx-module to 0.8.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bump `lua-resty-luasocket` to `1.1.2` for fixing [luasocket#427](https://github.com/lunarmodules/luasocket/issues/427).\n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "bump lua-resty-healthcheck to 1.6.4",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "In OpenSSL 3.2, the default SSL/TLS security level has been changed from 1 to 2. Which means security level set to 112 bits of security. As a result RSA, DSA and DH keys shorter than 2048 bits and ECC keys shorter than 224 bits are prohibited. In addition to the level 1 exclusions any cipher suite using RC4 is also prohibited. SSL version 3 is also not allowed. Compression is disabled.",
        "type": "Breaking Change",
        "scope": "Core"
      },
      {
        "message": "bump lua-resty-aws to 1.3.6",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**DegraphQL**: Fixed an issue where GraphQL variables were not being correctly parsed and coerced into their defined types.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Resilience support for homogeneous Dataplane deployments. Now Dataplanes can act as importer and exporter at the same time, and Kong will try to control the concurrency when export the config.",
        "type": "feature",
        "scope": "Clustering"
      },
      {
        "message": "fix a bug where workload identity does not work for dataplane resilience",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a problem where event_hooks were prematurely validated in hybrid mode. The fix delays the validation of event_hooks to the point where event_hooks are emitted.\n",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "reduce message push error log when cluster_telemetry_endpoint config is disabled",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Fix a problem that a new DP cannot resolve the license required Vault reference after the first configuration push.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fix a bug that GCP backend vault hides the error message when secrets cannot be fetched",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Ldap-auth-advanced**: fix some cache-related issues which cause groups_required to not work properly and unexpected return codes after a non-200 response",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fix an issue where external pluginservers would not start automatically with Kong",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "HashiCorp Vault backend now supports using Approle authentication method",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**jwt-signer**: support for consumer group scoping by using pdk `kong.client.authenticate` function",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ldap-auth-advanced**: fix an issue where if the credential is encoded with no username kong will throw an error and return 500",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Ldap-auth-advanced**: support decoding non-standard asn1 integer and enumerated encoded with redundant leading padding",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**ldap-auth-advanced**: support for consumer group scoping by using pdk `kong.client.authenticate` function",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**mtls-auth**: Add `default_consumer` option that allows a default consumer to be used when the client certificate is valid but does not match any existing consumers.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OAS-Validation**: Add a new field `api_spec_encoded` to indicate whether the `api_spec` is URI-Encoded.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OAS-Validation**: Fixed an issue that the cookie parameters are not being validated.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**oauth2-introspection**: support for consumer group scoping by using pdk `kong.client.authenticate` function",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**openid-connect**: support for consumer group scoping by using pdk `kong.client.authenticate` function",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenTelemetry**: Improved robustness of parsing for short trace IDs.",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "Fix an issue where HTTP 500 errors were returned when paginating and sorting by timestamp fields\n(e.g., `created_at`).\n",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "**OAS Validation**, **WebSocket Size Limit**, **WebSocket Validator**, **XML Threat Protection**:\npriorities have been updated to prevent collisions between plugins.\nThe relative priority (and the order of execution) of bundled plugins remained unchanged.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Implement relative URLs for portal root path redirection to prevent erroneous redirections to incorrect domains or protocols",
        "type": "bugfix",
        "scope": "Portal"
      },
      {
        "message": "**Rate Limiting Advanced**: Refactored `kong/tools/public/rate-limiting` to keep the original interfaces unchanged (backward compatibility) and extend a new interface `new_instance` to provide isolation between different plugins. If you are using custom Rate Limiting plugins based on this library, please update the initialization code to the new format like 'local ratelimiting = require(\"kong.tools.public.rate-limiting\").new_instance(\"custom-plugin-name\")'. The old interface will be removed in the upcoming major release.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Fixed an issue where RLA and other similar plugins using the `rate-limiting` library, when used together, would interfere with each other and thus fail to synchronize counter data to the central data store",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Allow using RBAC token to authenticate while using group mapping feature (e.g., OIDC, LDAP) with Kong Manager, and also fix some issue with the group mapping feature.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**Rate Limiting Advanced**: Falling back to local strategy if sync_rate = 0 when redis goes down",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: The plugin now creates counter syncing timers when being executed instead of being created to reduce some meaningless error logs",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: fix an issue where if `sync_rate` is changed from a value greater than `0` to `0`, the namespace will be cleared unexpectedly",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: fix some timer-related issues where the counter syncing timer can't be created or destroyed properly",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**saml**: support for consumer group scoping by using pdk `kong.client.authenticate` function",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "disallow admins or RBAC users to update their own roles",
        "type": "bugfix",
        "scope": "Admin API"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "Fixed an issue where the remaining days for the license expiration date was displayed inconsistently on the workspaces page and in the top tip.",
        "type": "bugfix",
        "githubs": [
          3269
        ],
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where setting the Developer Portal configuration \"Developer Meta Field\" to contain characters outside the Latin1 range prevented admin from logging into Kong Manager.",
        "type": "bugfix",
        "githubs": [
          3311
        ],
        "scope": "Core"
      },
      {
        "message": "change the type of rbac token for the RBAC user to `password`",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where admin account profile page returning 404 error if the `admin_gui_path` was not a slash.",
        "type": "bugfix",
        "githubs": [
          3326
        ],
        "scope": "Core"
      }
    ]
  },
  "3.5.0.3": {
    "kong": [
      {
        "message": "Build deb packages for Debian 12. The debian variant of kong docker image is built using Debian 12 now.",
        "type": "feature",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "Bump kong-redis-cluster to '1.5.3'",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "The listing endpoints for consumer groups (`/consumer_groups`) and consumers (`/consumers`) now respond with paginated results. The JSON key for the list has been changed to `data` instead of `consumer_groups` or `consumers`.",
        "type": "Breaking Change",
        "scope": "Admin API"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "added pagination support for nested consumer list and consumer group list.",
        "type": "feature",
        "githubs": [
          3157
        ],
        "scope": "Core"
      },
      {
        "message": "fixed an issue where dynamic ordering dropdown list does not show custom plugins.",
        "type": "bugfix",
        "githubs": [
          3145
        ],
        "scope": "Core"
      },
      {
        "message": "fixed an issue targets page shows 404 if the workspace is non-default.",
        "type": "bugfix",
        "githubs": [
          3140
        ],
        "scope": "Core"
      },
      {
        "message": "fixed an issue where the role of the current workspace can't be created by `workspace-super-admin`.",
        "type": "bugfix",
        "githubs": [
          3125
        ],
        "scope": "Core"
      }
    ]
  },
  "3.5.0.2": {
    "kong": [
      {
        "message": "Bumped OpenResty from 1.21.4.2 to 1.21.4.3",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bump resty-openssl from 0.8.25 to 1.0.2",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "fix ldoc intermittent failure caused by LuaJIT error.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**OAS-Validation** Fix a bug where the plugin throws a runtime error caused by the ref parameter schema not being dereferenced.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "respect custom `proxy_access_log`",
        "type": "bugfix",
        "scope": "Configuration"
      },
      {
        "message": "**Rate Limiting**: fix an issuer where all counters are synced to the same DB at the same rate.",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-ee": [
      {
        "message": "Mark the `authorization_value` in the `oauth2-introspection` plugin as an encrypted field",
        "type": "bugfix",
        "plugins": [
          "oauth2-introspection"
        ],
        "scope": "Plugin"
      },
      {
        "message": "**SAML**: adjust the priority of the SAML plugin to 1010 to correct the integration between the SAML plugin and other consumer-based plugins",
        "type": "Breaking Change",
        "scope": "Plugin"
      },
      {
        "message": "Bump `dns_stale_ttl` default to 1 hour so stale DNS record can be used for longer time in case of resolver downtime.",
        "type": "performance",
        "scope": "Configuration"
      },
      {
        "message": "bump luasec to 1.3.2",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Fix typo in jwe-decrypt error message",
        "type": "bugfix",
        "plugins": [
          "jwe-decrypt"
        ],
        "scope": "Plugin"
      },
      {
        "message": "Dismiss confusing debug log from Redis tool of rate limiting #7077 #7101",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fix an issue where the dataplane's log serializer output has workspace name under Hybrid mode",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "fix the missing workspace_id in the output of request debugging when using the filter",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Openid-Connect**: Fix logout uri suffix detection by using normalized version of `kong.request.get_forwarded_path()` instead of `ngx.var.request_uri` (especially when passing query strings to logout)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Eliminate asynchronous timer in syncQuery() to prevent hang risk",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "The default value of `dns_no_sync` option has been changed to `off`",
        "type": "feature",
        "scope": "Configuration"
      },
      {
        "message": "**Forward-Proxy**: Fixed the issue where request payload is being discarded when payload exceeded the `client_body_buffer_size`.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Mocking**: Fix an issue where valid recursive schemas are always rejected.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAS-Validation**: Fixed an issue that the plugin throws a runtime error while validating parameters with AnyType schema and style keyword defined.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAS-Validation**: Fixed an issue that the nullable keyword did not take effect.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAS-Validation**: Fixed an issue that the URI component escaped characters were incorrectly unescaped.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID-Connect**: update time when calculating token expire",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Openid-Connect** configurations `scopes`, `login_redirect_uri`, `logout_redirect_uri` can now be referenced as a secret in the Kong Vault",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Openid-Connect**: extend `token_post_args_client` to support injection from headers",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Fixed critical level logs when starting external plugin servers. Those logs cannot be suppressed due to the limitation of OpenResty. We choose to remove the socket availibilty detection feature.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Plugin Server**: fix an issue where every request causes a new plugin instance to be created",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "Fix an issue where unique violation errors were reported while trying to update the user_token\nwith the same value on the same RBAC user.\n",
        "type": "bugfix",
        "scope": "Admin API"
      }
    ],
    "kong-manager": [],
    "kong-manager-ee": []
  },
  "3.5.0.1": {
    "kong-manager-ee": [
      {
        "message": "Fix the issue where some values in config cards were not displayed correctly.",
        "type": "bugfix",
        "scope": "Core"
      }
    ]
  },
  "3.4.3.17": {
    "kong": [
      {
        "message": "Bumped libexpat from 2.6.2 to 2.6.4 to fix a crash in the XML_ResumeParser function caused by XML_StopParser stopping an uninitialized parser.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-events to 0.3.0",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-healthcheck to 3.1.0",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**session**: Added two boolean configuration fields `hash_subject` (default `false`) and `store_metadata` (default `false`) to store session's metadata in the database.\n",
        "type": "feature",
        "scope": "Plugin"
      }
    ],
    "kong-ee": [
      {
        "message": "Added an option for GitHub Actions to build nginx/OpenResty with debug symbols.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**app-dynamics**: Fixed segmentation fault caused by missing destructor call on process exit.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ldap-auth-advanced**: Fixed an issue where binary string was truncated at the first null character.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Vault**: Updated the AWS Vault supported regions list to the latest.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Added a new feature to invalidate the admin's or the developer's related session while changing the password.\n",
        "type": "feature",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "3.4.3.16": {
    "kong": [],
    "kong-ee": [
      {
        "message": "Bumped libxml2 to 2.11.9 for CVE-2024-40896",
        "type": "dependency",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "3.4.3.15": {
    "kong": [
      {
        "message": "Bumped lua-kong-nginx-module from 0.8.1 to 0.8.2.",
        "type": "dependency",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "Fixed an issue that certificate entity configured with vault reference may not get refreshed on time when initial with an invalid string.",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "3.4.3.14": {
    "kong": [
      {
        "message": "Fixed an issue where the workspace id was not included in the plugin config in the plugins iterator.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "fix vault initialization by postponing vault reference resolving on init_worker",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "Fixed an issue where using Hashicorp Vault AppRole authentication with a secret ID file would fail to read the secret ID.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**mTLS-auth**: Fixed an issue where a 500 error occurs when the configuration changes with the mTLS plugin enabled.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Fixed an issue where counters of the overriding consumer groups didn't fetched when the window_size is different and the workspace is non-default.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**rate-limiting-advanced**: Fixed an issue where multiple plugin instances sharing the same namespace enforced consumer groups and different `window_size`s were used in the consumer group overriding configs, then the rate limiting of some consumer groups would fall back to local strategy. Now every plugin instance sharing the same namespace can set different `window_size`.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**graphql-rate-limiting-advanced**: Fixed an issue where the plugin may fail to authenticate to Redis correctly with vault-referenced redis configuration.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**rate-limiting-advanced**: Fixed an issue where the plugin may fail to authenticate to Redis correctly with vault-referenced redis configuration.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Fixed an issue where RLA stores long expiration time items cause `no memory` errors.",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": []
  },
  "3.4.3.13": {
    "kong": [
      {
        "message": "Bumped `LPEG` from `1.0.2` to `1.1.0` to keep the version consistent accross all active branches. The version bump includes fixes like UTF-8 ranges, Larger limit for rules and matches, accumulator capture, etc.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-aws to 1.5.3 to fix a bug related to STS regional endpoint.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the Vault secret cache got refreshed during `resurrect_ttl` time and could not be fetched by other workers.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Moved internal Unix sockets to a subdirectory (`sockets`) of the Kong prefix.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Shortened names of internal Unix sockets to avoid exceeding the socket name limit.",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "Bumped lua-resty-azure to 1.6.1 to fix a GET request build issue",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where luarocks-admin was not available in /usr/local/bin.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**AWS-Lambda**: Added support for a configurable STS endpoint with the new configuration field `aws_sts_endpoint_url`.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Added support for AWS IAM role assuming in AWS IAM Database Authentication, with new configuration fields: \"pg_iam_auth_assume_role_arn\", \"pg_iam_auth_role_session_name\", \"pg_ro_iam_auth_assume_role_arn\", and \"pg_ro_iam_auth_role_session_name.\"\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added support for a configurable STS endpoint for RDS IAM Authentication, with new configuration fields: `pg_iam_auth_sts_endpoint_url` and `pg_ro_iam_auth_sts_endpoint_url`.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added support for a configurable STS endpoint for AWS Vault. This can either be configured by `vault_aws_sts_endpoint_url` as a global configuration, or `sts_endpoint_url` on a custom AWS vault entity.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**OpenTelemetry**: Fixed an issue where header_type being nil caused a concatenation error.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Fixed an issue where the sync timer may stop working due to race condition.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed a bug where analytics can break when the value type of rate-limiting related headers are not integer",
        "scope": "Core",
        "type": "bugfix"
      },
      {
        "message": "Made the RPM package relocatable with the default prefix set to `/`.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Fix an issue where the IAM auth token was not refreshed when the underlying AWS credential expired.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Rate Limiting Advanced**: Enhance the resolution of RLA sliding window weight",
        "type": "feature",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": []
  },
  "3.4.3.12": {
    "kong": [
      {
        "message": "The kong.logrotate configuration file will no longer be overwritten during upgrade.\nThis change will present an additional prompt for debian users upgrading via apt and .deb packages.\nTo accept the defaults provided by Kong in the package use the following command `DEBIAN_FRONTEND=noninteractive apt upgrade kong-enterprise-edition_3.4.3.11_arm64.deb`\ndepending on your architecture and the version upgrading to.\n",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "Fixed a bug where a new data plane couldn't resolve a Vault reference after the first configuration push. This was happening due to issues with license pre-loading.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Rate Limiting Advanced**: Fixed an issue where if the `window_size` in the consumer group overriding config is different from the `window_size` in the default config, the rate limiting of that consumer group would fall back to local strategy.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Backported image signing and provenance generation to 3.4.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**ldap-auth-advanced**: Fixed an issue where an exception will be thrown when ldap search fails",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Made the RPM package relocatable.",
        "type": "dependency",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "3.4.3.11": {
    "kong": [
      {
        "message": "Reverted DNS client to original behaviour of ignoring ADDITIONAL SECTION in DNS responses.",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-ee": [],
    "kong-manager-ee": []
  },
  "3.4.3.10": {
    "kong": [
      {
        "message": "Bumped lua-resty-events to 0.2.1",
        "type": "dependency",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "The `/<workspace>/admins` endpoint was used to return admins associated with a workspace based on their assigned RBAC roles. It has been fixed to return admins according to the workspace they belong to.",
        "type": "bugfix",
        "scope": "Admin API"
      }
    ],
    "kong-manager-ee": []
  },
  "3.4.3.9": {
    "kong": [
      {
        "message": "Bumped lua-resty-azure from 1.4.1 to 1.5.0, to refine some error logging.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-healthcheck from 1.6.4 to 1.6.5, to reduce active healthcheck timer usage.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where cluster_cert or cluster_ca_cert is inserted into lua_ssl_trusted_certificate before being base64 decoded.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "fix a bug that the `host_header` attribute of upstream entity can not be set correctly in requests to upstream as Host header when retries to upstream happen.",
        "scope": "Core",
        "type": "bugfix"
      }
    ],
    "kong-ee": [
      {
        "message": "Add LHS brackets filtering to search fields",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "Built-in RBAC roles for admins (`admin` under the default workspace and `workspace-admin` under non-default workspaces) now disallow CRUD actions to `/groups` and `/groups/*` endpoints.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Audit Log:** Add request_timestamp to audit_objects.",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "**Audit Log**: Add before / after aliases for LHS Brackets filters.",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "**Audit Log:** Allow audit_requests and audit_objects to be filtered by request_timestamp.",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "**Vitals**: Fixed a bug that each data plane connecting to the control plane would trigger the control plane to create a redundant table rotater timer.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "The workspace listing API only shows workspaces that the current user has endpoints associated with",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "**OpenID Connect**: Fixed a bug where anonymous consumers may be cached as nil under a certain condition.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Improved that timer spikes do not occur when there is network instability with the central data store.",
        "type": "performance",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": []
  },
  "3.4.3.8": {
    "kong": [
      {
        "message": "Improve the robustness of lua-cjson when handling unexpected input. \n",
        "type": "dependency",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "**Audit Log:** change default ordering of audit_requests to sorted by request_timestamp descending",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "Bumped `kong-lua-resty-kafka` to `0.19` for supporting TCP socket keepalive.\n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Fix an issue where HTTP 500 errors were returned when paginating and sorting by timestamp fields\n(e.g., `created_at`).\n",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "**OAS Validation**, **WebSocket Size Limit**, **WebSocket Validator**, **XML Threat Protection**:\npriorities have been updated to prevent collisions between plugins.\nThe relative priority (and the order of execution) of bundled plugins remained unchanged.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Refactored `kong/tools/public/rate-limiting` to keep the original interfaces unchanged (backward compatibility) and extend a new interface `new_instance` to provide isolation between different plugins. If you are using custom Rate Limiting plugins based on this library, please update the initialization code to the new format like 'local ratelimiting = require(\"kong.tools.public.rate-limiting\").new_instance(\"custom-plugin-name\")'. The old interface will be removed in the upcoming major release.",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": []
  },
  "3.4.3.7": {
    "kong": [
      {
        "message": "Bump lua-protobuf to 0.5.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**PDK:** fix kong.request.get_forwarded_port to always return a number which was caused by an incorrectly\nstored string value in ngx.ctx.host_port.\n",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "Fixed a problem that in hybrid DP mode a certificate entity configured with vault reference may not get refreshed on time",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "Fix an issue that delay validate of event_hooks to avoid unregistered event_hooks in hybrid mode\n",
        "type": "bugfix",
        "scope": "Clustering"
      }
    ],
    "kong-manager-ee": []
  },
  "3.4.3.6": {
    "kong": [
      {
        "message": "**ACME**: Fixed an issue where the certificate was not successfully renewed during ACME renewal.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fix an issue where an external plugin (Go, Javascript, or Python) would fail to\napply a change to the plugin config via the Admin API.\n",
        "type": "bugfix",
        "scope": "Configuration"
      }
    ],
    "kong-ee": [
      {
        "message": "Bumped lua-kong-nginx-module to 0.8.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bump `lua-resty-luasocket` to `1.1.2` for fixing [luasocket#427](https://github.com/lunarmodules/luasocket/issues/427).\n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**DegraphQL**: Fixed an issue where GraphQL variables were not being correctly parsed and coerced into their defined types.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAS-Validation**: Add a new field `api_spec_encoded` to indicate whether the `api_spec` is URI-Encoded.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OpenTelemetry**: Improved robustness of parsing for short trace IDs.",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "**Rate Limiting Advanced**: Fixed an issue where RLA and other similar plugins using the `rate-limiting` library, when used together, would interfere with each other and thus fail to synchronize counter data to the central data store",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "Added support for Azure vault.",
        "type": "feature",
        "githubs": [
          3328
        ],
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where logging in fails when the Developer Portal configuration \"Developer Meta Field\" contains characters outside the Latin1 range.",
        "type": "bugfix",
        "githubs": [
          3309
        ],
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where admin account profile page returns 404 error if `admin_gui_path` is not a slash.",
        "type": "bugfix",
        "githubs": [
          3327
        ],
        "scope": "Core"
      }
    ]
  },
  "3.4.3.5": {
    "kong": [
      {
        "message": "Add a new endpoint `/schemas/vaults/:name` to retrieve the schema of a vault.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Reuse match context between requests to avoid frequent memory allocation/deallocation",
        "type": "performance",
        "scope": "Core"
      },
      {
        "message": "Bumped atc-router from 1.2.0 to 1.6.0",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-openssl to 1.2.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "now TLSv1.1 and lower is by default disabled in OpenSSL 3.x",
        "type": "feature",
        "scope": "Configuration"
      },
      {
        "message": "Header value matching (`http.headers.*`) in `expressions` router flavor are now case sensitive.\nThis change does not affect on `traditional_compatible` mode\nwhere header value match are always performed ignoring the case.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "The expressions route now supports the `!` (not) operator, which allows creating routes like\n`!(http.path =^ \"/a\")` and `!(http.path == \"/a\" || http.path == \"/b\")`\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "update file permission of kong.logrotate to 644",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Vault**: do not use incorrect (default) workspace identifier when retrieving vault entity by prefix",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**forward-proxy**: fallback to the non-streaming proxy when the request body has already been read",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Bumped default values of `nginx_http_keepalive_requests` and `upstream_keepalive_max_requests` to `10000`.",
        "type": "performance",
        "scope": "Configuration"
      },
      {
        "message": "**Opentelemetry**: increase queue max batch size to 200",
        "type": "performance",
        "scope": "Plugin"
      },
      {
        "message": "**Opentelemetry**: fix otel sampling mode lua panic bug when http_response_header_for_traceid option enable",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Support observing the time consumed by some components in the given request.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Plugins can now implement `Plugin:configure(configs)` function that is called whenever there is a change in plugin entities. An array of current plugin configurations is passed to the function, or `nil` in case there is no active configurations for the plugin.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Set security level of gRPC's TLS to 0 when ssl_cipher_suite is set to old",
        "type": "bugfix",
        "scope": "Configuration"
      },
      {
        "message": "Expressions route in `http` and `stream` subsystem now have stricter validation.\nPreviously they share the same validation schema which means admin can configure expressions\nroute using fields like `http.path` even for stream routes. This is no longer allowed.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Support `http.path.segments.len` and `http.path.segments.*` fields in the expressions router\nwhich allows matching incoming (normalized) request path by individual segment or ranges of segments,\nplus checking the total number of segments.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "`net.src.*` and `net.dst.*` match fields are now accessible in HTTP routes defined using expressions.\n",
        "type": "feature",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "add support for Azure's KeyVault Secrets Engine.",
        "type": "feature",
        "scope": "PDK"
      },
      {
        "message": "Mark the `introspection_headers_values` in the `openid-connect` plugin as an encrypted and referenceable field",
        "type": "bugfix",
        "plugins": [
          "openid-connect"
        ],
        "scope": "Plugin"
      },
      {
        "message": "aws vault backend use credential provider chain and support role assuming",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Allow to specify azure_vault config options in the `kong.conf` file.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Bump `kong-lua-resty-kafka` to `0.18`.\n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "In OpenSSL 3.2, the default SSL/TLS security level has been changed from 1 to 2. Which means security level set to 112 bits of security. As a result RSA, DSA and DH keys shorter than 2048 bits and ECC keys shorter than 224 bits are prohibited. In addition to the level 1 exclusions any cipher suite using RC4 is also prohibited. SSL version 3 is also not allowed. Compression is disabled.",
        "type": "Breaking Change",
        "scope": "Core"
      },
      {
        "message": "**CORS**: Support the `Access-Control-Request-Private-Network` header in crossing-origin pre-light requests",
        "type": "feature",
        "scope": "Plugin",
        "jiras": [
          "FTI-5258"
        ]
      },
      {
        "message": "reduce message push error log when cluster_telemetry_endpoint config is disabled",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "HashiCorp Vault backend now supports using Approle authentication method",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**jwt-signer**: support for consumer group scoping by using pdk `kong.client.authenticate` function",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ldap-auth-advanced**: support for consumer group scoping by using pdk `kong.client.authenticate` function",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Allow OSS features to continue working with an expired license and configured Kong Enterprise features to continue operating in read-only mode. Kong Gateway now logs a daily critical message when a license is expired and within the 30 days grace period.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**mtls-auth**: Add `default_consumer` option that allows a default consumer to be used when the client certificate is valid but does not match any existing consumers.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**oauth2-introspection**: support for consumer group scoping by using pdk `kong.client.authenticate` function",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**openid-connect**: support for consumer group scoping by using pdk `kong.client.authenticate` function",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fix a bug that when an entity is deleted, the rbac_role_entities records of its cascaded entities are not deleted.",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "Allow using RBAC token to authenticate while using group mapping feature (e.g., OIDC, LDAP) with Kong Manager, and also fix some issue with the group mapping feature.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**Rate Limiting Advanced**: Falling back to local strategy if sync_rate = 0 when redis goes down",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: The plugin now creates counter syncing timers when being executed instead of being created to reduce some meaningless error logs",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: fix an issue where if `sync_rate` is changed from a value greater than `0` to `0`, the namespace will be cleared unexpectedly",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: fix some timer-related issues where the counter syncing timer can't be created or destroyed properly",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**saml**: support for consumer group scoping by using pdk `kong.client.authenticate` function",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "fixed the display of the remaining days of license expireation date",
        "type": "bugfix",
        "githubs": [
          3269
        ],
        "scope": "Core"
      },
      {
        "message": "Conceal the user token input field while editing an RBAC user.",
        "type": "bugfix",
        "githubs": [
          3264
        ],
        "scope": "Core"
      }
    ]
  },
  "3.4.3.4": {
    "kong": [
      {
        "message": "Bumped OpenSSL from 3.1.4 to 3.2.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bump resty-openssl from 0.8.25 to 1.2.0",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "fix error data loss caused by weakly typed of function in declarative_config_flattened function",
        "type": "bugfix",
        "scope": "Configuration"
      }
    ],
    "kong-ee": [
      {
        "message": "bump lua-resty-aws to 1.3.6",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Resilience support for homogeneous Dataplane deployments. Now Dataplanes can act as importer and exporter at the same time, and Kong will try to control the concurrency when export the config.",
        "type": "feature",
        "scope": "Clustering"
      },
      {
        "message": "fix a bug where workload identity does not work for dataplane resilience",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fix a bug that GCP backend vault hides the error message when secrets cannot be fetched",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Ldap-auth-advanced**: fix some cache-related issues which cause groups_required to not work properly and unexpected return codes after a non-200 response",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fix Ubuntu `18.04` manifest with OpenSSL `3.2.1` bump.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Adds support for namespaced authentication and user defined auth path when using HCV vault on Kubernetes.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**ldap-auth-advanced**: fix an issue where if the credential is encoded with no username kong will throw an error and return 500",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fix a bug that caused spans to not be instrumented with http.status_code when the request was not proxied to an upstream.",
        "type": "bugfix",
        "scope": "Core"
      }
    ]
  },
  "3.4.3.3": {
    "kong": [
      {
        "message": "add gateway edition to the root endpoint of the admin api",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "Build deb packages for Debian 12. The debian variant of kong docker image is built using Debian 12 now.",
        "type": "feature",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "Fixed an rbac issue that required adding missing endpoints to all workspaces.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Add CONTROLLER_CERTIFICATE_FILE and CONTROLLER_CERTIFICATE_DIR env config for AppDynamics plugin to use self-signed certificate",
        "type": "feature",
        "plugins": [
          "app-dynamics"
        ],
        "scope": "Plugin"
      },
      {
        "message": "Bump kong-redis-cluster to '1.5.3'",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "bump lua-resty-healthcheck to 1.6.4",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**OAS-Validation**: Fixed an issue that the cookie parameters are not being validated.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Implement relative URLs for portal root path redirection to prevent erroneous redirections to incorrect domains or protocols",
        "type": "bugfix",
        "scope": "Portal"
      },
      {
        "message": "disallow admins or RBAC users to update their own roles",
        "type": "bugfix",
        "scope": "Admin API"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "fixed an issue dynamic ordering dropdown list does not show custom plugins.",
        "type": "bugfix",
        "githubs": [
          3146
        ],
        "scope": "Core"
      },
      {
        "message": "fixed an issue the role of the current workspace can't be created by the role `workspace-super-admin`'s admin.",
        "type": "bugfix",
        "githubs": [
          3128
        ],
        "scope": "Core"
      }
    ]
  },
  "3.4.3.2": {
    "kong": [],
    "kong-ee": [
      {
        "message": "**Ldap-auth-advanced**: support decoding non-standard asn1 integer and enumerated encoded with redundant leading padding",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Optimize the performance of querying plugins when accessing the application_services/application_instances endpoints.",
        "type": "bugfix",
        "scope": "Admin API"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "Fix an issue where clicking the spec upload input doesn't trigger file selection.",
        "type": "bugfix",
        "githubs": [
          3098
        ],
        "scope": "Core"
      },
      {
        "message": "Fix an issue where some services are missing from the Dev Portal's application list in Kong Manager.",
        "type": "bugfix",
        "githubs": [
          3097
        ],
        "scope": "Core"
      }
    ]
  },
  "3.4.3.1": {
    "kong": [
      {
        "message": "**AWS-Lambda**: let plugin-level proxy take effect on EKS IRSA credential provider",
        "type": "bugfix",
        "scope": "Plugin",
        "prs": [
          11551
        ],
        "jiras": [
          "FTI-5242"
        ]
      },
      {
        "message": "Bumped lua-resty-aws from 1.3.1 to 1.3.2",
        "type": "dependency",
        "prs": [
          11551
        ],
        "jiras": [
          "FTI-5242"
        ],
        "scope": "Core"
      },
      {
        "message": "the AWS-Lambda plugin has been refactored by using `lua-resty-aws` as an underlying AWS library. The refactor simplifies the AWS-Lambda plugin code base and adding support for multiple IAM authenticating scenarios.",
        "type": "feature",
        "plugins": [
          "aws-lambda"
        ],
        "scope": "Plugin"
      },
      {
        "message": "Cache the AWS lambda service by those lambda service related fields",
        "type": "bugfix",
        "plugins": [
          "aws-lambda"
        ],
        "scope": "Plugin"
      },
      {
        "message": "Bumped OpenResty from 1.21.4.1 to 1.21.4.3",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bump resty-openssl from 0.8.25 to 1.0.2",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bump lua-resty-healthcheck from 1.6.2 to 1.6.3",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Fix a bug related to data interference between requests in the kong.log.serialize function.",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "print error message correctly when plugin fails",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "fix ldoc intermittent failure caused by LuaJIT error.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**tcp-log**: fix an issue of unnecessary handshakes when reusing TLS connection",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fix Vault's try function to avoid using semaphore in non-yieldable phases.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-aws from 1.2.3 to 1.3.0",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped lua-resty-aws from 1.3.2 to 1.3.5",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bump lua-kong-nginx-module from 0.6.0 to 0.8.0",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**OAS-Validation**: Fix a bug where the plugin throws a runtime error caused by the ref parameter schema not being dereferenced.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "A unique Request ID is now populated in the error log, access log, error templates, log serializer, and in a new X-Kong-Request-Id header (configurable for upstream/downstream using the `headers` and `headers_upstream` configuration options). \n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "respect custom `proxy_access_log`",
        "type": "bugfix",
        "scope": "Configuration"
      },
      {
        "message": "**Rate Limiting**: fix an issuer where all counters are synced to the same DB at the same rate.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Vault references can be used in Dbless mode in declarative config",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "**OAS Validation**: Fix an issue where valid recursive schemas are always rejected.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Mark the `authorization_value` in the `oauth2-introspection` plugin as an encrypted field",
        "type": "bugfix",
        "plugins": [
          "oauth2-introspection"
        ],
        "scope": "Plugin"
      },
      {
        "message": "Add troubleshooting lua scripts",
        "type": "feature",
        "scope": "CLI Command"
      },
      {
        "message": "**SAML**: adjust the priority of the SAML plugin to 1010 to correct the integration between the SAML plugin and other consumer-based plugins",
        "type": "Breaking Change",
        "scope": "Plugin"
      },
      {
        "message": "Backport troubleshooting tools to 3.4",
        "type": "dependency",
        "scope": "CLI Command"
      },
      {
        "message": "Bump `dns_stale_ttl` default to 1 hour so stale DNS record can be used for longer time in case of resolver downtime.",
        "type": "performance",
        "scope": "Configuration"
      },
      {
        "message": "bump jq to 1.7",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "bump luasec to 1.3.2",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Correctly invalidate caches based on names and ids for Consumer Groups",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fix typo in jwe-decrypt error message",
        "type": "bugfix",
        "plugins": [
          "jwe-decrypt"
        ],
        "scope": "Plugin"
      },
      {
        "message": "Fix an issue where the dataplane's log serializer output has workspace name under Hybrid mode",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Eliminate asynchronous timer in syncQuery() to prevent hang risk",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "The default value of `dns_no_sync` option has been changed to `off`",
        "type": "feature",
        "scope": "Configuration"
      },
      {
        "message": "Fix an issue where the dataplane hostname is `nil` in Vitals under Hybrid mode",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "**Forward-Proxy**: Fixed the issue where request payload is being discarded when payload exceeded the `client_body_buffer_size`.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Mocking**: Fix the issue that path parameter cannot match non-ascii characters.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAS-Validation**: Fixed an issue that the plugin throws a runtime error while validating parameters with AnyType schema and style keyword defined.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAS-Validation**: Fixed an issue that the nullable keyword did not take effect.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAS-Validation**: Fixed an issue that the URI component escaped characters were incorrectly unescaped.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAS Validation**: Fix the issue that path parameter cannot match non-ascii characters.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID-Connect**: update time when calculating token expire",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Openid-Connect**: configurations `scopes`, `login_redirect_uri`, `logout_redirect_uri` can now be referenced as a secret in the Kong Vault",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Openid-Connect**: extend `token_post_args_client` to support injection from headers",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Fixed critical level logs when starting external plugin servers. Those logs cannot be suppressed due to the limitation of OpenResty. We choose to remove the socket availibilty detection feature.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Plugin Server**: fix an issue where every request causes a new plugin instance to be created",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "Fix an issue where unique violation errors were reported while trying to update the user_token\nwith the same value on the same RBAC user.\n",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "Fix when the Dev portal OIDC is enabled, a 500 error is thrown when the administrator login successfully and then retrieves the session",
        "type": "feature",
        "scope": "Plugin",
        "githubs": [
          7390
        ],
        "plugins": [
          "openid-connect"
        ]
      },
      {
        "message": "Update included curl to 8.4.0 & nghttp2 1.57.0",
        "type": "dependency",
        "scope": "CLI Command"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "Fix an issue where the Applications tab was not visible for services under non-default workspaces.",
        "type": "bugfix",
        "githubs": [
          3084
        ],
        "scope": "Core"
      },
      {
        "message": "Fix a known CVE in a dependency by upgrading it to a newer version.",
        "type": "bugfix",
        "githubs": [
          3030
        ],
        "scope": "Core"
      }
    ]
  },
  "3.4.2": {
    "kong": [
      {
        "message": "Apply Nginx patch for detecting HTTP/2 stream reset attacks early (CVE-2023-44487)",
        "type": "bugfix",
        "scope": "Core"
      }
    ]
  },
  "3.4.2.0": {
    "kong": [
      {
        "message": "Bump ngx_wasm_module version to prerelease-0.1.1.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**Opentelemetry**: fix an issue that resulted in traces with invalid parent IDs when `balancer` instrumentation was enabled",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "The default value of `dns_no_sync` option has been changed to `on`",
        "type": "bugfix",
        "scope": "Configuration"
      }
    ],
    "kong-ee": [
      {
        "message": "Add counters such as routes, plugins, licenses, deployment info, etc. to the report component. Also, add a checksum and timestamp to the output.",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "Add troubleshooting tools to container images",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "bump OpenSSL to 3.1.4",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**Openid Connect**: Fix the issue where `using_pseudo_issuer` does not work.",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "Fix an issue where some services were not showing with the exact name or ID under certain circumstances while configuring a route.",
        "type": "bugfix",
        "githubs": [
          2978
        ],
        "scope": "Core"
      }
    ]
  },
  "3.4.1": {
    "kong": [
      {
        "message": "Support HTTP query parameters in expression routes.",
        "type": "feature",
        "scope": "Core",
        "prs": [
          11348
        ],
        "jiras": [
          "KAG-2050",
          "KAG-2289"
        ]
      },
      {
        "message": "Fix several issues in Vault and refactor the Vault code base:\n - Make DAOs to fallback to empty string when resolving Vault references fail\n - Use node level mutex when rotation references\n  - Refresh references on config changes\n - Update plugin referenced values only once per request\n - Pass only the valid config options to vault implementations\n - Resolve multi-value secrets only once when rotating them\n - Do not start vault secrets rotation timer on control planes\n - Re-enable negative caching\n - Reimplement the kong.vault.try function\n - Remove references from rotation in case their configuration has changed",
        "type": "bugfix",
        "scope": "PDK",
        "prs": [
          11402
        ],
        "jiras": [
          "KAG-2273"
        ]
      },
      {
        "message": "**Opentelemetry**: fix an issue that resulted in invalid parent IDs in the propagated tracing headers",
        "type": "bugfix",
        "scope": "Plugin",
        "prs": [
          11468
        ],
        "jiras": [
          "KAG-2281"
        ]
      },
      {
        "message": "Fix a problem that abnormal socket connection will be reused when querying Postgres database.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Tracing: fix an issue that resulted in some parent spans to end before their children due to different precision of their timestamps",
        "type": "bugfix",
        "scope": "PDK",
        "issues": [
          11294
        ]
      },
      {
        "message": "Fix upstream ssl failure when plugins use response handler",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fix an issue that protocol `tls_passthrough` can not work with expressions flavor",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fix incorrect LuaJIT LDP/STP fusion on ARM64 which may sometimes cause incorrect logic",
        "type": "dependency",
        "scope": "Core"
      }
    ]
  },
  "3.4.1.1": {
    "kong-ee": [
      {
        "message": "**SAML**: Reduce severity of 'session was not found' messages to 'info'",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "bump libxml2 from 2.10.3 to 2.11.5",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Apply Nginx patch for detecting HTTP/2 stream reset attacks early (CVE-2023-44487)",
        "type": "bugfix",
        "scope": "Core"
      }
    ]
  },
  "3.4.1.0": {
    "kong": [
      {
        "message": "Fix several issues in Vault and refactor the Vault code base:\n - Make DAOs to fallback to empty string when resolving Vault references fail\n - Use node level mutex when rotation references\n - Refresh references on config changes\n - Update plugin referenced values only once per request\n - Pass only the valid config options to vault implementations\n - Resolve multi-value secrets only once when rotating them\n - Do not start vault secrets rotation timer on control planes\n - Re-enable negative caching\n - Reimplement the kong.vault.try function\n - Remove references from rotation in case their configuration has changed",
        "type": "bugfix",
        "scope": "PDK",
        "prs": [
          11402
        ],
        "jiras": [
          "KAG-2273"
        ]
      },
      {
        "message": "Fix an issue that the TTL of the key-auth plugin didnt work in DB-less and Hybrid mode.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Opentelemetry**: fix an issue that resulted in invalid parent IDs in the propagated tracing headers",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fix a problem that abnormal socket connection will be reused when querying Postgres database.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Tracing: fix an issue that resulted in some parent spans to end before their children due to different precision of their timestamps",
        "type": "bugfix",
        "scope": "PDK",
        "issues": [
          11294
        ]
      },
      {
        "message": "Fix upstream ssl failure when plugins use response handler",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fix an issue that protocol `tls_passthrough` can not work with expressions flavor",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fix incorrect LuaJIT LDP/STP fusion on ARM64 which may sometimes cause incorrect logic",
        "type": "dependency",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "**Openid-Connect**: New field `unauthorized_destroy_session`, which when set to true, we destory the session (delete the user's session cookie) when the request is unauthorized. Default to true. Set to false to preserve the session.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID-Connect**: New field `using_pseudo_issuer`. When set to true, the plugin instance will not discover configuration from the issuer.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**graphql-rate-limiting-advanced**: Fix a bug in the schema validation which prevents from using redis in cluster mode",
        "type": "Breaking Change",
        "scope": "Plugin"
      },
      {
        "message": "mtls-auth should not cache the network failure when doing revocation check",
        "type": "bugfix",
        "plugins": [
          "mtls-auth"
        ],
        "scope": "Plugin"
      },
      {
        "message": "allow the 'start' field be a past time",
        "type": "bugfix",
        "scope": "Plugin",
        "plugins": [
          "canary"
        ]
      },
      {
        "message": "**SAML**: When the redis session storage is incorrectly configured, users now receive a 500 error instead of being redirected endlessly",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fix a keyring issue where a kong node fails to send keyring material when using cluster strategy",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fix a bug that will cause a failure of sending tracing data to datadog when value of x-datadog-parent-id header in requests is a short dec string",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Openid-Connect**: Fix issue on token revocation on logout where the code was revoking refresh token when it was supposed to revoke access token when using the discovered revocation endpoint.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Opentelemetry**: A new value is added to the parameter `header_type`, which allows Kong to inject datadog headers into the headers of requests forwarding to upstream.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "fix rbac retrieve group roles with the group name that type is number.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed critical level logs when starting external plugin servers. Those logs cannot be suppressed due to the limitation of OpenResty. We choose to remove the socket availibilty detection feature.",
        "type": "bugfix",
        "prs": [
          9507
        ],
        "jiras": [
          "KAG-2136"
        ],
        "scope": "Core"
      }
    ]
  },
  "3.3.1.1": {
    "kong": [
      {
        "message": "**Opentelemetry**: fix an issue that resulted in invalid parent IDs in the propagated tracing headers",
        "type": "bugfix",
        "scope": "Plugin",
        "prs": [
          11468
        ],
        "jiras": [
          "KAG-2281"
        ]
      },
      {
        "message": "Fix a problem that abnormal socket connection will be reused when querying Postgres database.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Tracing: fix an issue that resulted in some parent spans to end before their children due to different precision of their timestamps",
        "type": "bugfix",
        "scope": "PDK",
        "prs": [
          11484
        ],
        "jiras": [
          "KAG-2336"
        ],
        "issues": [
          11294
        ]
      },
      {
        "message": "Fix incorrect LuaJIT LDP/STP fusion on ARM64 which may sometimes cause incorrect logic",
        "type": "dependency",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "**SAML**: When the redis session storage is incorrectly configured, users now receive a 500 error instead of being redirected endlessly",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fix a keyring issue where a kong node fails to send keyring material when using cluster strategy",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Apply Nginx patch for detecting HTTP/2 stream reset attacks early (CVE-2023-44487)",
        "type": "bugfix",
        "scope": "Core"
      }
    ]
  },
  "3.2.2.5": {
    "kong-ee": [
      {
        "message": "Applied Nginx patch for early detection of HTTP/2 stream reset attacks. This change is in direct response to the identified vulnerability [CVE-2023-44487](https: //nvd.nist.gov/vuln/detail/CVE-2023-44487).",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a keyring issue where Kong Gateway nodes would fail to send keyring data when using the cluster strategy.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where an abnormal socket connection would be incorrectly reused when querying the PostgreSQL database.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Added a `User=` specification to the systemd unit definition, enabling Kong Gateway to be controlled by systemd again.[#11066](https: //github.com/Kong/kong/pull/11066)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**mTLS Authentication**: Fixed an issue that caused the plugin to cache network failures when running certificate revocation checks.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**SAML**: Users will now receive a 500 error instead of being endlessly redirected when the Redis session storage is incorrectly configured.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Bumped `libxml2` from 2.10.2 to 2.11.5",
        "type": "dependency",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "3.2.2.4": {
    "kong-ee": [
      {
        "message": "**Ubuntu 18.04 support removed** : Support for running Kong Gateway on Ubuntu 18.04 (“Bionic”) is now deprecated, as [Standard Support for Ubuntu 18.04 has ended as of June 2023](https://wiki.ubuntu.com/Releases). Starting with Kong Gateway 3.2.2.4, Kong is not building new Ubuntu 18.04 images or packages, and Kong will not test package installation on Ubuntu 18.04.",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "Amazon Linux 2022 artifacts are renamed to Amazon Linux 2023, based on AWS’s own renaming.",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "CentOS packages are now removed from the release and are no longer supported in future versions.",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "Updated the datafile library to make the SAML plugin work again when Kong is controlled by systemd.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the anonymous report couldn’t be silenced by setting `anonymous_reports=false`.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where a crashing Go plugin server process would cause subsequent requests proxied through Kong to execute Go plugins with inconsistent configurations. The issue only affected scenarios where the same Go plugin is applied to different route or service entities.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**OpenID Connect**: Correctly set the right table key on `log` and `message`.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID Connect**: If an invalid opaque token is provided but verification fails, print the correct error.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting**: The redis rate limiting strategy now returns an error when Redis Cluster is down.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: The control plane no longer attempts to create namespace or synchronize counters with Redis.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Response Transformer Advanced**: Does not load response body when `if_status` does not match.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "`lua-resty-kafka` is bumped from 0.15 to 0.16",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `OpenSSL` from 1.1.1t to 3.1.1",
        "type": "dependency",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "Fixed an issue where the Zipkin plugin prevented users from editing the `static_tags` configuration.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the unavailable Datadog Tracing plugin displayed on the plugin installation page.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where some metrics were missing from the StatsD plugin.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where locale files were not found when using a non-default `admin_gui_path` configuration.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where endpoint permissions for application instances did not work as expected.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where some icons were shown as unreadable symbols and characters.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where users were redirected to pages under the default workspace when clicking links for services or routes of entities residing in other workspaces.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue that failed to redirect OpenID Connect in Kong Manager if it was provided with an incorrect username.",
        "type": "bugfix",
        "scope": "Core"
      }
    ]
  },
  "3.2.2.3": {
    "kong-ee": [
      {
        "message": "Fixed an error with the `/config` endpoint. If `flatten_errors=1` was set and an invalid config was sent to the endpoint, a 500 error was incorrectly returned.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Alpine deprecation reminder:** Kong has announced our intent to remove support for Alpine images and packages later this year. These images and packages are available in 3.2 and will continue to be available in 3.3. We will stop building Alpine images and packages in Kong Gateway 3.4.",
        "type": "deprecation",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "3.2.2.2": {
    "kong-ee": [
      {
        "message": "Fixed the OpenResty `ngx.print` chunk encoding duplicate free buffer issue that led to the corruption of chunk-encoded response data.[#10816](https://github.com/Kong/kong/pull/10816)[#10824](https://github.com/Kong/kong/pull/10824)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed the UDP socket leak in `resty.dns.client` caused by frequent DNS queries.[#10691](https://github.com/Kong/kong/pull/10691)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Rate Limiting Advanced**: Fixed the log flooding issue caused by low `sync_rate` settings.",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": []
  },
  "3.2.2.1": {
    "kong-ee": [
      {
        "message": "Fixed the Dynatrace implementation. Due to a build system issue, Kong Gateway 3.2.x packages prior to 3.2.2.1 didn’t contain the debug symbols that Dynatrace requires.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Alpine deprecation reminder:** Kong has announced our intent to remove support for Alpine images and packages later this year. These images and packages are available in 3.2 and will continue to be available in 3.3. We will stop building Alpine images and packages in Kong Gateway 3.4.",
        "type": "deprecation",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "3.2.2.0": {
    "kong-ee": [
      {
        "message": "In Kong 3.2.1.0 and 3.2.1.1, `alpine` and `ubuntu` ARM64 artifacts incorrectly handled HTTP/2 requests, causing the protocol to fail. These artifacts have been removed.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Added the default logrotate file `/etc/logrotate.d/kong-enterprise-edition`. This file was missing in all 3.x versions of Kong Gateway prior to this release.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**SAML**: The SAML plugin now works on read-only file systems.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**SAML**: The SAML plugin can now handle the field `session_auth_ttl` (removed since 3.2.0.0).",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Datadog Tracing plugin: We found some late-breaking issues with the Datadog Tracing plugin and elected to remove it from the 3.2 release. We plan to add the plugin back with the issues fixed in a later release.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Due to changes in GPG keys, using yum to install this release triggers a `Public key for kong-enterprise-edition-3.2.1.0.rhel7.amd64.rpm is not installed` error. The package _is_ signed, however, it’s signed with a different (rotated) key from the metadata service, which triggers the error in yum. To avoid this error, manually download the package from and install it.",
        "type": "known-issues",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "3.1.1.6": {
    "kong-ee": [
      {
        "message": "Applied Nginx patch for early detection of HTTP/2 stream reset attacks. This change is in direct response to the identified vulnerability [CVE-2023-44487](https://nvd.nist.gov/vuln/detail/CVE-2023-44487).",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Bumped `libxml2` from 2.10.2 to 2.11.5",
        "type": "dependency",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "3.1.1.5": {
    "kong-ee": [
      {
        "message": "The Redis strategy of Rate Limiting now catches connection failures.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added the parameter `admin_auto_create` for automatically creating a Kong admin.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Kong Manager supports the `POST` response method for OIDC based authentication",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue with the plugin iterator where sorting would become mixed up when dynamic reordering was applied. This fix ensures proper sorting behavior in all scenarios.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where `resty.dns.client` leaked UDP sockets.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a bug where setting `anonymous_reports=false` would not silence anonymous reports.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue with hybrid mode where vitals and analytics could not communicate through the cluster telemetry endpoint.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed the HTTP2 request handle in ARM artifacts.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed the OpenResty `ngx.print` chunk encoding duplicate free buffer issue that led to the corruption of chunk-encoded response data. [#10816](https://github.com/Kong/kong/pull/10816)[#10824](https://github.com/Kong/kong/pull/10824)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where a crashing Go plugin server process would cause subsequent requests proxied through Kong to execute Go plugins with inconsistent configurations. The issue only affects scenarios where the same Go plugin is applied to different route or service entities.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed the Dynatrace implementation.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Request Transformer Advanced**: Fixed an issue that was causing some requests to be proxied with the wrong query parameters.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Response Transformer Advanced**: Fixed an issue where large decimals were rounded when the plugin was being used.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Fixed an issue where the control plane was trying to sync the rate-limiting-advanced counters with Redis.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Fixed an issue where the `rl cluster_events` broadcasted the wrong data in traditional cluster mode.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Bumped `OpenSSL` from 1.1.1t to 3.1.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped`lua-resty-openssl` from 0.8.15 to 0.8.22",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lua-resty-kafka` from 0.15 to 0.16",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**Oauth2**: Fixed a bug that `refresh_token` could be shared across instances.",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": []
  },
  "3.1.1.4": {
    "kong-ee": [
      {
        "message": "Kong Manager with OIDC: Added the configuration option[`admin_auto_create`](https://docs.konghq.com/gateway/latest/kong-manager/auth/oidc/mapping/) to enable or disable automatic admin creation. This option is `true` by default.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Fixed the UDP socket leak in `resty.dns.client` caused by frequent DNS queries.[#10691](https://github.com/Kong/kong/pull/10691)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Hybrid mode: Fixed an issue where Vitals/Analytics couldn’t communicate through the cluster telemetry endpoint.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where `alpine` and `ubuntu` ARM64 artifacts incorrectly handled HTTP/2 requests, causing the protocol to fail.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed the OpenResty `ngx.print` chunk encoding duplicate free buffer issue that led to the corruption of chunk-encoded response data.[#10816](https://github.com/Kong/kong/pull/10816)[#10824](https://github.com/Kong/kong/pull/10824)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed the Dynatrace implementation. Due to a build system issue, Kong Gateway 3.1.x packages prior to 3.1.1.4 didn’t contain the debug symbols that Dynatrace requires.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Request Transformer Advanced**: Fixed an issue that was causing some requests to be proxied with the wrong query parameters.",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "Fixed configuration fields for the StatsD plugin: \n- Added missing metric fields: `consumer_identifier`, `service_identifier`, and `workspace_identifier`.\n- Removed the non-existent `custom_identifier` field.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the `Copy JSON` for a plugin didn’t copy the full plugin configuration.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the Zipkin plugin didn’t allow the addition of `static_tags` through the Kong Manager UI.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Added missing default values to the Vault configuration page.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed the broken Konnect link in free mode banners.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "OIDC authentication issues: \n- The `/auth` endpoint, used by Kong Manager for OIDC authentication, now correctly supports the HTTP POST method.\n- Fixed an issue with OIDC authentication in Kong Manager, where the default roles (`workspace-super-admin`, `workspace-read-only`, `workspace-portal-admin`, and `workspace-admin`) were missing from any newly created workspace.\n- Fixed an issue where users with newly registered Dev Portal accounts created through OIDC were unable to log into Dev Portal until the Kong Gateway container was restarted. This happened when `by_username_ignore_case` was set to `true`, which incorrectly caused consumers to always load from cache.",
        "type": "bugfix",
        "scope": "Core"
      }
    ]
  },
  "3.1.1.3": {
    "kong-ee": [
      {
        "message": "Fixed the accidental removal of the `ca-certificates` dependency from packages and images. This prevented SSL connections from using common root certificate authorities.",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "3.1.1.2": {
    "kong-ee": [
      {
        "message": "**Dev Portal** : The Dev Portal API now supports an optional `fields` query parameter on the `/files` endpoint. This parameter lets you specify which file object fields should be included in the response.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "When `router_flavor` is `traditional_compatible`, verify routes created using the Expression router instead of the traditional router to ensure created routes are actually compatible.[#10088](https://github.com/Kong/kong/pull/10088): ",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "`kong migrations up` now reports routes that are incompatible with the 3.0 router and stops the migration progress so that admins have a chance to adjust them.: ",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where regexes generated in inso would not work in Kong Gateway.: ",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Bumped `atc-router` to `1.0.2` to address the potential worker crash issue.[#9927](https://github.com/Kong/kong/pull/9927): ",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where Vitals data was not showing up after a license was deployed using the `/licenses` endpoint. Kong Gateway now triggers an event that allows the Vitals subsystem to be reinitialized during license preload.: ",
        "type": "bugfix",
        "scope": "hybrid-mode"
      },
      {
        "message": "Fixed an issue where the forward proxy between data planes and the control plane didn’t support the telemetry port `8006`.: ",
        "type": "bugfix",
        "scope": "hybrid-mode"
      },
      {
        "message": "Reverted the removal of WebSocket protocol support for configuration sync. Backwards compatibility with 2.8.x.x data planes has been restored. [#10067](https://github.com/Kong/kong/pull/10067): ",
        "type": "bugfix",
        "scope": "hybrid-mode"
      },
      {
        "message": "**Datadog**,**OpenTelemetry**, and **StatsD**: Fixed an issue in these plugins’ batch queue processing, where metrics would be published multiple times. This caused a memory leak, where memory usage would grow without limit.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Fixed an issue with the `local` strategy, which was not working correctly when `window_size` was set to `fixed`, and the cache would expire while the window was still valid.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAS Validation**: Added the OAS Validation plugin back into the bundled plugins list. The plugin is now available by default with no extra configuration necessary through `kong.conf`.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAS Validation**: Fixed an issue where the plugin returned the wrong error message when failing to get the path schema spec.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAS Validation**: Fixed a `500` error that occurred when the response body schema had no content field.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**mTLS Authentication**: Fixed an issue where the plugin used the old route caches after routes were updated.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Support for the `/vitals/reports/:entity_type` endpoint is deprecated. Use one of the following endpoints from the Vitals API instead:: : \n- For `/vitals/reports/consumer`, use `/{workspace_name}/vitals/status_codes/by_consumer` instead\n- For `/vitals/reports/service`, use `/{workspace_name}/vitals/status_codes/by_service` instead\n- For `/vitals/reports/hostname`, use `/{workspace_name}/vitals/nodes` instead\n\nSee the [Vitals documentation](https://docs.konghq.com/gateway/latest/kong-enterprise/analytics/#vitals-api) for more detail.",
        "type": "deprecation",
        "scope": "Core"
      },
      {
        "message": "The `ca-certificates` dependency is missing from packages and images. This prevents SSL connections from using common root certificate authorities.: ",
        "type": "known-issues",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "Fixed an issue where Kong Manager would occasionally log out while redirecting to other pages or refreshing the page when OpenID Connect was used as the authentication method.: ",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where `404 Not Found` errors were triggered while updating the service, route, or consumer bound to a scoped plugin.: ",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where admins with the permission `['create'] /services/*/plugins` couldn’t create plugins under a service.: ",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where viewing a consumer group in any workspace other than `default` would cause a `404 Not Found` error.: ",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed issues with the plugin list: \n- Added missing icons and categories for the TLS Handshake Modifier and TLS Metadata Headers plugins.\n- Removed entries for the following deprecated plugins: Kubernetes Sidecar Injector, Collector, and Upstream TLS.\n- Removed Apache OpenWhisk plugin from Kong Manager. This plugin must be [installed manually via LuaRocks](/plugins/openwhisk/).\n- Removed the internal-only Konnect Application Auth plugin.",
        "type": "bugfix",
        "scope": "Core"
      }
    ]
  },
  "3.0.1.0": {
    "kong-ee": [
      {
        "message": "**Request Transformer Advanced**: Values stored in `key:value` pairs in this plugin’s configuration are now referenceable, which means they can be stored as [secrets](https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/) in a vault.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Unpinned the version of `alpine` used in the `kong/kong-gateway` Docker image. Previously, the version was pinned to 3.10, which was creating outdated `alpine` builds.: ",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue with how Kong initializes `resty.events`. The code was previously using `ngx.config.prefix()` to determine the listening socket path to provide to the resty.events module. This caused breakage when Nginx was started with a relative path prefix. This meant that you couldn’t start 3.0.x with the same default configuration as 2.8.x.: ",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue with secret management references for HashiCorp Vault. By default, Kong passes secrets to the Nginx using environment variables when using `kong start`. Nginx was being started directly without calling `kong start`, so the secrets were not available at initialization. [#9478](https://github.com/Kong/kong/pull/9478): ",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed the Amazon Linux RPM installation instructions.: ",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "Removed the endpoint `all_routes` from configurable RBAC endpoint permissions. This endpoint was erroneously appearing in the endpoints list, and didn’t configure anything.: ",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue that allowed unauthorized IDP users to log in to Kong Manager. These users had no access to any resources in Kong Manager, but were able to go beyond the login screen.: ",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where, in an environment with a valid Enterprise license, admins with no access to the `default` workspace would see a message prompting them to upgrade to Kong Enterprise.: ",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed pagination issues with Kong Manager tables.: ",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed broken `Learn more` links.: ",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue with group to role mapping, where it didn’t support group names with spaces.: ",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed the Cross Site Scripting (XSS) security vulnerability in the Kong Manager UI.: ",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an RBAC issue where permissions applied to specific endpoints (for example, an individual service or route) were not reflected in the Kong Manager UI.: ",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Removed New Relic from Kong Manager. Previously, `VUE_APP_NEW_RELIC_LICENSE_KEY` and`VUE_APP_SEGMENT_WRITE_KEY` were being exposed in Kong Manager with invalid values.: ",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Removed the action dropdown menu on service and route pages for read-only users.: ",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed the **Edit Configuration** button for Dev Portal applications.: ",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an RBAC issue where the roles page listed deleted roles.: ",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the orphaned roles would remain after deleting a workspace and cause the **Teams** \\> **Admins** page to break.: ",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Added the missing **Copy JSON** button for plugin configuration.: ",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the **New Workspace** button on the global workspace dashboard wasn’t clickable on the first page load.: ",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Removed the ability to add multiple documents per service from the UI. Each service only supports one document, so the UI now reflects that.: ",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "The Upstream Timeout plugin now has an icon and is part of the Traffic Control category.: ",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an error that would occur when attempting to delete ACL credentials from the consumer credentials list. This happened because the name of the plugin, `acl`, and its endpoint, `/acls`, don’t match.: ",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a caching issue with Dev Portal, where enabling or disabling the Dev Portal for a workspace wouldn’t change the Kong Manager menu.: ",
        "type": "bugfix",
        "scope": "Core"
      }
    ]
  },
  "3.0.0.0": {
    "kong-ee": [
      {
        "message": "Kong Gateway now supports [dynamic plugin ordering](https://docs.konghq.com/gateway/3.0.x/kong-enterprise/plugin-ordering/). You can change a plugin’s static priority by specifying the order in which plugins run. This lets you run plugins such as `rate-limiting` before authentication plugins.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Kong Gateway now offers a FIPS package. The package replaces the primary library, OpenSSL, with [BoringSSL](https://boringssl.googlesource.com/boringssl/), which at its core uses the FIPS 140-2 compliant BoringCrypto for cryptographic operations.\n\nTo enable FIPS mode, set [`fips`](https://docs.konghq.com/gateway/3.0.x/reference/configuration/#fips) to `on`. FIPS mode is only supported in Ubuntu 20.04.\n\n{:.info}\n> **Note** : The Kong Gateway FIPS package is not currently compatible with SSL connections to PostgreSQL.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Kong Gateway now includes WebSocket validation functionality. Websockets are a type of persistent connection that works on top of HTTP.\n\nPreviously, Kong Gateway 2.x supported limited WebSocket connections, where plugins only ran during the initial connection phase instead of for each frame. Now, Kong Gateway provides more control over WebSocket traffic by implementing plugins that target WebSocket frames.\n\nThis release includes:\n\n- [Service](https://docs.konghq.com/gateway/3.0.x/admin-api/#service-object) and [route](https://docs.konghq.com/gateway/3.0.x/admin-api/#route-object) support for `ws` and `wss` protocols\n- Two new plugins: [WebSocket Size Limit](/plugins/websocket-size-limit/) and [WebSocket Validator](/plugins/websocket-validator/)\n- WebSocket plugin development capabilities ( **Beta feature** ) \n  - PDK modules: [kong.websocket.client](https://docs.konghq.com/gateway/3.0.x/plugin-development/pdk/kong.websocket.client/) and [kong.websocket.upstream](https://docs.konghq.com/gateway/3.0.x/plugin-development/pdk/kong.websocket.upstream/)\n  - [New plugin handlers](https://docs.konghq.com/gateway/3.0.x/plugin-development/custom-logic/#websocket-plugin-development)\n\nLearn how to develop WebSocket plugins with our [plugin development guide](https://docs.konghq.com/gateway/3.0.x/plugin-development/custom-logic/#websocket-plugin-development).",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "In this release, Kong Manager ships a with a refactored design and improved user experience.\n\nNotable changes:\n\n- Reworked workspace dashboards, both for specific workspaces and at the multi-workspace level.\n- License metrics now appear at the top of overview pages.\n- Restructured the layout and navigation to make workspace selection a secondary concern.\n- Grayed out portal buttons when you don’t have permissions.\n- Added license level to phone home metrics.\n- Added more tooltips.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "[Secrets management](https://docs.konghq.com/gateway/3.0.x/kong-enterprise/secrets-management/) is now generally available. \n- Added GCP integration support for the secrets manager. GCP is now available as a vault backend.\n- The `/vaults-beta` entity has been deprecated and replaced with the `/vaults` entity.[#8871](https://github.com/Kong/kong/pull/8871)[#9217](https://github.com/Kong/kong/pull/9217)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Kong Gateway now provides slim and UBI images. Slim images are docker containers built with a minimal set of installed packages to run Kong Gateway. From 3.0 onward, Kong Docker images will only contain software required to run the Gateway. This ensures that false positive vulnerabilities don’t get flagged during security scanning.\n\nIf you want to retain or add other dependencies, you can [build custom Kong Docker images](https://docs.konghq.com/gateway/3.0.x/install/docker/build-custom-images/).",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "The base OS for our convenience docker tags (for example, `latest`, `3.0.0.0`, `3.0`) has switched from Alpine to Debian.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added key recovery for keyring encryption. This exposes a new endpoint for the Admin API, [`/keyring/recover`](https://docs.konghq.com/gateway/3.0.x/admin-api/db-encryption/#recover-keyring-from-database), and requires [`keyring_recovery_public_key`](https://docs.konghq.com/gateway/3.0.x/reference/configuration/#keyring_recovery_public_key) to be set in `kong.conf`.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "You can now encrypt declarative configuration files on data planes in DB-less and hybrid modes using [AES-256-GCM](https://www.rfc-editor.org/rfc/rfc5288.html) or [chacha20-poly1305](https://www.rfc-editor.org/rfc/rfc7539.html) encryption algorithms.\n\nSet your desired encryption mode with the [`declarative_config_encryption_mode`](https://docs.konghq.com/gateway/3.0.x/reference/configuration/#declarative_config_encryption_mode) configuration parameter.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "This release introduces a new router implementation: `atc-router`. This router is written in Rust, a powerful routing language that can handle complex routing requirements. The new router can be used in traditional-compatible mode, or use the new expression-based language.\n\nWith the new router, we have:\n\n- Reduced router rebuild time when changing Kong’s configuration\n- Increased runtime performance when routing requests\n- Reduced P99 latency from 1.5s to 0.1s with 10,000 routes\n\nLearn more about the router:\n\n- [Configure routes using expressions](https://docs.konghq.com/gateway/3.0.x/key-concepts/routes/expressions/)\n- [Router Expressions Language reference](https://docs.konghq.com/gateway/3.0.x/reference/expressions-language/language-references/)\n- [#8938](https://github.com/Kong/kong/pull/8938)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Implemented delayed response in stream mode.[#6878](https://github.com/Kong/kong/pull/6878)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added `cache_key` on target entity for uniqueness detection.[#8179](https://github.com/Kong/kong/pull/8179)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Introduced the tracing API, which is compatible with OpenTelemetry API specs, and adds built-in instrumentations.\n\nThe tracing API is intended to be used with a external exporter plugin. Built-in instrumentation types and sampling rate are configurable through the[`opentelemetry_tracing`](https://docs.konghq.com/gateway/3.0.x/reference/configuration/#opentelemetry_tracing) and [`opentelemetry_tracing_sampling_rate`](https://docs.konghq.com/gateway/3.0.x/reference/configuration/#opentelemetry_tracing_sampling_rate) options.[#8724](https://github.com/Kong/kong/pull/8724)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added `path`, `uri_capture`, and `query_arg` options to upstream `hash_on`for load balancing.[#8701](https://github.com/Kong/kong/pull/8701)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Introduced Unix domain socket-based `lua-resty-events` to replace shared memory-based `lua-resty-worker-events`.[#8890](https://github.com/Kong/kong/pull/8890)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Introduced the `table_name` field for entities. This field lets you specify a table name. Previously, the name was deduced by the entity `name` attribute.[#9182](https://github.com/Kong/kong/pull/9182)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added `headers` on active health checks for upstreams.[#8255](https://github.com/Kong/kong/pull/8255)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Target entities using hostnames were resolved when they were not needed. Now when a target is removed or updated, the DNS record associated with it is removed from the list of hostnames to be resolved.[#8497](https://github.com/Kong/kong/pull/8497) [9265](https://github.com/Kong/kong/pull/9265)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Improved error handling and debugging info in the DNS code.[#8902](https://github.com/Kong/kong/pull/8902)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Kong Gateway will now attempt to recover from an unclean shutdown by detecting and removing dangling Unix sockets in the prefix directory.[#9254](https://github.com/Kong/kong/pull/9254)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "A new CLI command, `kong migrations status`, generates the migration status in a JSON file.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Removed the warning for `AAAA` being experimental with `dns_order`.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Kong Gateway does not register unnecessary event handlers on hybrid mode control plane nodes anymore. [#8452](https://github.com/Kong/kong/pull/8452).",
        "type": "feature",
        "scope": "Performance"
      },
      {
        "message": "Use the new timer library to improve performance, except for the plugin server.[#8912](https://github.com/Kong/kong/pull/8912)",
        "type": "feature",
        "scope": "Performance"
      },
      {
        "message": "Increased the use of caching for DNS queries by activating `additional_section` by default.[#8895](https://github.com/Kong/kong/pull/8895)",
        "type": "feature",
        "scope": "Performance"
      },
      {
        "message": "`pdk.request.get_header` has been changed to a faster implementation. It doesn’t fetch all headers every time it’s called.[#8716](https://github.com/Kong/kong/pull/8716)",
        "type": "feature",
        "scope": "Performance"
      },
      {
        "message": "Conditional rebuilding of the router, plugins iterator, and balancer on data planes.[#8519](https://github.com/Kong/kong/pull/8519),[#8671](https://github.com/Kong/kong/pull/8671)",
        "type": "feature",
        "scope": "Performance"
      },
      {
        "message": "Made configuration loading code more cooperative by yielding.[#8888](https://github.com/Kong/kong/pull/8888)",
        "type": "feature",
        "scope": "Performance"
      },
      {
        "message": "Use the LuaJIT encoder instead of JSON to serialize values faster in LMDB.[#8942](https://github.com/Kong/kong/pull/8942)",
        "type": "feature",
        "scope": "Performance"
      },
      {
        "message": "Made inflating and JSON decoding non-concurrent, which avoids blocking and makes data plane reloads faster.[#8959](https://github.com/Kong/kong/pull/8959)",
        "type": "feature",
        "scope": "Performance"
      },
      {
        "message": "Stopped duplication of some events.[#9082](https://github.com/Kong/kong/pull/9082)",
        "type": "feature",
        "scope": "Performance"
      },
      {
        "message": "Improved performance of configuration hash calculation by using `string.buffer` and `tablepool`.[#9073](https://github.com/Kong/kong/pull/9073)",
        "type": "feature",
        "scope": "Performance"
      },
      {
        "message": "Reduced cache usage in DB-less mode by not using the Kong cache for routes and services in LMDB.[#8972](https://github.com/Kong/kong/pull/8972)",
        "type": "feature",
        "scope": "Performance"
      },
      {
        "message": "Added a new `/timers` Admin API endpoint to get timer statistics and worker info.[#8912](https://github.com/Kong/kong/pull/8912)[#8999](https://github.com/Kong/kong/pull/8999)",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "The `/` endpoint now includes plugin priority.[#8821](https://github.com/Kong/kong/pull/8821)",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "Added wRPC protocol support. Configuration synchronization now happens over wRPC. wRPC is an RPC protocol that encodes with ProtoBuf and transports with WebSocket.[#8357](https://github.com/Kong/kong/pull/8357)\n- To keep compatibility with earlier versions, added support for the control plane to fall back to the previous protocol to support older data planes.[#8834](https://github.com/Kong/kong/pull/8834)\n- Added support to negotiate services supported with wRPC protocol. We will support more services in the future.[#8926](https://github.com/Kong/kong/pull/8926)",
        "type": "feature",
        "scope": "hybrid-mode"
      },
      {
        "message": "Declarative configuration exports now happen inside a transaction in PostgreSQL.[#8586](https://github.com/Kong/kong/pull/8586)",
        "type": "feature",
        "scope": "hybrid-mode"
      },
      {
        "message": "Starting with version 3.0, all bundled plugin versions are the same as the Kong Gateway version.[#8772](https://github.com/Kong/kong/pull/8772): \n\n[Plugin documentation](/plugins/) now refers to the Kong Gateway version instead of the individual plugin version.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "New plugins:\n- **OpenTelemetry**: Export tracing instrumentations to any OTLP/HTTP compatible backend.`opentelemetry_tracing` configuration must be enabled to collect the core tracing spans of Kong Gateway.[#8826](https://github.com/Kong/kong/pull/8826)\n- **TLS Handshake Modifier**: Make certificates available to other plugins acting on the same request.\n- **TLS Metadata Headers**: Proxy TLS client certificate metadata to upstream services via an HTTP headers.\n- **WebSocket Size Limit**: Allows operators to specify a maximum size for incoming WebSocket messages.\n- **WebSocket Validator**: Validate individual WebSocket messages against a user-specified schema before proxying them.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**ACME**: Added the `allow_any_domain` field. It defaults to false and if set to true, the gateway will ignore the `domains` field.[#9047](https://github.com/Kong/kong/pull/9047)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**AWS Lambda**: Added support for cross-account invocation through the `aws_assume_role_arn` and`aws_role_session_name` configuration parameters.[#8900](https://github.com/Kong/kong/pull/8900)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**AWS Lambda**: The plugin now accepts string type `statusCode` as a valid return when working in proxy integration mode.[#8765](https://github.com/Kong/kong/pull/8765)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**AWS Lambda**: The plugin now separates AWS credential cache by the IAM role ARN.[#8907](https://github.com/Kong/kong/pull/8907)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Collector (`collector`): The deprecated Collector plugin has been removed.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**DeGraphQL**: The GraphQL server path is now configurable with the `graphql_server_path` configuration parameter.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Kafka Upstream**: Added support for the `SCRAM-SHA-512` authentication mechanism.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**LDAP Authentication Advanced**: This plugin now allows authorization based on group membership. The new configuration parameter, `groups_required`, is an array of string elements that indicates the groups that users must belong to for the request to be authorized.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**LDAP Authentication Advanced**: The character `.` is now allowed in group attributes.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**LDAP Authentication Advanced**: The character `:` is now allowed in the password field.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**mTLS Authentication**: Introduced certificate revocation list (CRL) and OCSP server support with the following parameters: `http_proxy_host`, `http_proxy_port`, `https_proxy_host`, and `https_proxy_port`.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OPA**: New configuration parameter `include_body_in_opa_input`: When enabled, include the raw body as a string in the OPA input at `input.request.http.body` and the body size at `input.request.http.body_size`.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OPA**: New configuration parameter `include_parsed_json_body_in_opa_input`: When enabled and content-type is `application/json`, the parsed JSON will be added to the OPA input at `input.request.http.parsed_body`.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Prometheus**: High cardinality metrics are now disabled by default.",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**Prometheus**: Decreased performance penalty to proxy traffic when collecting metrics.",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**Prometheus**: `http_status` to `http_requests_total`.",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**Prometheus**: `latency` to `kong_request_latency_ms` (HTTP), `kong_upstream_latency_ms`, `kong_kong_latency_ms`, and `session_duration_ms` (stream).\n\nKong latency and upstream latency can operate at orders of different magnitudes. Separate these buckets to reduce memory overhead.",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**Prometheus**: `kong_bandwidth` to `kong_bandwidth_bytes`.",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**Prometheus**: `nginx_http_current_connections` and `nginx_stream_current_connections` were merged into to `nginx_hconnections_total` (or `nginx_current_connections`?)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Prometheus**: `request_count` and `consumer_status` were merged into http\\_requests\\_total.\n\nIf the `per_consumer` config is set to `false`, the `consumer` label will be empty. If the `per_consumer` config is `true`, the `consumer` label will be filled.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Prometheus**: Removed the following metric: `http_consumer_status`",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**Prometheus**: New metrics: \n- `session_duration_ms`: monitoring stream connections.\n- `node_info`: Single gauge set to 1 that outputs the node’s ID and Kong Gateway version.",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**Prometheus**: `session_duration_ms`: monitoring stream connections.",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**Prometheus**: `node_info`: Single gauge set to 1 that outputs the node’s ID and Kong Gateway version.",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**Prometheus**: `http_requests_total` has a new label, `source`. It can be set to `exit`, `error`, or `service`.",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**Prometheus**: All memory metrics have a new label: `node_id`.",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**Prometheus**: Updated the Grafana dashboard that comes packaged with Kong",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**StatsD**: **Newly open-sourced plugin capabilities** : All capabilities of the StatsD Advanced plugin are now bundled in the [StatsD](/plugins/statsd) plugin.[#9046](https://github.com/Kong/kong/pull/9046)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Zipkin**: Added support for including the HTTP path in the span name with the`http_span_name` configuration parameter.[#8150](https://github.com/Kong/kong/pull/8150)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Zipkin**: Added support for socket connect and send/read timeouts through the `connect_timeout`, `send_timeout`, and `read_timeout` configuration parameters. This can help mitigate`ngx.timer` saturation when upstream collectors are unavailable or slow.[#8735](https://github.com/Kong/kong/pull/8735)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "You can now configure `openresty_path` to allow developers and operators to specify the OpenResty installation to use when running Kong Gateway, instead of using the system-installed OpenResty.[#8412](https://github.com/Kong/kong/pull/8412)",
        "type": "feature",
        "scope": "Configuration"
      },
      {
        "message": "Added `ipv6only` to listen options `admin_listen`, `proxy_listen`, and `stream_listen`.[#9225](https://github.com/Kong/kong/pull/9225)",
        "type": "feature",
        "scope": "Configuration"
      },
      {
        "message": "Added `so_keepalive` to listen options `admin_listen`, `proxy_listen`, and `stream_listen`.[#9225](https://github.com/Kong/kong/pull/9225)",
        "type": "feature",
        "scope": "Configuration"
      },
      {
        "message": "Add LMDB DB-less configuration persistence and removed the JSON-based configuration cache for faster startup time.[#8670](https://github.com/Kong/kong/pull/8670)",
        "type": "feature",
        "scope": "Configuration"
      },
      {
        "message": "`nginx_events_worker_connections=auto` now has a lower bound of 1024.[#9276](https://github.com/Kong/kong/pull/9276)",
        "type": "feature",
        "scope": "Configuration"
      },
      {
        "message": "`nginx_main_worker_rlimit_nofile=auto` now has a lower bound of 1024.[#9276](https://github.com/Kong/kong/pull/9276)",
        "type": "feature",
        "scope": "Configuration"
      },
      {
        "message": "Added new PDK function: `kong.request.get_start_time()`. This function returns the request start time, in Unix epoch milliseconds.[#8688](https://github.com/Kong/kong/pull/8688)",
        "type": "feature",
        "scope": "PDK"
      },
      {
        "message": "The function `kong.db.*.cache_key()` now falls back to `.id` if nothing from `cache_key` is found.[#8553](https://github.com/Kong/kong/pull/8553)",
        "type": "feature",
        "scope": "PDK"
      },
      {
        "message": "Kong Manager does not currently support the following features: \n- Secrets management\n- Plugin ordering\n- Expression-based routing",
        "type": "known-issues",
        "scope": "Core"
      },
      {
        "message": "Blue-green migration from 2.8.x (and below) to 3.0.x is not supported. \n- This is a known issue planned to be fixed in the next 2.8 release. If this is a requirement for upgrading, Kong operators should upgrade to that version before beginning a upgrade to 3.0.0.0.\n- See [Upgrade Kong Gateway](https://docs.konghq.com/gateway/latest/upgrade/) for more details.",
        "type": "known-issues",
        "scope": "Core"
      },
      {
        "message": "OpenTracing: There is an issue with `nginx-opentracing` in this release, so it is not recommended to upgrade yet if you are an OpenTracing user. This will be rectified in an upcoming patch/minor release.",
        "type": "known-issues",
        "scope": "Core"
      },
      {
        "message": "The Kong Gateway FIPS package is not currently compatible with SSL connections to PostgreSQL.",
        "type": "known-issues",
        "scope": "Core"
      },
      {
        "message": "Deprecated and stopped producing Amazon Linux 1 containers and packages. Amazon Linux 1 [reached end-of-life on December 31, 2020](https://aws.amazon.com/blogs/aws/update-on-amazon-linux-ami-end-of-life).[Kong/docs.konghq.com #3966](https://github.com/Kong/docs.konghq.com/pull/3966)",
        "type": "breaking_change",
        "scope": "deployment"
      },
      {
        "message": "Deprecated and stopped producing Debian 8 (Jessie) containers and packages. Debian 8 reached end-of-life in June 30, 2020.[Kong/kong-build-tools #448](https://github.com/Kong/kong-build-tools/pull/448)",
        "type": "breaking_change",
        "scope": "deployment"
      },
      {
        "message": "As of 3.0, Kong Gateway’s schema library’s `process_auto_fields` function will not make deep copies of data that is passed to it when the given context is `select`. This was done to avoid excessive deep copying of tables where we believe the data most of the time comes from a driver like `pgmoon` or `lmdb`.\n\nIf a custom plugin relied on `process_auto_fields` not overriding the given table, it must make its own copy before passing it to the function now.[#8796](https://github.com/Kong/kong/pull/8796)",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "The deprecated `shorthands` field in Kong plugin or DAO schemas was removed in favor of the typed `shorthand_fields`. If your custom schemas still use `shorthands`, you need to update them to use `shorthand_fields`.[#8815](https://github.com/Kong/kong/pull/8815)",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "The support for `legacy = true/false` attribute was removed from Kong schemas and Kong field schemas.[#8958](https://github.com/Kong/kong/pull/8958)",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "The deprecated alias of `Kong.serve_admin_api` was removed. If your custom Nginx templates still use it, change it to `Kong.admin_content`.[#8815](https://github.com/Kong/kong/pull/8815)",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "The Kong singletons module `kong.singletons` was removed in favor of the PDK `kong.*`.[#8874](https://github.com/Kong/kong/pull/8874)",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "The data plane configuration cache was removed. Configuration persistence is now done automatically with LMDB.[#8704](https://github.com/Kong/kong/pull/8704)",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "`ngx.ctx.balancer_address` was removed in favor of `ngx.ctx.balancer_data`.[#9043](https://github.com/Kong/kong/pull/9043)",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "The normalization rules for `route.path` have changed. Kong Gateway now stores the unnormalized path, but the regex path always pattern-matches with the normalized URI. Previously, Kong Gateway replaced percent-encoding in the regex path pattern to ensure different forms of URI matches. That is no longer supported. Except for the reserved characters defined in[rfc3986](https://datatracker.ietf.org/doc/html/rfc3986#section-2.2), write all other characters without percent-encoding.[#9024](https://github.com/Kong/kong/pull/9024)",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "Kong Gateway no longer uses a heuristic to guess whether a `route.path` is a regex pattern. From 3.0 onward, all regex paths must start with the `\"~\"` prefix, and all paths that don’t start with `\"~\"` will be considered plain text. The migration process should automatically convert the regex paths when upgrading from 2.x to 3.0.[#9027](https://github.com/Kong/kong/pull/9027)",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "Bumped the version number (`_format_version`) of declarative configuration to `3.0` for changes on `route.path`. Declarative configurations using older versions are upgraded to `3.0` during migrations.\n\n{:.important}\n> **Do not sync (`deck sync`) declarative configuration files from 2.8 or earlier to 3.0.** Old configuration files will overwrite the configuration and create compatibility issues. To grab the updated configuration, `deck dump` the 3.0 file after migrations are completed.\n\n[#9078](https://github.com/Kong/kong/pull/9078)",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "Tags may now contain space characters.[#9143](https://github.com/Kong/kong/pull/9143)",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "Support for the `nginx-opentracing` module is deprecated as of `3.0` and will be removed from Kong in `4.0` (see the [Known Limitations](#known-limitations) section for additional information).",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "We removed regex [look-around](https://www.regular-expressions.info/lookaround.html) and [backreferences](https://www.regular-expressions.info/backref.html) support in the the atc-router. These are rarely used features and removing support for them improves the speed of our regex matching. If your current regexes use look-around or backreferences you will receive an error when attempting to start Kong, showing exactly what regex is incompatible. Users can either switch to the `traditional` router flavor or change the regex to remove look-around / backreferences.",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "The Admin API endpoint `/vitals/reports` has been removed.",
        "type": "breaking_change",
        "scope": "Admin API"
      },
      {
        "message": "`POST` requests on `/targets` endpoints are no longer able to update existing entities. They are only able to create new ones.[#8596](https://github.com/Kong/kong/pull/8596),[#8798](https://github.com/Kong/kong/pull/8798). If you have scripts that use`POST` requests to modify `/targets`, change them to `PUT`requests to the appropriate endpoints before updating to Kong Gateway 3.0.",
        "type": "breaking_change",
        "scope": "Admin API"
      },
      {
        "message": "Insert and update operations on duplicated targets return a `409` error.[#8179](https://github.com/Kong/kong/pull/8179),[#8768](https://github.com/Kong/kong/pull/8768)",
        "type": "breaking_change",
        "scope": "Admin API"
      },
      {
        "message": "The list of reported plugins available on the server now returns a table of metadata per plugin instead of a boolean `true`.[#8810](https://github.com/Kong/kong/pull/8810)",
        "type": "breaking_change",
        "scope": "Admin API"
      },
      {
        "message": "The `kong.request.get_path()` PDK function now performs path normalization on the string that is returned to the caller. The raw, non-normalized version of the request path can be fetched via `kong.request.get_raw_path()`.[#8823](https://github.com/Kong/kong/pull/8823)",
        "type": "breaking_change",
        "scope": "PDK"
      },
      {
        "message": "`pdk.response.set_header()`, `pdk.response.set_headers()`, `pdk.response.exit()` now ignore and emit warnings for manually set `Transfer-Encoding` headers.[#8698](https://github.com/Kong/kong/pull/8698)",
        "type": "breaking_change",
        "scope": "PDK"
      },
      {
        "message": "The PDK is no longer versioned.[#8585](https://github.com/Kong/kong/pull/8585)",
        "type": "breaking_change",
        "scope": "PDK"
      },
      {
        "message": "The JavaScript PDK now returns `Uint8Array` for `kong.request.getRawBody`,`kong.response.getRawBody`, and `kong.service.response.getRawBody`. The Python PDK returns `bytes` for `kong.request.get_raw_body`,`kong.response.get_raw_body`, and `kong.service.response.get_raw_body`. Previously, these functions returned strings.[#8623](https://github.com/Kong/kong/pull/8623)",
        "type": "breaking_change",
        "scope": "PDK"
      },
      {
        "message": "The `go_pluginserver_exe` and `go_plugins_dir` directives are no longer supported. [#8552](https://github.com/Kong/kong/pull/8552). If you are using [Go plugin server](https://github.com/Kong/go-pluginserver), migrate your plugins to use the [Go PDK](https://github.com/Kong/go-pdk) before upgrading.",
        "type": "breaking_change",
        "scope": "PDK"
      },
      {
        "message": "DAOs in plugins must be listed in an array, so that their loading order is explicit. Loading them in a hash-like table is no longer supported.[#8988](https://github.com/Kong/kong/pull/8988)",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "Plugins MUST now have a valid `PRIORITY` (integer) and `VERSION` (“x.y.z” format) field in their `handler.lua` file, otherwise the plugin will fail to load.[#8836](https://github.com/Kong/kong/pull/8836)",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "The old `kong.plugins.log-serializers.basic` library was removed in favor of the PDK function `kong.log.serialize`. Upgrade your plugins to use the PDK.[#8815](https://github.com/Kong/kong/pull/8815)",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "The support for deprecated legacy plugin schemas was removed. If your custom plugins still use the old (`0.x era`) schemas, you are now forced to upgrade them.[#8815](https://github.com/Kong/kong/pull/8815)",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "Updated the priority for some plugins.: `acme` changed from `1007` to `1705`",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "Updated the priority for some plugins.: `basic-auth` changed from `1001` to `1100`",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "Updated the priority for some plugins.: `canary` changed from `13` to `20`",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "Updated the priority for some plugins.: `degraphql` changed from `1005` to `1500`",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "Updated the priority for some plugins.: `graphql-proxy-cache-advanced` changed from `100` to `99`",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "Updated the priority for some plugins.: `hmac-auth` changed from `1000` to `1030`",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "Updated the priority for some plugins.: `jwt` changed from `1005` to `1450`",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "Updated the priority for some plugins.: `jwt-signer` changed from `999` to `1020`.",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "Updated the priority for some plugins.: `key-auth` changed from `1003` to `1250`",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "Updated the priority for some plugins.: `key-auth-advanced` changed from `1003` to `1250`",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "Updated the priority for some plugins.: `ldap-auth` changed from `1002` to `1200`",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "Updated the priority for some plugins.: `ldap-auth-advanced` changed from `1002` to `1200`",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "Updated the priority for some plugins.: `mtls-auth` changed from `1006` to `1600`",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "Updated the priority for some plugins.: `oauth2` changed from `1004` to `1400`",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "Updated the priority for some plugins.: `openid-connect` changed from `1000` to `1050`",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "Updated the priority for some plugins.: `rate-limiting` changed from `901` to `910`",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "Updated the priority for some plugins.: `rate-limiting-advanced` changed from `902` to `910`",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "Updated the priority for some plugins.: `route-by-header` changed from `2000` to `850`",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "Updated the priority for some plugins.: `route-transformer-advanced` changed from `800` to `780`",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "Updated the priority for some plugins.: `pre-function` changed from `+inf` to `1000000`",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "Updated the priority for some plugins.: `vault-auth` changed from `1003` to `1350`",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "Kong plugins no longer support `CREDENTIAL_USERNAME` (`X-Credential-Username`). Use the constant `CREDENTIAL_IDENTIFIER` (`X-Credential-Identifier`) when setting the upstream headers for a credential.[#8815](https://github.com/Kong/kong/pull/8815)",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**ACL**: Removed the deprecated `blacklist` and `whitelist` configuration parameters. [#8560](https://github.com/Kong/kong/pull/8560)",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**ACME**: The default value of the `auth_method` configuration parameter is now `token`.",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**AWS Lambda**: The AWS region is now required. You can set it through the plugin configuration with the `aws_region` field parameter, or with environment variables.",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**AWS Lambda**: The plugin now allows `host` and `aws_region` fields to be set at the same time, and always applies the SigV4 signature.[#8082](https://github.com/Kong/kong/pull/8082)",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**HTTP Log**: The `headers` field now only takes a single string per header name, where it previously took an array of values.[#6992](https://github.com/Kong/kong/pull/6992)",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**JWT**: The authenticated JWT is no longer put into the nginx context (`ngx.ctx.authenticated_jwt_token`). Custom plugins which depend on that value being set under that name must be updated to use Kong’s shared context instead (`kong.ctx.shared.authenticated_jwt_token`) before upgrading to 3.0.",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**Prometheus**: The following metric names were adjusted to add units to standardize where possible: \n- `http_status` to `http_requests_total`.\n- \n`latency` to `kong_request_latency_ms` (HTTP), `kong_upstream_latency_ms`, `kong_kong_latency_ms`, and `session_duration_ms` (stream).\n\nKong latency and upstream latency can operate at orders of different magnitudes. Separate these buckets to reduce memory overhead.\n\n- `kong_bandwidth` to `kong_bandwidth_bytes`.\n- `nginx_http_current_connections` and `nginx_stream_current_connections` were merged into to `nginx_connections_total`.\n- `request_count` and `consumer_status` were merged into `http_requests_total`.\n\nIf the `per_consumer` config is set to `false`, the `consumer` label will be empty. If the `per_consumer` config is `true`, the `consumer` label will be filled.",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**Prometheus**: `nginx_http_current_connections` and `nginx_stream_current_connections` were merged into to `nginx_connections_total`.",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**Prometheus**: `request_count` and `consumer_status` were merged into `http_requests_total`.\n\nIf the `per_consumer` config is set to `false`, the `consumer` label will be empty. If the `per_consumer` config is `true`, the `consumer` label will be filled.",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**Prometheus**: Updated the Grafana dashboard that comes packaged with Kong[#8712](https://github.com/Kong/kong/pull/8712)",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**Prometheus**: The plugin doesn’t export status codes, latencies, bandwidth and upstream health check metrics by default. They can still be turned on manually by setting `status_code_metrics`,`lantency_metrics`, `bandwidth_metrics` and `upstream_health_metrics` respectively.[#9028](https://github.com/Kong/kong/pull/9028)",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**Pre-function**: Removed the deprecated `config.functions` configuration parameter from the Serverless Functions plugins’ schemas. Use the `config.access` phase instead.[#8559](https://github.com/Kong/kong/pull/8559)",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**StatsD**: Any metric name that is related to a service now has a `service.` prefix: `kong.service.<service_identifier>.request.count`. \n- The metric `kong.<service_identifier>.request.status.<status>` has been renamed to `kong.service.<service_identifier>.status.<status>`.\n- The metric `kong.<service_identifier>.user.<consumer_identifier>.request.status.<status>` has been renamed to `kong.service.<service_identifier>.user.<consumer_identifier>.status.<status>`.",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**StatsD**: The metric `kong.<service_identifier>.request.status.<status>` has been renamed to `kong.service.<service_identifier>.status.<status>`.",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**StatsD**: The metric `kong.<service_identifier>.user.<consumer_identifier>.request.status.<status>` has been renamed to `kong.service.<service_identifier>.user.<consumer_identifier>.status.<status>`.",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**StatsD**: The metric `*.status.<status>.total` from metrics `status_count` and `status_count_per_user` has been removed.",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting**: The default policy is now local for all deployment modes.[#9344](https://github.com/Kong/kong/pull/9344)",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**Deprecated** : The StatsD Advanced plugin has been deprecated and will be removed in 4.0. All capabilities are now available in the [StatsD](/plugins/statsd/) plugin.",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**Proxy Cache**: These plugins don’t store response data in `ngx.ctx.proxy_cache_hit` anymore. Logging plugins that need the response data must now read it from `kong.ctx.shared.proxy_cache_hit`.[#8607](https://github.com/Kong/kong/pull/8607)",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "The Kong constant `CREDENTIAL_USERNAME` with the value of `X-Credential-Username` has been removed.[#8815](https://github.com/Kong/kong/pull/8815)",
        "type": "breaking_change",
        "scope": "Configuration"
      },
      {
        "message": "The default value of `lua_ssl_trusted_certificate` has changed to `system`[#8602](https://github.com/Kong/kong/pull/8602) to automatically load the trusted CA list from the system CA store.",
        "type": "breaking_change",
        "scope": "Configuration"
      },
      {
        "message": "It is no longer possible to use a `.lua` format to import a declarative configuration file from the `kong`CLI tool. Only JSON and YAML formats are supported. If your update procedure with Kong Gateway involves executing `kong config db_import config.lua`, convert the `config.lua` file into a `config.json` or `config.yml` file before upgrading.[#8898](https://github.com/Kong/kong/pull/8898)",
        "type": "breaking_change",
        "scope": "Configuration"
      },
      {
        "message": "The data plane config cache mechanism and its related configuration options (`data_plane_config_cache_mode` and `data_plane_config_cache_path`) have been removed in favor of LMDB.",
        "type": "breaking_change",
        "scope": "Configuration"
      },
      {
        "message": "The migration helper library (mostly used for Cassandra migrations) is no longer supplied with Kong Gateway.[#8781](https://github.com/Kong/kong/pull/8781)",
        "type": "breaking_change",
        "scope": "migrations"
      },
      {
        "message": "PostgreSQL migrations can now have an `up_f` part like Cassandra migrations, designating a function to call. The `up_f` part is invoked after the `up` part has been executed against the database for both PostgreSQL and Cassandra.",
        "type": "breaking_change",
        "scope": "migrations"
      },
      {
        "message": "Fixed an issue with keyring encryption, where the control plane would crash if any errors occurred during the initialization of the [keyring module](https://docs.konghq.com/gateway/latest/kong-enterprise/db-encryption/).",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the keyring module was not decrypting keys after a soft reload.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed pagination issues: \n- Fixed a consumer pagination issue.\n- Fixed an issue that appeared when loading the second page while iterating over a foreign key field using the DAO.[#9255](https://github.com/Kong/kong/pull/9255)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed service route update failures that occurred after restarting a control plane.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Vitals** : \n- Disabled `phone_home` for `anonymous_reports` on the data plane.\n- The Kong Gateway version information is now sent in the telemetry request query parameter.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Kong Manager** : \n- Fixed the workspace dashboard’s loading state. Previously, a dashboard with no request data and an existing service would still prompt users to add a service.\n- Fixed an issue where Kong Manager allowed selection of metrics not supported by the Datadog plugin.\n- Fixed the values accepted for upstream configuration in Kong Manager. Previously, fields that were supposed to accept decimals would only accept whole numbers.\n- Fixed an issue where you couldn’t save or update `pre-function` plugin configuration when the updated value contained a comma (`,`).\n- The service name field on the Service Contracts page now correctly shows the service display name. Previously, it showed the service ID.\n- Fixed an issue where, after updating the CA certificate, the page wouldn’t return to the certificate view.\n- Fixed an issue where the port was missing from the service URL on the service overview page.\n- Fixed an issue where switching between workspace dashboard pages would not update the Dev Portal URL.\n- Fixed issues with plugins: \n  - The Exit Transformer plugin can now load Lua functions added through Kong Manager.\n  - The CORS plugin now treats regexes properly for the `config.origins` field.\n  - The Datadog plugin now accepts an array for the `tags` field. Previously, it was incorrectly expecting a string.\n\n- Fixed an `HTTP 500` error that occurred when sorting routes by the **Hosts** column, then clicking **Next** on a paginated listing.\n- Fixed an issue that prevented developer role assignments from displaying in Kong Manager. When viewing a role under the Permissions tab in the Dev Portal section, the list of developers wouldn’t update when a new developer was added. Kong Manager was constructing the wrong URL when retrieving Dev Portal assignees.\n- Fixed an issue where admins couldn’t switch workspaces if they didn’t have an roles in the default workspace.\n- Fixed a display issue with Dev Portal settings in Kong Manager.\n- Improved the error that appeared when trying to view admin roles without permissions for the resource. Instead of displaying `404 workspace not found`, the error now informs the user that they don’t have access to view roles.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the data plane would reload and lose its license after an Nginx reload.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed issues in dependencies:\n\n- `kong-gql`: Fixed variable definitions to handle non-nullable/list-type variables correctly.\n- `lua-resty-openssl-aux-module`: Fixed an issue with getting `SSL_CTX` from a request.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "The schema validator now correctly converts `null` from declarative configurations to `nil`.[#8483](https://github.com/Kong/kong/pull/8483)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Kong now reschedules router and plugin iterator timers only after finishing the previous execution, avoiding unnecessary concurrent executions.[#8567](https://github.com/Kong/kong/pull/8567)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "External plugins now handle returned JSON with null member correctly.[#8611](https://github.com/Kong/kong/pull/8611)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the address of an environment variable could change but the code didn’t check that it was fixed after init.[#8581](https://github.com/Kong/kong/pull/8581)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the Go plugin server instance would not be updated after a restart.[#8547](https://github.com/Kong/kong/pull/8547)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue on trying to reschedule the DNS resolving timer when Kong was being reloaded.[#8702](https://github.com/Kong/kong/pull/8702)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "The private stream API has been rewritten to allow for larger message payloads.[#8641](https://github.com/Kong/kong/pull/8641)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue that the client certificate sent to the upstream was not updated when using the `PATCH` method.[#8934](https://github.com/Kong/kong/pull/8934)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the control plane and wRPC module interaction would cause Kong to crash when calling `export_deflated_reconfigure_payload` without a `pcall`.[#8668](https://github.com/Kong/kong/pull/8668)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Moved all `.proto` files to `/usr/local/kong/include` and ordered by priority.[#8914](https://github.com/Kong/kong/pull/8914)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue that caused unexpected 404 errors when creating or updating configs with invalid options.[#8831](https://github.com/Kong/kong/pull/8831)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue that caused crashes when calling some PDK APIs.[#8604](https://github.com/Kong/kong/pull/8604)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue that caused crashes when go PDK calls returned arrays.[#8891](https://github.com/Kong/kong/pull/8891)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Plugin servers now shutdown gracefully when Kong exits.[#8923](https://github.com/Kong/kong/pull/8923)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "CLI now prompts with `[y/n]` instead of `[Y/n]`, as it does not take `y` as default.[#9114](https://github.com/Kong/kong/pull/9114)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Improved the error message that appears when Kong can’t connect to Cassandra on init.[#8847](https://github.com/Kong/kong/pull/8847)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the Vault subschema wasn’t loaded in the `off` strategy.[#9174](https://github.com/Kong/kong/pull/9174)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "The schema now runs select transformations before `process_auto_fields`.[#9049](https://github.com/Kong/kong/pull/9049)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where Kong Gateway would use too many timers to keep track of upstreams when `worker_consistency = eventual`.[#8694](https://github.com/Kong/kong/pull/8694),[#8858](https://github.com/Kong/kong/pull/8858)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where it wasn’t possible to set target status using only a hostname for targets set only by their hostname.[#8797](https://github.com/Kong/kong/pull/8797)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where cache entries of some entities were not being properly invalidated after a cascade delete.[#9261](https://github.com/Kong/kong/pull/9261)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Running `kong start` when Kong Gateway is already running no longer overwrites the existing `.kong_env` file [#9254](https://github.com/Kong/kong/pull/9254)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "The Admin API now supports `HTTP/2` when requesting `/status`.[#8690](https://github.com/Kong/kong/pull/8690)",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "Fixed an issue where the Admin API didn’t display `Allow` and `Access-Control-Allow-Methods` headers with `OPTIONS` requests.",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "Plugins with colliding priorities have now deterministic sorting based on their name.[#8957](https://github.com/Kong/kong/pull/8957)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "External plugins: Kong Gateway now handles logging better when a plugin instance loses the `instances_id` in an event handler.[#8652](https://github.com/Kong/kong/pull/8652)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ACME**: The default value of the `auth_method` configuration parameter is now set to `token`.[#8565](https://github.com/Kong/kong/pull/8565)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ACME**: Added a cache for `domains_matcher`.[#9048](https://github.com/Kong/kong/pull/9048)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**HTTP Log**: Log output is now restricted to the workspace the plugin is running in. Previously, the plugin could log requests from outside of its workspace.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**AWS Lambda**: Removed the deprecated `proxy_scheme` field from the plugin’s schema.[#8566](https://github.com/Kong/kong/pull/8566)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**AWS Lambda**: Changed the path from `request_uri` to `upstream_uri` to fix an issue where the URI could not follow a rule defined by the Request Transformer plugin.[#9058](https://github.com/Kong/kong/pull/9058) [#9129](https://github.com/Kong/kong/pull/9129)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Forward Proxy**: Fixed a proxy authentication error caused by incorrect base64 encoding.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Forward Proxy**: Use lowercase when overwriting the Nginx request host header.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Forward Proxy**: The plugin now allows multi-value response headers.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**gRPC Gateway**: Fixed the handling of boolean fields from URI arguments.[#9180](https://github.com/Kong/kong/pull/9180)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**HMAC Authentication**: Removed deprecated signature format using `ngx.var.uri`.[#8558](https://github.com/Kong/kong/pull/8558)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**LDAP Authentication**: Refactored ASN.1 parser using OpenSSL API through FFI.[#8663](https://github.com/Kong/kong/pull/8663)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**LDAP Authentication Advanced**: Fixed an issue where Kong Manager LDAP authentication failed when `base_dn` was the domain root.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Mocking**: Fixed an issue where `204` responses were not handled correctly and you would see the following error:`\"No examples exist in API specification for this resource\"`.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Mocking**: `204` response specs now support empty content elements.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID Connect**: Fixed an issue with `kong_oauth2` consumer mapping.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting**: Fixed a PostgreSQL deadlock issue that occurred when the `cluster` policy was used with two or more metrics (for example, `second` and `day`.)[#8968](https://github.com/Kong/kong/pull/8968)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Fixed error handling when calling `get_window` and added more buffer on the window reserve.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Fixed error handling for plugin strategy configuration when in hybrid or DB-less mode and strategy is set to `cluster`.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Pre-function**: Fixed a problem that could cause a crash.[#9269](https://github.com/Kong/kong/pull/9269)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Syslog**: The `conf.facility` default value is now set to `user`.[#8564](https://github.com/Kong/kong/pull/8564)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Zipkin**: Fixed the balancer spans’ duration to include the connection time from Nginx to the upstream.[#8848](https://github.com/Kong/kong/pull/8848)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Zipkin**: Corrected the calculation of the header filter start time.[#9230](https://github.com/Kong/kong/pull/9230)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Zipkin**: Made the plugin compatible with the latest [Jaeger header spec](https://www.jaegertracing.io/docs/1.29/client-libraries/#tracespan-identity), which makes `parent_id` optional.[#8352](https://github.com/Kong/kong/pull/8352)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "The cluster listener now uses the value of `admin_error_log` for its log file instead of `proxy_error_log`.[#8583](https://github.com/Kong/kong/pull/8583)",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Fixed a typo in some business logic that checks the Kong role before setting a value in cache at startup. [#9060](https://github.com/Kong/kong/pull/9060)",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Fixed an issue in hybrid mode where, if a service was set to `enabled: false` and that service had a route with an enabled plugin, any new data planes would receive empty configuration.[#8816](https://github.com/Kong/kong/pull/8816)",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Localized `config_version` to avoid a race condition from the new yielding config loading code.[#8188](https://github.com/Kong/kong/pull/8818)",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "`kong.response.get_source()` now returns an error instead of an exit when plugin throws a runtime exception in the access phase.[#8599](https://github.com/Kong/kong/pull/8599)",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "`kong.tools.uri.normalize()` now escapes reserved and unreserved characters more accurately.[#8140](https://github.com/Kong/kong/pull/8140)",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "RFC3987 validation on route paths was removed, allowing operators to create a route with an invalid path URI like `/something|` which can not match any incoming request. This validation will be added back in a future release.",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "Bumped `openresty` from 1.19.9.1 to 1.21.4.1[#8850](https://github.com/Kong/kong/pull/8850)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `pgmoon` from 1.13.0 to 1.15.0[#8908](https://github.com/Kong/kong/pull/8908)[#8429](https://github.com/Kong/kong/pull/8429)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `openssl` from 1.1.1n to 1.1.1q[#9074](https://github.com/Kong/kong/pull/9074)[#8544](https://github.com/Kong/kong/pull/8544)[#8752](https://github.com/Kong/kong/pull/8752)[#8994](https://github.com/Kong/kong/pull/8994)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `resty.openssl` from 0.8.8 to 0.8.10[#8592](https://github.com/Kong/kong/pull/8592)[#8753](https://github.com/Kong/kong/pull/8753)[#9023](https://github.com/Kong/kong/pull/9023)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `inspect` from 3.1.2 to 3.1.3[#8589](https://github.com/Kong/kong/pull/8589)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `resty.acme` from 0.7.2 to 0.8.1[#8680](https://github.com/Kong/kong/pull/8680)[#9165](https://github.com/Kong/kong/pull/9165)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `luarocks` from 3.8.0 to 3.9.1[#8700](https://github.com/Kong/kong/pull/8700)[#9204](https://github.com/Kong/kong/pull/9204)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `luasec` from 1.0.2 to 1.2.0[#8754](https://github.com/Kong/kong/pull/8754)[#8754](https://github.com/Kong/kong/pull/9205)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `resty.healthcheck` from 1.5.0 to 1.6.1[#8755](https://github.com/Kong/kong/pull/8755)[#9018](https://github.com/Kong/kong/pull/9018)[#9150](https://github.com/Kong/kong/pull/9150)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `resty.cassandra` from 1.5.1 to 1.5.2[#8845](https://github.com/Kong/kong/pull/8845)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `penlight` from 1.12.0 to 1.13.1[#9206](https://github.com/Kong/kong/pull/9206)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lua-resty-mlcache` from 2.5.0 to 2.6.0[#9287](https://github.com/Kong/kong/pull/9287)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lodash` for Dev Portal from 4.17.11 to 4.17.21",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lodash` for Kong Manager from 4.17.15 to 4.17.21",
        "type": "dependency",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "3.10.0.2": {
    "kong-ee": [
      {
        "message": "Added an optional configuration parameter, `admin_gui_hide_konnect_cta`, which controls the visibility of the Konnect call-to-action in Kong Manager.",
        "type": "feature",
        "scope": "Configuration"
      },
      {
        "message": "Schema map values can now assume null values. This fixes an issue where values in custom schemas wouldn’t accept explicit null values for the removal of fields.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added a new `kong.request.get_raw_forwarded_path()` function for returning the non-normalized `forwarded_path`. This fixes an issue with the OpenID Connect plugin, which was normalizing the path when it shouldn’t.",
        "type": "feature",
        "scope": "PDK"
      },
      {
        "message": "Applied a patch from upstream OpenResty to fix an issue where upstream connection pooling failed when pool names exceeded 32 characters.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the rate limiting library could become deadlocked with Postgres.",
        "type": "bugfix",
        "scope": "Performance"
      },
      {
        "message": "Optimized the querying of the default workspace by directly accessing LMDB, improving performance.",
        "type": "bugfix",
        "scope": "Performance"
      },
      {
        "message": "Fixed an issue where the delta type was not being validated during incremental sync.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the error logs generated during router rebuilds could be excessively noisy.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where log lines could be incorrectly logged.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where a full configuration sync caused the data plane to stop proxying when incremental config sync was enabled.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Request Callout**: The plugin now logs the request URL, response code, and request latency (in milliseconds).",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Request Callout**: Fixed an issue where a callout response wasn’t available to response `by_lua` code.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Request Callout**: Fixed an issue where caching options modified via `by_lua` would apply to all subsequent callouts.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Request Callout**: Fixed an issue where callouts with the same name would be accepted.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Request Callout**: Query parameters specified via `callout.request.query` now correctly replace those in the callout URL.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Request Callout**: Fixed an issue where values in `custom` wouldn’t accept explicit null values for removal of fields.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Request Callout**: Fixed an issue where callout and upstream request body customizations weren’t performed when an empty request body was provided. Now, an empty JSON body is used and `Content-Type: application/json` is added to the request.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Request Callout**: Fixed an issue where the Request Callout plugin failed with a timeout when `callouts.request.body.custom` was null and `callouts.request.headers.forward` was set to `true`.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID Connect**: Fixed an issue which caused an IdP to report invalid `redirect_uri` errors when `config.redirect_uri` was not configured and the URI path contained spaces.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Session**: Fixed an issue where boolean configuration fields `hash_subject` (default `false`) and `store_metadata` (default `false`) stored the session’s metadata in the database. This also resolves an issue with Dev Portal, where adding these fields to `portal_session_conf` wasn’t working as expected.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where the data plane (DP) could report a healthy status before it was actually ready to accept traffic.",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "Fixed an issue where debug level logs for incremental sync were insufficient, making debugging more difficult.",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Fixed an issue where some logs were missing when incremental sync was enabled on the data plane side.",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Fixed an issue where the data plane could repeatedly trigger a full sync when incremental sync was enabled.",
        "type": "bugfix",
        "scope": "Clustering"
      }
    ],
    "kong-manager-ee": []
  },
  "2.8.2.4": {
    "kong-ee": [
      {
        "message": "Kong Gateway now statically links the BoringSSL PCRE library. This fixes an issue introduced in 2.8.2.3, where the BoringSSL library was dynamically linked, causing regex compilation to fail when routing requests with some versions of the library.",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "2.8.2.3": {
    "kong-ee": [
      {
        "message": "Fixed a role precedence issue with RBAC. RBAC rules involving deny (negative) rules now correctly take precedence over allow (non-negative) roles.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed workspace filtering pagination on the overview page.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a router issue where, in an environment with more than 50,000 routes, attempting to update a route caused a `500` error response.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a timer leak that occurred whenever the generic messaging protocol connection broke in hybrid mode.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a `tlshandshake` method error that occurred when SSL was configured on PostgreSQL, and the Kong Gateway had `stream_listen` configured with a stream proxy.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**HTTP Log**: Fixed the `could not update kong admin` internal error caused by empty headers. This error occurred when using this plugin with the Kong Ingress Controller.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**JWT**: Fixed an issue where the JWT plugin could potentially forward an unverified token to the upstream.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**JWT Signer**: Fixed the error `attempt to call local 'err' (a string value)`.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Mocking**: Fixed UUID pattern matching.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Prometheus**: Provided options to reduce the plugin’s impact on performance. Added new `kong.conf` options to switch high cardinality metrics `on` or `off`: [`prometheus_plugin_status_code_metrics`](https://docs.konghq.com/gateway/2.8.x/reference/configuration/#prometheus_plugin_status_code_metrics), [`prometheus_plugin_latency_metrics`](https://docs.konghq.com/gateway/2.8.x/reference/configuration/#prometheus_plugin_latency_metrics), [`prometheus_plugin_bandwidth_metrics`](https://docs.konghq.com/gateway/2.8.x/reference/configuration/#prometheus_plugin_bandwidth_metrics), and [`prometheus_plugin_upstream_health_metrics`](https://docs.konghq.com/gateway/2.8.x/reference/configuration/#prometheus_plugin_upstream_health_metrics).",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Fixed a maintenance cycle lock leak in the `kong_locks` dictionary. Kong Gateway now clears old namespaces from the maintenance cycle schedule when a namespace is updated.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Request Transformer**: Fixed an issue where empty arrays were being converted to empty objects. Empty arrays are now preserved.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "A required PCRE library is dynamically linked, where prior versions statically linked the library. Depending on the system PCRE version, this may cause regex compilation to fail when routing requests. Starting in 2.8.2.4 and later, Kong Gateway will return to statically linking the PCRE library.",
        "type": "known-issues",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "2.8.2.2": {
    "kong-ee": [
      {
        "message": "Added batch queues for the Datadog and StatsD plugins to reduce timer usage, fixing a `lua_max_running_timers are not enough` timer error.\n\nWhenever a request was processed, a new running timer was instantly created during the log phase. This was causing a shortage of timers under heavy traffic and led to unpredictable consequences, where internal timers were killed randomly and couldn’t recover automatically. This would then trigger a `lua_max_running_timers are not enough` timer error and cause data planes to crash.\n\n[#9521](https://github.com/Kong/kong/pull/9521)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a timer leak that occurred whenever the generic messaging protocol connection would break in hybrid mode.",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "2.8.2.1": {
    "kong-ee": [
      {
        "message": "**Kong Manager:**\n- Fixed an issue where admins needed the specific `rbac/role` permission to edit RBAC roles. Now, admins can edit RBAC roles with the `/admins` permission.\n- Fixed an issue where the client certificate ID didn’t display properly in the upstream update form.\n- Fixed an issue in the service documents UI which allowed users to upload multiple documents. Since each service only supports one document, the documents would not display correctly. Uploading a new document now overrides the previous document.\n- Fixed an issue where the **New Workspace** button on the global workspace dashboard wasn’t clickable on the first page load.\n- Fixed an RBAC issue where the roles page listed deleted roles.\n- Removed New Relic from Kong Manager. Previously, `VUE_APP_NEW_RELIC_LICENSE_KEY` and`VUE_APP_SEGMENT_WRITE_KEY` were being exposed in Kong Manager with invalid values.\n- Fixed an RBAC issue where permissions applied to specific endpoints (for example, an individual service or route) were not reflected in the Kong Manager UI.\n- Fixed an issue with group to role mapping, where it didn’t support group names with spaces.\n- Fixed an issue with individual workspace dashboards, where right-clicking on **View All** and choosing “Open Link in New Tab” or “Copy Link” for services, routes, and plugins redirected to the default workspace and caused an `HTTP 404` error.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Dev Portal** : Fixed an issue where Dev Portal response examples weren’t rendered when media type was vendor-specific.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Targets with a weight of `0` are no longer included in health checks, and checking their status via the `upstreams/<upstream>/health` endpoint results in the status `HEALTHCHECK_OFF`. Previously, the `upstreams/<upstream>/health` endpoint was incorrectly reporting targets with `weight=0` as `HEALTHY`, and the health check was reporting the same targets as `UNDEFINED`.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed the default `logrotate` configuration, which lacked permissions to access logs.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Kafka Upstream**: Fixed the `Bad Gateway` error that would occur when using the Kafka Upstream plugin with the configuration `producer_async=false`.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Response Transformer**: Fixed an issue where the plugin couldn’t process string responses.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**mTLS Authentication**: Fixed an issue where the plugin was causing requests to silently fail on Kong Gateway data planes.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Request Transformer**: Fixed an issue where empty arrays were being converted to empty objects. Empty arrays are now preserved.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Azure Functions**: Fixed an issue where calls made by this plugin would fail in the following situations: \n- The plugin was associated with a route that had no service.\n- The route’s associated service had a `path` value.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Azure Functions**: The plugin was associated with a route that had no service.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Azure Functions**: The route’s associated service had a `path` value.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**LDAP Auth Advanced**: Fixed an issue where operational attributes referenced by `group_member_attribute` weren’t returned in search query results.",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": []
  },
  "2.8.2.0": {
    "kong-ee": [
      {
        "message": "**Kong Manager** : \n- Fixed an issue where workspaces with zero roles were not correctly sorted by the number of roles.\n- Fixed the Cross Site Scripting (XSS) security vulnerability in the Kong Manager UI.\n- Fixed an issue where registering an admin without `admin_gui_auth` set resulted in a `500` error.\n- Fixed an issue that allowed unauthorized IDP users to log in to Kong Manager. These users had no access to any resources in Kong Manager, but were able to go beyond the login screen.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed OpenSSL vulnerabilities [CVE-2022-2097](https://nvd.nist.gov/vuln/detail/CVE-2022-2097) and [CVE-2022-2068](https://nvd.nist.gov/vuln/detail/CVE-2022-2068).",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Hybrid mode: Fixed an issue with consumer groups, where the control plane wasn’t sending the correct number of consumer entries to data planes.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Hybrid mode: Fixed an issue where sending a `PATCH` request to update a route after restarting a control plane caused a 500 error response.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**AWS Lambda**: Fixed an issue where the plugin couldn’t read environment variables in the ECS environment, causing permission errors.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Forward Proxy**: If the `https_proxy` configuration parameter is not set, it now defaults to `http_proxy` to avoid DNS errors.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**GraphQL Proxy Cache Advanced**: Fixed the error `function cannot be called in access phase (only in: log)`, which was preventing the plugin from working consistently.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**GraphQL Rate Limiting Advanced**: The plugin now returns a `500` error when using the `cluster` strategy in hybrid or DB-less modes instead of crashing.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**LDAP Authentication Advanced**: The characters `.` and `:` are now allowed in group attributes.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID Connect**: Fixed issues with OIDC role mapping where admins couldn’t be added to more than one workspace, and permissions were not being updated.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Request Transformer Advanced**: Fixed an issue where empty arrays were being converted to empty objects. Empty arrays are now preserved.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Route Transformer Advanced**: Fixed an issue where URIs that included `%20` or a whitespace would return a `400 Bad Request`.",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": []
  },
  "2.8.1.4": {
    "kong-ee": [
      {
        "message": "Bump `lua-resty-aws` version to 0.5.4 to reduce memory usage when AWS vault is enabled. [#23](https://github.com/Kong/lua-resty-aws/pull/23)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bump `lua-resty-gcp` version to 0.0.5 to reduce memory usage when GCP vault is enabled. [#7](https://github.com/Kong/lua-resty-gcp/pull/7)",
        "type": "dependency",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "2.8.1.3": {
    "kong-ee": [
      {
        "message": "Added GCP integration support for the secrets manager. GCP is now available as a vault backend.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**AWS Lambda**: Added support for cross-account invocation through the `aws_assume_role_arn` and`aws_role_session_name` configuration parameters.[#8900](https://github.com/Kong/kong/pull/8900)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue with excessive log file disk utilization on control planes.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue with keyring encryption, where keyring was not decrypting keys after a soft reload.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "The router now detects static route collisions inside the current workspace, as well as with other workspaces.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "When using a custom plugin in a hybrid mode deployment, the control plane now detects compatibility issues and stops sending the plugin configuration to data planes that can’t use it. The control plane continues sending the custom plugin configuration to compatible data planes.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Optimized the Kong PDK function `kong.response.get_source()`.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Mocking**: Fixed an issue where the plugin didn’t accept empty values in examples.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ACME**: The `domains` plugin parameter can now be left empty. When `domains` is empty, all TLDs are allowed. Previously, the parameter was labelled as optional, but leaving it empty meant that the plugin retrieved no certificates at all.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Response Transformer Advanced**: Fixed an issue with nested array parsing.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Fixed an issue with `cluster` strategy timestamp precision in Cassandra.",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "Fixed an issue with admin creation. Previously, when an admin was created with no roles, the admin would have access to the first workspace listed alphabetically.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed several issues with SNI listing. Previously, the SNI list was empty after sorting by the SSL certificate ID field. In 2.8.1.1, the SSL certificate ID field in the SNI list was empty.",
        "type": "bugfix",
        "scope": "Core"
      }
    ]
  },
  "2.8.1.2": {
    "kong-ee": [
      {
        "message": "Fixed an issue in hybrid mode where, if a service was set to `enabled: false` and that service had a route with an enabled plugin, any new data planes would receive empty configuration.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a timer leak that occurred when `worker_consistency` was set to `eventual` in `kong.conf`. This issue caused timers to be exhausted and failed to start any other timers used by Kong Gateway, resulting in a `too many pending timers` error.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed memory leaks coming from `lua-resty-lock`.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed global plugins can operate out of the workspace scope",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where Kong Manager did not display all Dev Portal developers in the organization.",
        "type": "bugfix",
        "scope": "kong-manager-and-dev-portal"
      },
      {
        "message": "Fixed an issue that prevented developer role assignments from displaying in Kong Manager. When viewing a role under the Permissions tab in the Dev Portal section, the list of developers wouldn’t update when a new developer was added. Kong Manager was constructing the wrong URL when retrieving Dev Portal assignees.",
        "type": "bugfix",
        "scope": "kong-manager-and-dev-portal"
      },
      {
        "message": "Fixed empty string handling in Kong Manager. Previously, Kong Manager was handling empty strings as `\"\"` instead of a null value.",
        "type": "bugfix",
        "scope": "kong-manager-and-dev-portal"
      },
      {
        "message": "Improved Kong Manager styling by fixing an issue where content didn’t fit on object detail pages.",
        "type": "bugfix",
        "scope": "kong-manager-and-dev-portal"
      },
      {
        "message": "Fixed an issue that sometimes prevented clicking Kong Manager links and buttons in Safari.",
        "type": "bugfix",
        "scope": "kong-manager-and-dev-portal"
      },
      {
        "message": "Fixed an issue where users were being navigated to the object detail page after clicking on the “Copy ID” button from the object list.",
        "type": "bugfix",
        "scope": "kong-manager-and-dev-portal"
      },
      {
        "message": "Fixed an issue where the number of requests and error rate were not correctly displaying when Vitals was disabled.",
        "type": "bugfix",
        "scope": "kong-manager-and-dev-portal"
      },
      {
        "message": "**Rate Limiting**: Fixed a PostgreSQL deadlock issue that occurred when the `cluster` policy was used with two or more metrics (for example, `second` and `day`.)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**HTTP Log**: Log output is now restricted to the workspace the plugin is running in. Previously, the plugin could log requests from outside of its workspace.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Mocking**: Fixed an issue where `204` responses were not handled correctly and you would see the following error:`\"No examples exist in API specification for this resource\"`.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Mocking**: `204` response specs now support empty content elements.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Amazon Linux 1** : Support for running Kong Gateway on Amazon Linux 1 is now deprecated, as the[Amazon Linux (1) AMI has ended standard support as of December 31, 2020](https://aws.amazon.com/blogs/aws/update-on-amazon-linux-ami-end-of-life). Starting with Kong Gateway 3.0.0.0, Kong is not building new Amazon Linux 1 images or packages, and Kong will not test package installation on Amazon Linux 1.\n\nIf you need to install Kong Gateway on Amazon Linux 1, see the documentation for [previous versions](https://docs.konghq.com/gateway/2.8.x/install-and-run/amazon-linux/).",
        "type": "deprecated",
        "scope": "Core"
      },
      {
        "message": "**Debian 8** : Support for running Kong Gateway on Debian 8 (“Jessie”) is now deprecated, as Debian 8 (“Jessie”) has reached End of Life (EOL). Starting with Kong Gateway 3.0.0.0, Kong is not building new Debian 8 (“Jessie”) images or packages, and Kong will not test package installation on Debian 8 (“Jessie”).\n\nIf you need to install Kong Gateway on Debian 8 (“Jessie”), see the documentation for [previous versions](https://docs.konghq.com/gateway/2.8.x/install-and-run/debian/).",
        "type": "deprecated",
        "scope": "Core"
      },
      {
        "message": "**Ubuntu 16.04** : Support for running Kong Gateway on Ubuntu 16.04 (“Xenial”) is now deprecated, as [Standard Support for Ubuntu 16.04 has ended as of April, 2021](https://wiki.ubuntu.com/Releases). Starting with Kong Gateway 3.0.0.0, Kong is not building new Ubuntu 16.04 images or packages, and Kong will not test package installation on Ubuntu 16.04.\n\nIf you need to install Kong Gateway on Ubuntu 16.04, see the documentation for [previous versions](https://docs.konghq.com/gateway/2.8.x/install-and-run/ubuntu/).",
        "type": "deprecated",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "2.8.1.1": {
    "kong-ee": [
      {
        "message": "You can now enable application status and application request emails for the Developer Portal using the following configuration parameters: \n- [`portal_application_status_email`](https://docs.konghq.com/gateway/latest/reference/configuration/#portal_application_status_email): Enable to send application request status update emails to developers.\n- [`portal_application_request_email`](https://docs.konghq.com/gateway/latest/reference/configuration/#portal_application_request_email): Enable to send service access request emails to users specified in `smtp_admin_emails`.\n- [`portal_smtp_admin_emails`](https://docs.konghq.com/gateway/latest/reference/configuration/#portal_smtp_admin_emails): Specify the email addresses to send portal admin emails to, overriding values set in `smtp_admin_emails`.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added the ability to use `email.developer_meta` fields in portal email templates. For example, `{{email.developer_meta.preferred_name}}`.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**AWS Lambda**: When working in proxy integration mode, the `statusCode` field now accepts string datatypes.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**mTLS Authentication**: Introduced certificate revocation list (CRL) and OCSP server support with the following parameters: `http_proxy_host`, `http_proxy_port`, `https_proxy_host`, and `https_proxy_port`.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Kafka Upstream**: Added support for the `SCRAM-SHA-512` authentication mechanism.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Improved Kong Admin API and Kong Manager performance for organizations with many entities.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue with keyring encryption, where the control plane would crash if any errors occurred during the initialization of the [keyring module](https://docs.konghq.com/gateway/latest/plan-and-deploy/security/db-encryption/).",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where Kong Manager did not display all RBAC users and Consumers in the organization.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where some areas in a row of a list were not clickable.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Rate Limiting Advanced**: Fixed rate limiting advanced errors that appeared when the Rate Limiting Advanced plugin was not in use.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Fixed an error where rate limiting counters were not updating response headers due to incorrect key expiration tracking. Redis key expiration is now tracked properly in `lua_shared_dict kong_rate_limiting_counters`.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Forward Proxy**: Fixed an `invalid header value` error for HTTPS requests. The plugin now accepts multi-value response headers.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Forward Proxy**: Fixed an error where basic authentication headers containing the `=`character weren’t forwarded.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Forward Proxy**: Fixed request errors that occurred when a scheme had no proxy set. The`https` proxy now falls back to the `http` proxy if not specified, and the`http` proxy falls back to `https`.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**GraphQL Rate Limiting Advanced**: Fixed `deserialize_parse_tree` logic when building GraphQL AST with non-nullable or list types.",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": []
  },
  "2.8.1.0": {
    "kong-ee": [
      {
        "message": "Fixed an issue with RBAC where `endpoint=/kong workspace=*` would not let the `/kong` endpoint be accessed from all workspaces",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue with RBAC where admins without a top level `endpoint=*` permission could not add any RBAC rules, even if they had `endpoint=/rbac` permissions. These admins can now add RBAC rules for their current workspace only.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Kong Manager \n- Serverless functions can now be saved when there is a comma in the provided value\n- Custom plugins now show an Edit button when viewing the plugin configuration\n- Editing Dev Portal permissions no longer returns a 404 error\n- Fix an issue where admins with access to only non-default workspaces could not see any workspaces\n- Show the workspace name when an admin only has access to non-default workspaces\n- Add support for table filtering and sorting when using Cassandra\n- Support the # character in RBAC tokens on the RBAC edit page\n- Performing an action on an upstream target no longer leads to a 404 error",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Developer Portal \n- Information about the current session is now bound to an nginx worker thread. This prevents data leaks when a worker is handling multiple requests at the same time: Information about the current session is now bound to an nginx worker thread. This prevents data leaks when a worker is handling multiple requests at the same time",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Keys are no longer rotated unexpectedly when a node restarts",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Add cache when performing RBAC token verification",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "The log message “plugins iterator was changed while rebuilding it” was incorrectly logged as an `error`. This release converts it to the `info` log level.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a 500 error when rate limiting counters are full with the Rate Limiting Advanced plugin",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Improved the performance of the router, plugins iterator and balancer by adding conditional rebuilding",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**HTTP Log**: Include provided query string parameters when sending logs to the `http_endpoint`",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Forward Proxy**: Use lowercase when overwriting the `host` header",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "StatsD Advanced: Added support for setting `workspace_identifier` to `workspace_name`",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Skip namespace creation if the plugin is not enabled. This prevents the error “[rate-limiting-advanced] no shared dictionary was specified” being logged.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**LDAP Auth Advanced**: Support passwords that contain a `:` character",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID Connect**: Provide valid upstream headers e.g. `X-Consumer-Id`, `X-Consumer-Username`",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**JWT Signer**: Implement the `enable_hs_signatures` option to enable JWTs signed with HMAC algorithms",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Bumped `openssl` from 1.1.1k to 1.1.1n to resolve CVE-2022-0778 [#8635](https://github.com/Kong/kong/pull/8635)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `openresty` from 1.19.3.2 to 1.19.9.1 [#7727](https://github.com/Kong/kong/pull/7727)",
        "type": "dependency",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "2.8.0.0": {
    "kong-ee": [
      {
        "message": "Improved tables in Kong Manager: (for PostgreSQL-backed instances only) \n- Click on a table row to access the entry instead of using the old **View** icon.\n- Search and filter tables through the **Filters** dropdown, which is located above the table.\n- Sort any table by clicking on a column title.\n- Tables now have pagination.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Kong Manager with OIDC: Added the configuration option[`admin_auto_create_rbac_token_disabled`](https://docs.konghq.com/gateway/latest/configure/auth/kong-manager/oidc-mapping/)to enable or disable RBAC tokens when automatically creating admins with OpenID Connect.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "If a license is present,`license_key` is now included in the `api` signal for[`anonymous_reports`](https://docs.konghq.com/gateway/latest/reference/configuration/#anonymous_reports).",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "The new `/developers/export` endpoint lets you export the list of developers and their statuses into CSV format.",
        "type": "feature",
        "scope": "dev-portal"
      },
      {
        "message": "**Beta feature** : Kong Gateway 2.8.0.0 introduces[secrets management and vault support](https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/). You can now store confidential values such as usernames and passwords as secrets in secure vaults. Kong Gateway can then reference these secrets, making your environment more secure.\n\nThe beta includes `get` support for the following vault implementations:\n\n- [AWS Secrets Manager](https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/backends/aws-sm/)\n- [HashiCorp Vault](https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/backends/hashicorp-vault/)\n- [Environment variable](https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/backends/env/)\n\nAs part of this support, some plugins have certain fields marked as_referenceable_. See the plugin section of the Kong Gateway 2.8 changelog for details.\n\nTest out secrets management using the[getting started guide](https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/getting-started/), and check out the documentation for the Kong Admin API [`/vaults-beta` entity](https://docs.konghq.com/gateway/latest/admin-api/#vaults-beta-entity).\n\n{:.important}\n> This feature is in beta. It has limited support and implementation details may change. This means it is intended for testing in staging environments only, and **should not** be deployed in production environments.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "You can customize the transparent dynamic TLS SNI name.\n\nThanks, [@Murphy-hub](https://github.com/Murphy-hub)! [#8196](https://github.com/Kong/kong/pull/8196)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Routes now support matching headers with regular expressions.\n\nThanks, [@vanhtuan0409](https://github.com/vanhtuan0409)! [#6079](https://github.com/Kong/kong/pull/6079)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "You can now configure [`cluster_max_payload`](https://docs.konghq.com/gateway/latest/reference/configuration/#cluster_max_payload)for hybrid mode deployments. This configuration option sets the maximum payload size allowed to be sent across from the control plane to the data plane. If your environment has large configurations that generate `payload too big` errors and don’t get applied to the data planes, use this setting to adjust the limit.\n\nThanks, [@andrewgkew](https://github.com/andrewgkew)! [#8337](https://github.com/Kong/kong/pull/8337)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Improved the calculation of declarative configuration hash for big configurations. The new method is faster and uses less memory.[#8204](https://github.com/Kong/kong/pull/8204)",
        "type": "feature",
        "scope": "Performance"
      },
      {
        "message": "Multiple improvements in the Router, including:\n\n- The router builds twice as fast\n- Failures are cached and discarded faster (negative caching)\n- Routes with header matching are cached\n\nThese changes should be particularly noticeable when rebuilding in DB-less environments.[#8087](https://github.com/Kong/kong/pull/8087)[#8010](https://github.com/Kong/kong/pull/8010)",
        "type": "feature",
        "scope": "Performance"
      },
      {
        "message": "The current declarative configuration hash is now returned by the `status`endpoint when Kong node is running in DB-less or data plane mode.[#8214](https://github.com/Kong/kong/pull/8214)[#8425](https://github.com/Kong/kong/pull/8425)",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "**Canary**: Added the ability to configure `canary_by_header_name`. This parameter accepts a header name that, when present on a request, overrides the configured canary functionality. \n- If the configured header is present with the value `always`, the request will always go to the canary upstream.\n- If the header is present with the value `never`, the request will never go to the canary upstream.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Canary**: If the configured header is present with the value `always`, the request will always go to the canary upstream.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Canary**: If the header is present with the value `never`, the request will never go to the canary upstream.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Prometheus**: Added three new metrics: \n- `kong_db_entities_total` (gauge): total number of entities in the database.\n- `kong_db_entity_count_errors` (counter): measures the number of errors encountered during the measurement of `kong_db_entities_total`.\n- `kong_nginx_timers` (gauge): total number of Nginx timers, in Running or Pending state. Tracks `ngx.timer.running_count()` and`ngx.timer.pending_count()`.[#8387](https://github.com/Kong/kong/pull/8387)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Prometheus**: `kong_db_entities_total` (gauge): total number of entities in the database.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Prometheus**: `kong_db_entity_count_errors` (counter): measures the number of errors encountered during the measurement of `kong_db_entities_total`.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Prometheus**: `kong_nginx_timers` (gauge): total number of Nginx timers, in Running or Pending state. Tracks `ngx.timer.running_count()` and`ngx.timer.pending_count()`.[#8387](https://github.com/Kong/kong/pull/8387)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID Connect**: Added Redis ACL support (Redis v6.0.0+) for storing and retrieving a session. Use the `session_redis_username` and `session_redis_password` configuration parameters to configure it.\n\n{:.important}\n> These parameters replace the `session_redis_auth` field, which is now **deprecated** and planned to be removed in 3.x.x.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID Connect**: Added support for distributed claims. Set the `resolve_distributed_claims` configuration parameter to `true` to tell OIDC to explicitly resolve distributed claims.\n\nDistributed claims are represented by the `_claim_names` and `_claim_sources` members of the JSON object containing the claims.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID Connect**: **Beta feature:** The `client_id`, `client_secret`, `session_secret`, `session_redis_username`, and `session_redis_password` configuration fields are now marked as referenceable, which means they can be securely stored as[secrets](https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/getting-started/)in a vault. References must follow a [specific format](https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/reference-format/).",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Forward Proxy Advanced**: Added `http_proxy_host`, `http_proxy_port`, `https_proxy_host`, and`https_proxy_port` configuration parameters for mTLS support.\n\n{:.important}\n> These parameters replace the `proxy_port` and `proxy_host` fields, which are now **deprecated** and planned to be removed in 3.x.x.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Forward Proxy Advanced**: The `auth_password` and `auth_username` configuration fields are now marked as referenceable, which means they can be securely stored as[secrets](https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/getting-started/)in a vault. References must follow a [specific format](https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/reference-format/).",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Kafka Upstream**: Added the ability to identify a Kafka cluster using the `cluster_name` configuration parameter. By default, this field generates a random string. You can also set your own custom cluster identifier.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Kafka Upstream**: **Beta feature:** The `authentication.user` and `authentication.password` configuration fields are now marked as referenceable, which means they can be securely stored as[secrets](https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/getting-started/)in a vault. References must follow a [specific format](https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/reference-format/).",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**LDAP Authentication Advanced**: **Beta feature:** The `ldap_password` and `bind_dn` configuration fields are now marked as referenceable, which means they can be securely stored as[secrets](https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/getting-started/)in a vault. References must follow a [specific format](https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/reference-format/).",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Vault Authentication**: **Beta feature:** The `vaults.vault_token` form field is now marked as referenceable, which means it can be securely stored as a[secret](https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/getting-started/)in a vault. References must follow a [specific format](https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/reference-format/).",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**GraphQL Rate Limiting Advanced**: Added Redis ACL support (Redis v6.0.0+ and Redis Sentinel v6.2.0+).",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**GraphQL Rate Limiting Advanced**: Added the `redis.username` and `redis.sentinel_username` configuration parameters.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**GraphQL Rate Limiting Advanced**: **Beta feature:** The `redis.username`, `redis.password`, `redis.sentinel_username`, and `redis.sentinel_password`configuration fields are now marked as referenceable, which means they can be securely stored as[secrets](https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/getting-started/)in a vault. References must follow a [specific format](https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/reference-format/).",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting**: ",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Added Redis ACL support (Redis v6.0.0+ and Redis Sentinel v6.2.0+).",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Added the `redis.username` and `redis.sentinel_username` configuration parameters.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: **Beta feature:** The `redis.username`, `redis.password`, `redis.sentinel_username`, and `redis.sentinel_password`configuration fields are now marked as referenceable, which means they can be securely stored as[secrets](https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/getting-started/)in a vault. References must follow a [specific format](https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/reference-format/).",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Response Rate Limiting**: Added Redis ACL support (Redis v6.0.0+ and Redis Sentinel v6.2.0+).",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Response Rate Limiting**: Added the `redis_username` configuration parameter.\n\nThanks, [@27ascii](https://github.com/27ascii) for the original contribution! [#8213](https://github.com/Kong/kong/pull/8213)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Response Transformer Advanced**: Use response buffering from the PDK.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Proxy Cache Advanced**: Added Redis ACL support (Redis v6.0.0+ and Redis Sentinel v6.2.0+).",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Proxy Cache Advanced**: Added the `redis.sentinel_username` and `redis.sentinel_password` configuration parameters.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Proxy Cache Advanced**: **Beta feature:** The `redis.password`, `redis.sentinel_username`, and `redis.sentinel_password`configuration fields are now marked as referenceable, which means they can be securely stored as [secrets](https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/getting-started/)in a vault. References must follow a [specific format](https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/reference-format/).",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**jq**: Use response buffering from the PDK.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**ACME**: Added the `rsa_key_size` configuration parameter.\n\nThanks, [lodrantl](https://github.com/lodrantl)! [#8114](https://github.com/Kong/kong/pull/8114)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Fixed a timer leak that caused the timers to be exhausted and failed to start any other timers used by Kong, showing the error `too many pending timers`.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where, if `data_plane_config_cache_mode` was set to `off`, the data plane received no updates from the control plane.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed `attempt to index local 'workspace'` error, which occurred when accessing Routes or Services using TLS.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where [`cluster_telemetry_server_name`](https://docs.konghq.com/gateway/latest/reference/configuration/#cluster_telemetry_server_name)was not automatically generated and registered if it was not explicitly set.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed the [`cluster_allowed_common_names`](https://docs.konghq.com/gateway/latest/reference/configuration/#cluster_allowed_common_names)setting. When using PKI for certificate verification in hybrid mode, you can now configure a list of Common Names allowed to connect to a control plane with the option. If not set, only data planes with the same parent domain as the control plane cert are allowed.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "When the SMTP configuration was broken or unresponsive, the API would respond with an error message that was a JavaScript Object (`[Object object]`) instead of a string. This happened when a user was registering on any given portal with broken SMTP. Now, if there is an error, the API responds with the string`Error sending email`.",
        "type": "bugfix",
        "scope": "dev-portal"
      },
      {
        "message": "The `/document_objects` and `/services/:id/document_objects` endpoints no longer accept multiple documents per service. This was an issue, as each service can only have one document. Instead, posting a document to one of these endpoints now overrides the previous document.",
        "type": "bugfix",
        "scope": "dev-portal"
      },
      {
        "message": "When the Router encounters an SNI FQDN with a trailing dot (`.`), the dot will be ignored, since according to[RFC-3546](https://datatracker.ietf.org/doc/html/rfc3546#section-3.1)the dot is not part of the hostname.[#8269](https://github.com/Kong/kong/pull/8269)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a bug in the Router that would not prioritize the routes with both a wildcard and a port (`route.*:80`) over wildcard-only routes (`route.*`), which have less specificity.[#8233](https://github.com/Kong/kong/pull/8233)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "The internal DNS client isn’t confused by the single-dot (`.`) domain, which can appear in `/etc/resolv.conf` in special cases like `search .`[#8307](https://github.com/Kong/kong/pull/8307)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "The Cassandra connector now records migration consistency level.\n\nThanks, [@mpenick](https://github.com/mpenick)! [#8226](https://github.com/Kong/kong/pull/8226)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Targets now keep their health status when upstreams are updated.[#8394](https://github.com/Kong/kong/pull/8394)",
        "type": "bugfix",
        "scope": "balancer"
      },
      {
        "message": "One debug message which was erroneously using the `error` log level has been downgraded to the appropriate `debug` log level.[#8410](https://github.com/Kong/kong/pull/8410)",
        "type": "bugfix",
        "scope": "balancer"
      },
      {
        "message": "Replaced a cryptic error message with a more useful one when there is a failure on SSL when connecting with the control plane.[#8260](https://github.com/Kong/kong/pull/8260)",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Fixed an incorrect `next` field that appeared when paginating Upstreams.[#8249](https://github.com/Kong/kong/pull/8249)",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "Phase names are now correctly selected when performing phase checks.[#8208](https://github.com/Kong/kong/pull/8208)",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "Fixed a bug in the go-PDK where, if `kong.request.getrawbody` was big enough to be buffered into a temporary file, it would return an an empty string.[#8390](https://github.com/Kong/kong/pull/8390)",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "**External Plugins** : Fixed incorrect handling of the Headers Protobuf Structure and representation of null values, which provoked an error on init with the go-pdk.[#8267](https://github.com/Kong/kong/pull/8267)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**External Plugins** : Unwrap `ConsumerSpec` and `AuthenticateArgs`.\n\nThanks, [@raptium](https://github.com/raptium)! [#8280](https://github.com/Kong/kong/pull/8280)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**External Plugins** : Fixed a problem in the stream subsystem, where it would attempt to load HTTP headers.[#8414](https://github.com/Kong/kong/pull/8414)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**CORS**: The CORS plugin does not send the `Vary: Origin` header anymore when the header `Access-Control-Allow-Origin` is set to `*`.\n\nThanks, [@jkla-dr](https://github.com/jkla-dr)! [#8401](https://github.com/Kong/kong/pull/8401)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**AWS Lambda**: Fixed incorrect behavior when configured to use an HTTP proxy and deprecated the `proxy_scheme` config attribute for removal in 3.0.[#8406](https://github.com/Kong/kong/pull/8406)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAuth2**: The plugin clears the `X-Authenticated-UserId` and`X-Authenticated-Scope` headers when it is configured in logical OR and is used in conjunction with another authentication plugin.[#8422](https://github.com/Kong/kong/pull/8422)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Datadog**: The plugin schema now lists the default values for configuration options in a single place instead of in two separate places.[#8315](https://github.com/Kong/kong/pull/8315)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting**: Fixed a 500 error associated with performing arithmetic functions on a nil value by adding a nil value check after performing `ngx.shared.dict` operations.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Fixed a 500 error that occurred when consumer groups were enforced but no proper configurations were provided. Now, if no specific consumer group configuration exists, the consumer group defaults to the original plugin configuration.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Fixed a timer leak that caused the timers to be exhausted and failed to start any other timers used by Kong, showing the error `too many pending timers`.\n\nBefore, the plugin used one timer for each namespace maintenance process, increasing timer usage on instances with a large number of rate limiting namespaces. Now, it uses a single timer for all namespace maintenance.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Fixed an issue where the `local` strategy was not working with DB-less and hybrid deployments. We now allow `sync_rate = null` and `sync_rate = -1`when a `local` strategy is defined.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Exit Transformer**: Fixed an issue where the Exit Transformer plugin would break the plugin iterator, causing later plugins not to run.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**mTLS Authentication**: Fixed `attempt to index local 'workspace'` error, which occurred when accessing Routes or Services using TLS.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAuth2 Introspection**: Fixed issues with TLS connections when the IDP is behind a reverse proxy.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Proxy Cache Advanced**: Fixed a `X-Cache-Status:Miss` error that occurred when caching large files.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Response Transformer Advanced**: In the `body_filter` phase, the plugin now sets the body to an empty string instead of `nil`.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**jq**: If plugin has no output, it will now return the raw body instead of attempting to restore the original response body.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID Connect**: Fixed negative caching, which was loading wrong a configuration value.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**JWT Signer**: Fixed an issue where the `enable_hs_signatures` configuration parameter did not work. The plugin now defines expiry earlier to avoid arithmetic on a nil value.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Bumped OpenSSL from 1.1.1l to 1.1.1m[#8191](https://github.com/Kong/kong/pull/8191)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `resty.session` from 3.8 to 3.10[#8294](https://github.com/Kong/kong/pull/8294)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lua-resty-openssl` to 0.8.5[#8368](https://github.com/Kong/kong/pull/8368)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lodash` for Dev Portal from 4.17.11 to 4.17.21",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lodash` for Kong Manager from 4.17.15 to 4.17.21",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "The external `go-pluginserver` project is considered deprecated in favor of the [embedded server approach](https://docs.konghq.com/gateway/latest/reference/external-plugins/).",
        "type": "deprecated",
        "scope": "Core"
      },
      {
        "message": "Starting with Kong Gateway 2.8.0.0, Kong is not building new open-source CentOS images. Support for running open-source Kong Gateway on CentOS on is now deprecated, as [CentOS has reached End of Life (OEL)](https://www.centos.org/centos-linux-eol/).\n\nRunning Kong Gateway Enterprise on CentOS is currently supported, but CentOS is planned to be fully deprecated in Kong Gateway 3.x.x.",
        "type": "deprecated",
        "scope": "Core"
      },
      {
        "message": "OpenID Connect plugin: The `session_redis_auth` field is now deprecated and planned to be removed in 3.x.x. Use`session_redis_username` and `session_redis_password` instead.",
        "type": "deprecated",
        "scope": "Core"
      },
      {
        "message": "Forward Proxy Advanced plugin: The `proxy_port` and `proxy_host` fields are now deprecated and planned to be removed in 3.x.x. Use`http_proxy_host` and `http_proxy_port`, or `https_proxy_host` and`https_proxy_port` instead.",
        "type": "deprecated",
        "scope": "Core"
      },
      {
        "message": "AWS Lambda plugin: The `proxy_scheme` field is now deprecated and planned to be removed in 3.x.x.",
        "type": "deprecated",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "Fixed an issue where OIDC authentication into Kong Manager failed when used with Azure AD.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a performance issue with the Teams page in Kong Manager.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue with checkboxes in Kong Manager, where the checkbox for the OAuth2 plugin’s `hash_secret` value was labelled as _Required_ and users were not able to uncheck it.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where Kong Manager was not updating plugin configuration when attempting to clear the `service.id` from a plugin.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixes an issue with Route creation in Kong Manager, where a new route would default to `http` as the supported protocol. Now, creating a Route picks up the correct default value, which is `http,https`.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Kong Manager now accurately lists `udp` as a protocol option for Route and Service objects on their configuration pages.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue with Kong Manager OIDC authentication, which caused the error`“attempt to call method 'select_by_username_ignore_case' (a nil value)”`and prevented login with OIDC.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a latency issue with OAuth2 token creation. These tokens are no longer tracked by the workspace entity counter, as the count is not needed by the Kong Manager UI.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the plugin list table couldn’t be sorted by the **Applied To** column.",
        "type": "bugfix",
        "scope": "Core"
      }
    ]
  },
  "2.8.4.2": {
    "kong-ee": [
      {
        "message": "Fixed a bug where internal redirects, such as those produced by the `error_page` directive, could interfere with worker process handling the request when _buffered proxying_ is being used.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue with the Oauth 2.0 Introspection plugin where a request with JSON that is not a table failed.: ",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where the slow startup of the Go plugin server caused a deadlock.: ",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Bumped `OpenSSL` from 1.1.1t to 3.1.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lodash` for Dev Portal from 4.17.11 to 4.17.21",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lodash` for Kong Manager from 4.17.15 to 4.17.21",
        "type": "dependency",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "Fixed an issue where the Zipkin plugin didn’t allow the addition of `static_tags` through the Kong Manager UI.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where some of the icons were not rendering correctly.",
        "type": "bugfix",
        "scope": "Core"
      }
    ]
  },
  "2.8.4.1": {
    "kong-ee": [
      {
        "message": "**Request Validator**: The plugin now allows requests carrying a `content-type` with a parameter to match its `content-type` without a parameter.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Redis Cluster: Added username and password authentication to Redis Cluster 6 and later versions.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the RBAC token was not re-hashed after an update on the `user_token` field.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed the Dynatrace implementation. Due to a build system issue, Kong Gateway 2.8.4 packages prior to 2.8.4.1 didn’t contain the debug symbols that Dynatrace requires.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Forward Proxy**: Fixed an issue which occurred when receiving an HTTP `408` from the upstream through a forward proxy. Nginx exited the process with this code, which resulted in Nginx ending the request without any contents.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Bumped `pgmoon` from 2.2.0.1 to 2.3.2.0.",
        "type": "dependency",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "2.8.4.0": {
    "kong-ee": [
      {
        "message": "**AWS Lambda**: Added the configuration parameter `aws_imds_protocol_version`, which lets you select the IMDS protocol version. This option defaults to `v1` and can be set to `v2` to enable IMDSv2.[#9962](https://github.com/Kong/kong/pull/9962)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where the OpenTracing module was not included in the Amazon Linux 2 package.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Hybrid mode: Fixed an issue where enabling encryption on a data plane would cause the data plane to stop working after a restart.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed the systemd unit file, which was incorrectly named `kong.service` in 2.8.1.x and later versions. It has been renamed back to `kong-enterprise-edition.service` to align with previous versions.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed the Ubuntu ARM64 image, which was broken in 2.8.2.x and later versions.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Router: Fixed an issue where the router used stale data when workers were respawned. [#9396](https://github.com/Kong/kong/pull/9396)[#9485](https://github.com/Kong/kong/pull/9485)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Update the batch queues module so that queues no longer grow without bounds if their consumers fail to process the entries. Instead, old batches are now dropped and an error is logged.[#10247](https://github.com/Kong/kong/pull/10247)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Added the missing `protocols` field to the following plugin schemas: Azure Functions (`azure-functions`)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Added the missing `protocols` field to the following plugin schemas: gRPC Gateway (`grpc-gateway`)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Added the missing `protocols` field to the following plugin schemas: gRPC Web (`grpc-web`)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Added the missing `protocols` field to the following plugin schemas: Serverless pre-function (`pre-function`)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Added the missing `protocols` field to the following plugin schemas: Prometheus (`prometheus`)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Added the missing `protocols` field to the following plugin schemas: Proxy Caching (`proxy-cache`)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Added the missing `protocols` field to the following plugin schemas: Request Transformer (`request-transformer`)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Added the missing `protocols` field to the following plugin schemas: Session (`session`)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Added the missing `protocols` field to the following plugin schemas: Zipkin (`zipkin`)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**HTTP Log**: Fixed an issue in this plugin’s batch queue processing, where metrics would be published multiple times. This caused a memory leak, where memory usage would grow without limit.[#10052](https://github.com/Kong/kong/pull/10052) [#10044](https://github.com/Kong/kong/pull/10044)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**mTLS Authentication**: Fixed an issue where the plugin used the old route caches after routes were updated.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Key Authentication - Encrypted**: Fixed an issue where using an API key that exists in multiple workspaces caused a 401 error. This occurred because of a caching issue.",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": []
  },
  "3.4.3.18": {
    "kong-ee": [
      {
        "message": "Added a new `kong.request.get_raw_forwarded_path()` function for returning a non-normalized `forwarded_path`.",
        "type": "feature",
        "scope": "PDK"
      },
      {
        "message": "Fixed an issue where the detail page failed to render when a certificate or CA certificate was configured with a Vault reference.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Clustering** : You can now configure Data Plane metadata labels for a self-managed Gateway Control Plane.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**OpenID Connect**: Fixed an issue which caused IdPs to report invalid `redirect_uri` errors when `config.redirect_uri` was not configured and the URI path contained spaces.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Session**: Fixed an issue where boolean configuration fields `hash_subject` (default `false`) and `store_metadata` (default `false`) stored the session’s metadata in the database. This also resolves an issue with Dev Portal, where adding these fields to `portal_session_conf` wasn’t working as expected.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Bumped `lua-resty-openssl` from 1.2.1 to 1.5.1 to fix the worker process crash caused by a segmentation fault.",
        "type": "dependency",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "3.4.0.0": {
    "kong-ee": [
      {
        "message": "**Cassandra DB support removed:** Cassandra DB support has been removed. It is no longer supported as a data store for Kong Gateway. [#10931](https://github.com/Kong/kong/pull/10931).",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "**Alpine support removed:** Alpine packages and Docker images based on Alpine are no longer supported. Starting with Kong Gateway 3.4.0.0, Kong is not building new Alpine images or packages.[#10926](https://github.com/Kong/kong/pull/10926)",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "**Ubuntu 18.04 support removed** : Support for running Kong Gateway on Ubuntu 18.04 (“Bionic”) is now deprecated, as [Standard Support for Ubuntu 18.04 has ended as of June 2023](https://wiki.ubuntu.com/Releases). Starting with Kong Gateway 3.4.0.0, Kong is not building new Ubuntu 18.04 images or packages, and Kong will not test package installation on Ubuntu 18.04.\n\nIf you need to install Kong Gateway on Ubuntu 18.04, see the documentation for [previous versions](https://docs.konghq.com/gateway/3.1.x/install/linux/ubuntu/).",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "Amazon Linux 2022 artifacts are renamed to Amazon Linux 2023, based on AWS’s own renaming.",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "LMDB encryption has been disabled. The option `declarative_config_encryption_mode` has been removed from `kong.conf`.",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "The `/consumer_groups/:id/overrides` endpoint is deprecated in favor of a more generic plugin scoping mechanism. See the new [consumer groups](https://docs.konghq.com/gateway/api/admin-ee/3.4.0.x/#/consumer_groups/get-consumer_groups) entity.",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "Renamed the configuration property `admin_api_uri` to `admin_gui_api_url`. The old `admin_api_uri` property is considered deprecated and will be fully removed in a future version of Kong Gateway.",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "The RHEL8 Docker image provided by Kong is replaced with the RHEL9 Docker image. The RHEL8 packages are still available [from our package repository](https://cloudsmith.io/~kong/repos/gateway-34/packages/?q=distribution%3Arhel+AND+distribution%3A8).",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "Kong Gateway is now available on [RHEL 9](https://cloudsmith.io/~kong/repos/gateway-34/packages/?q=distribution%3Arhel+AND+distribution%3A9).",
        "type": "feature",
        "scope": "deployment"
      },
      {
        "message": "Introduced the [`cascade`](https://docs.konghq.com/gateway/latest/admin-api/workspaces/reference/#delete-a-workspace) option for `/workspaces`, which lets you delete a workspace and all of its entities in one request.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Consumer groups are now a core entity. With consumer groups, you can apply different configurations to select groups of consumers. The following plugins can now be scoped to consumer groups: \n- Rate Limiting Advanced\n- Request Transformer and Request Transformer Advanced\n- Response Transformer and Response Transformer Advanced\n\nSee the documentation for [consumer groups](https://docs.konghq.com/gateway/latest/kong-enterprise/consumer-groups/) to learn more.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added a new `ttl` option to vault configurations, allowing users to define the interval at which references are automatically re-fetched from the configured vault.\n\nSee the documentation for [secrets rotation](https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/secrets-rotation/) to learn more.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "The workspace name now appears in the logging payload.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**Beta feature:** Introduced the beta of WebAssembly (`proxy-wasm`).[#11218](https://github.com/Kong/kong/pull/11218)\n\nThis release integrates [`Kong/ngx-wasm-module`](https://github.com/Kong/ngx_wasm_module)into Kong Gateway.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "The `/schemas` endpoint now returns additional information about cross-field validation as part of the schema. This should help tools that use the Admin API to perform better client-side validation.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Enabled the `expressions` and `traditional_compatible` router flavors in the stream subsystem.[#11071](https://github.com/Kong/kong/pull/11071)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "The upstream `host_header` and router `preserve_host` configuration parameters now work in stream TLS proxy.[#11244](https://github.com/Kong/kong/pull/11244)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "In DB-less mode, the declarative schema is now fully initialized at startup instead of on-demand in the request path. This is most evident in decreased response latency when updating configuration via the `/config` API endpoint.[#10932](https://github.com/Kong/kong/pull/10932)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Tracing: Added the new attribute `http.route` to HTTP request spans.[#10981](https://github.com/Kong/kong/pull/10981)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Tracing: Added the span attribute `net.peer.name`, which records the upstream hostname if it’s available in `balancer_data.hostname`. Thanks [@backjo](https://github.com/backjo) for contributing this change.[#10723](https://github.com/Kong/kong/pull/10729)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "The default value of `lmdb_map_size` config has been bumped to `2048m`from `128m` to accommodate most commonly deployed config sizes in DB-less and hybrid modes.[#11047](https://github.com/Kong/kong/pull/11047)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "The default value of `cluster_max_payload` config has been bumped to `16m`from `4m` to accommodate most commonly deployed config sizes in hybrid mode.[#11090](https://github.com/Kong/kong/pull/11090)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Removed Kong branding from the kong HTML error template.[#11150](https://github.com/Kong/kong/pull/11150)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Validation for plugin queue related parameters has been improved.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: The `redis` strategy now catches strategy connection failures.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID Connect**: This plugin now supports the error reason header. This header can be turned off by setting `expose_error_code` to `false`.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID Connect**: OpenID Connect now supports adding scope to the token cache key by setting `token_cache_key_include_scope` to `true`.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Kafka Log**: The Kafka Log plugin now supports the `custom_fields_by_lua` configuration for dynamic modification of log fields using Lua code.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**GraphQL Rate Limiting Advanced**: The `host` field of this plugin now accepts Kong upstream targets.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OpenTelemetry**: Introduced support for the AWS X-Ray propagation header. The field `header_type`now accepts the `aws` value to handle this specific propagation header.[#11075](https://github.com/Kong/kong/pull/11075)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OpenTelemetry**: The `endpoint` parameter is now referenceable, and can be stored as a secret in a vault.[#11220](https://github.com/Kong/kong/pull/11220)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**IP Restriction**: Added support for the `tcp`, `tls`, `grpc`, and `grpcs` protocols.\n\nThanks [@scrudge](https://github.com/scrudge) for contributing this change.[#10245](https://github.com/Kong/kong/pull/10245)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Fixed a potential memory leak and reconnection problem which could occur when telemetry breaks down due to any exceptions in its `send` thread.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Telemetry: Fixed issues that broke the telemetry websocket: \n- Fixed an issue that caused the telemetry websocket to be blocked by latency while flushing Vitals to database. By using a queue as a buffer, the process of receiving Vitals data from the data plane is now decoupled from the process of flushing Vitals to the database on the control plane.\n- Fixed an issue that broke the telemetry websocket in Konnect mode due to unexpected payloads when the counter of requests equals zero.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where you could receive an empty `request_id` when generating audit data.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an error that occurred when the header `x-datadog-parent-id` wasn’t passed to Kong Gateway.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a queueing-related issue that broke event hooks in 3.3.0.0.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Updated the datafile library to make the SAML plugin work when Kong Gateway is controlled by systemd.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where a workspace couldn’t attach to the cache’s consumer well.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a LuaJIT crash on Arm64 and enabled LuaJIT on M1.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the license couldn’t load when pulling `KONG_LICENSE_DATA` from a vault.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue on portal documentation pages, where disabling the Application Registration plugin didn’t remove the **Register** button from a service.",
        "type": "bugfix",
        "scope": "dev-portal"
      },
      {
        "message": "Fixed an issue with viewing OAS docs in the in the Dev Portal, where the UI would hang when attempting to expand an API.",
        "type": "bugfix",
        "scope": "dev-portal"
      },
      {
        "message": "Declarative config now performs proper uniqueness checks against its inputs. Previously, it would silently drop entries with conflicting primary/endpoint keys, or accept conflicting unique fields silently.[#11199](https://github.com/Kong/kong/pull/11199)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a bug where a worker consuming dynamic log level setting events used the wrong reference for notice logging.[#10897](https://github.com/Kong/kong/pull/10897)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Added a `User=` specification to the systemd unit definition so that Kong Gateway can be controlled by systemd again.[#11066](https://github.com/Kong/kong/pull/11066)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a bug that caused the sampling rate to be applied to individual spans, producing split traces.[#11135](https://github.com/Kong/kong/pull/11135)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a bug that caused the router to fail in `traditional_compatible` mode when a route with multiple paths and no service was created.[#11158](https://github.com/Kong/kong/pull/11158)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the `expressions` router couldn’t work correctly when `route.protocols` is set to `grpc` or `grpcs`.[#11082](https://github.com/Kong/kong/pull/11082)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the `expressions` router couldn’t configure HTTPS redirection.[#11166](https://github.com/Kong/kong/pull/11166)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Made the `kong vault get` CLI command work in DB-less mode by injecting the necessary directives into the Kong CLI `nginx.conf`.[#11127](https://github.com/Kong/kong/pull/11127)[#11291](https://github.com/Kong/kong/pull/11291)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where a crashing Go plugin server process would cause subsequent requests proxied through Kong Gateway to execute Go plugins with inconsistent configurations. The issue only affects scenarios where the same Go plugin is applied to different route or service entities.[#11306](https://github.com/Kong/kong/pull/11306)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue that caused `POST /config?flatten_errors=1` to throw an exception and return a 500 error under certain circumstances.[#10896](https://github.com/Kong/kong/pull/10896)",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "Fixed an issue where `/schemas/plugins/validate` endpoint failed to validate valid plugin configuration when the key of `custom_fields_by_lua` contained dot (`.`) character(s).[#11091](https://github.com/Kong/kong/pull/11091)",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "Removed the database information from the status API when operating in DB-less mode or on the data plane.[#10995](https://github.com/Kong/kong/pull/10995)",
        "type": "bugfix",
        "scope": "status-api"
      },
      {
        "message": "**OAuth 2.0 Introspection**: Fixed an issue where the plugin failed when processing a request with JSON that is not a table.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**gRPC Gateway**: Fixed an issue where an array with one element would fail to be encoded.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**gRPC Gateway**: Fixed an issue where empty (all default value) messages couldn’t be unframed correctly.[#10836](https://github.com/Kong/kong/pull/10836)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Response Transformer** and **Request Transformer Advanced**: Fixed an issue where the plugin wouldn’t transform the response body when the upstream returned a Content-Type with a `+json` suffix as the subtype.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID Connect**: Changed some log levels from `notice` to `error` for better visibility.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID Connect**: Correctly set the right table key on `log` and `message`.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID Connect**: If an invalid opaque token is provided but verification fails, the plugin now prints the correct error.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Mocking**: Fixed an issue where the plugin threw an error when the arbitrary elements were defined in the path node.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**mTLS Authentication**: Fixed several revocation verification issues: \n- If `revocation_check_mode=IGNORE_CA_ERROR`, then the CRL revocation failure will be ignored.\n- Once a CRL is added into the store, it will always do CRL revocation check with this CRL file.\n- OCSP verification failed with `no issuer certificate in chain` error if the client only sent a leaf certificate.\n- `http_timeout` wasn’t correctly set.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**mTLS Authentication**: If `revocation_check_mode=IGNORE_CA_ERROR`, then the CRL revocation failure will be ignored.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**mTLS Authentication**: Once a CRL is added into the store, it will always do CRL revocation check with this CRL file.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**mTLS Authentication**: OCSP verification failed with `no issuer certificate in chain` error if the client only sent a leaf certificate.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**mTLS Authentication**: `http_timeout` wasn’t correctly set.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**mTLS Authentication**: Optimized CRL revocation verification.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**mTLS Authentication**: Fixed an issue that would cause an unexpected error when `skip_consumer_lookup` is enabled and `authenticated_group_by` is set to `null`.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Kafka Log** and **Kafka Upstream**: Fixed an issue where the plugin could lose connection to a broker when the broker leadership changed.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAS Validation**: Fixed an issue where the plugin was unable to pass the validation even if path parameter was valid.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAS Validation**: Fixed an issue where the plugin always validated the request body even if the method spec had no `requestBody` defined.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAS Validation**: Fixed an issue where the comparison between large absolute value numbers could be incorrect due to the number being converted to exponential notation.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Request Validator**: Optimized the response message for invalid requests.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ACME**: Fixed an issue where the sanity test didn’t work with `kong` storage in hybrid mode.[#10852](https://github.com/Kong/kong/pull/10852)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Zipkin**: Fixed an issue where traces weren’t being generated correctly when instrumentations were enabled.[#10983](https://github.com/Kong/kong/pull/10983)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Bumped `kong-redis-cluster` from 1.5.0 to 1.5.1",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lua-resty-ljsonschema` from 1.1.3 to 1.15",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lua-resty-kafka` from 0.15 to 0.16",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lua-resty-aws` from 1.2.2 to 1.2.3",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lua-resty-openssl` from 0.8.20 to 0.8.23[#10837](https://github.com/Kong/kong/pull/10837)[#11099](https://github.com/Kong/kong/pull/11099)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `kong-lapis` from 1.8.3.1 to 1.14.0.2[#10841](https://github.com/Kong/kong/pull/10841)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lua-resty-events` from 0.1.4 to 0.2.0[#10883](https://github.com/Kong/kong/pull/10883)[#11083](https://github.com/Kong/kong/pull/11083)[#11214](https://github.com/Kong/kong/pull/11214)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lua-resty-session` from 4.0.3 to 4.0.4[#11011](https://github.com/Kong/kong/pull/11011)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `OpenSSL` from 1.1.1t to 3.1.1[#10180](https://github.com/Kong/kong/pull/10180)[#11140](https://github.com/Kong/kong/pull/11140)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `pgmoon` from 1.16.0 to 1.16.2 (Kong’s fork)[#11181](https://github.com/Kong/kong/pull/11181)[#11229](https://github.com/Kong/kong/pull/11229)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `atc-router` from 1.0.5 to 1.2.0[#10100](https://github.com/Kong/kong/pull/10100)[#11071](https://github.com/Kong/kong/pull/11071)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lua-resty-lmdb` from 1.1.0 to 1.3.0[#11227](https://github.com/Kong/kong/pull/11227)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Some referenceable configuration fields, such as the `http_endpoint` field of the `http-log` plugin and the `endpoint` field of the `opentelemetry` plugin, do not accept reference values due to incorrect field validation.",
        "type": "known-issues",
        "scope": "Core"
      },
      {
        "message": "When adding new plugins to the existing installation (either manually or via the extension of `bundled` plugins), the `kong migrations finish` or `kong migrations up` must be run with the `-f` flag to forcefully upgrade the plugin schemas.",
        "type": "known-issues",
        "scope": "Core"
      },
      {
        "message": "**Prometheus**: has been optimized to reduce proxy latency impacts during scraping. [#10949](https://github.com/Kong/kong/pull/10949)[#11040](https://github.com/Kong/kong/pull/11040)[#11065](https://github.com/Kong/kong/pull/11065)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Fixed an issue that impacted the accuracy with the `redis` policy. Thanks [@giovanibrioni](https://github.com/giovanibrioni) for contributing this change.[#10559](https://github.com/Kong/kong/pull/10559)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Validation for plugin queue related parameters has been improved. [#10840](https: `max_batch_size`, `max_entries`, and `max_bytes` are now declared as `integer` not `number`.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Validation for plugin queue related parameters has been improved. [#10840](https: `initial_retry_delay` and `max_retry_delay` must now be numbers greater than 0.001 (in seconds).",
        "type": "feature",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "Enhanced the user experience of editing pages for entities with a refined look and feel.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Simplified the user path by removing the configuration pages for nested entities.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where Kong Manager didn’t get the latest config when the Enterprise license was posted via the Admin API.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed incorrect CORS behavior that occurred when Kong Manager was integrated with the Portal GUI.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where OIDC in Kong Manager didn’t handle `invalid credentials` when providing the wrong username.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Added an alert message in the `admins tab` page for `workspace access` while the `admin_auth` is set to `openid-connect`.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the custom permission endpoint didn’t work for `/services/<service-name-or-id>/application_instances`.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Introduced the **Kong Manager Open Source Edition (OSS)**, a free and open-source UI for Kong Gateway OSS! [#11131](https://github.com/Kong/kong/pull/11131)\n\n[Kong Manager OSS](https://docs.konghq.com/gateway/latest/kong-manager-oss/) allows you to view and edit all Kong Gateway objects using the Admin API. It interacts directly with the Kong Admin API and does not require a separate database. This UI provides a great way to see all of your Kong Gateway configuration at glance.\n\nStarting with 3.4.0.0, Kong Manager OSS is bundled with Kong Gateway OSS. Install a new Kong Gateway OSS instance to try it out!\n\nThe quickest way to get started is using the [quickstart script](https://github.com/Kong/kong-manager#getting-started).\n\nCheck out the [Kong Manager OSS repo](https://github.com/Kong/kong-manager) to learn more about it.",
        "type": "feature",
        "scope": "Core"
      }
    ]
  },
  "3.3.1.0": {
    "kong-ee": [
      {
        "message": "Fixed a bug that causes `POST /config?flatten_errors=1` to throw an exception and return a 500 error under certain circumstances.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a bug that would cause an error when the header `x-datadog-parent-id` is not passed to Kong.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a queueing-related bug that meant the `event_hooks` did not fire and led to errors in the logs.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Updated the datafile library that meant when Kong was started with systemd, the SAML plugin did not load.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a bug that the anonymous report can’t be silenced by setting `anonymous_reports=false`.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a Jenkins issue where `kong/kong-gateway:3.3.0.0-alpine` was missing `resty.dns.resolver` patch.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue addressing occasional issues attaching a workspace with the cache’s consumer well.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue with the Oauth 2.0 Introspection plugin where a request with JSON that is not a table failed.: ",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Alpine deprecation reminder:** Kong has announced our intent to remove support for Alpine images and packages later this year. These images and packages are available in 3.2 and will continue to be available in 3.3. We will stop building Alpine images and packages in Kong Gateway 3.4.",
        "type": "deprecation",
        "scope": "Core"
      },
      {
        "message": "**Cassandra deprecation and removal reminder:** Using Cassandra as a backend database for Kong Gateway is deprecated. It is planned for removal with Kong Gateway 3.4.",
        "type": "deprecation",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "3.3.0.0": {
    "kong-ee": [
      {
        "message": "**Alpine deprecation reminder:** Kong has announced our intent to remove support for Alpine images and packages later this year. These images and packages are still available in 3.3. We will stop building Alpine images and packages in Kong Gateway 3.4.",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "**Cassandra deprecation and removal reminder:** Using Cassandra as a backend database for Kong Gateway is deprecated. It is planned for removal with Kong Gateway 3.4.",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "The `traditional_compat` router mode has been made more compatible with the behavior of `traditional` mode by splitting routes with multiple paths into multiple `atc` routes with separate priorities. Since the introduction of the new router in Kong Gateway 3.0, `traditional_compat` mode assigned only one priority to each route, even if different prefix path lengths and regular expressions were mixed in a route. This was not how multiple paths were handled in the`traditional` router and the behavior has now been changed so that a separate priority value is assigned to each path in a route.[#10615](https://github.com/Kong/kong/pull/10615)",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "**Tracing** : `tracing_sampling_rate` now defaults to 0.01 (trace one of every 100 requests) instead of the previous 1 (trace all requests). Tracing all requests causes unnecessary resource drain for most production systems.[#10774](https://github.com/Kong/kong/pull/10774)",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "Plugin batch queuing: The module `kong.tools.batch_queue` has been renamed to `kong.tools.queue` and the API was changed. If your custom plugin uses queues, it must be updated to use the new API.[#10172](https://github.com/Kong/kong/pull/10172)",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**AppDynamics**: The plugin version has been updated to match Kong Gateway’s version.",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**HTTP Log**: If the log server responds with a 3xx HTTP status code, the plugin now considers it to be an error and retries according to the retry configuration. Previously, 3xx status codes would be interpreted as a success, causing the log entries to be dropped.[#10172](https://github.com/Kong/kong/pull/10172)",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "When using the [data plane resilience feature](https://docs.konghq.com/gateway/latest/kong-enterprise/cp-outage-handling-faq/), the server-side certificate of the backend Amazon S3 or GCP Cloud Storage service will now be validated if it goes through HTTPS.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "When [managing secrets](https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/) with an AWS or GCP backend, the backend server’s certificate is now validated if it goes through HTTPS.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Kong Enterprise now supports [using AWS IAM database authentication to connect to the Amazon RDS](https://docs.konghq.com/gateway/latest/kong-enterprise/aws-iam-auth-to-rds-database/) (PostgreSQL) database.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Kong Manager: \n- Kong Manager and Konnect now share the same UI for the navbar, sidebar, and all entity lists.\n- Improved display for the routes list when the expressions router is enabled.\n- **CA Certificates** and **TLS Verify** are now supported in the Kong Gateway service form.\n- Added a GitHub star in the free mode navbar.\n- Upgraded the Konnect CTA in free mode.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "SBOM files in SPDX and CycloneDX are now generated for Kong Gateway’s Docker images.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "You can now configure [labels for data planes](https://docs.konghq.com/konnect/runtime-manager/runtime-instances/custom-dp-labels/)to provide metadata information for Konnect.[#10471](https://github.com/Kong/kong/pull/10471)",
        "type": "feature",
        "scope": "kong-gateway-with-konnect"
      },
      {
        "message": "Sending analytics to Konnect from Kong Gateway DB-less mode is now supported.",
        "type": "feature",
        "scope": "kong-gateway-with-konnect"
      },
      {
        "message": "`runloop` and `init` error response content types are now compliant with the `Accept` header value.[#10366](https://github.com/Kong/kong/pull/10366)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "You can now configure custom error templates.[#10374](https://github.com/Kong/kong/pull/10374)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "The maximum number of request headers, response headers, URI arguments, and POST arguments that are parsed by default can now be configured with the following new configuration parameters:[`lua_max_req_headers`](https://docs.konghq.com/gateway/latest/reference/configuration/#lua_max_req_headers), [`lua_max_resp_headers`](https://docs.konghq.com/gateway/latest/reference/configuration/#lua_max_resp_headers), [`lua_max_uri_args`](https://docs.konghq.com/gateway/latest/reference/configuration/#lua_max_uri_args), and [`lua_max_post_args`](https://docs.konghq.com/gateway/latest/reference/configuration/#lua_max_post_args).[#10443](https://github.com/Kong/kong/pull/10443)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added PostgreSQL triggers on the core entites and entities in bundled plugins to delete expired rows in an efficient and timely manner.[#10389](https://github.com/Kong/kong/pull/10389)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added support for configurable node IDs.[#10385](https://github.com/Kong/kong/pull/10385)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Request and response buffering options are now enabled for incoming HTTP 2.0 requests.\n\nThanks [@PidgeyBE](https://github.com/PidgeyBE) for contributing this change. [#10204](https://github.com/Kong/kong/pull/10204) [#10595](https://github.com/Kong/kong/pull/10595)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added `KONG_UPSTREAM_DNS_TIME` to `ngx.ctx` to record the time it takes for DNS resolution when Kong proxies to an upstream.[#10355](https://github.com/Kong/kong/pull/10355)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Dynamic log levels now have a default timeout of 60 seconds.[#10288](https://github.com/Kong/kong/pull/10288)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added a new `updated_at` field for the following entities: `ca_certificates`, `certificates`, `consumers`, `targets`, `upstreams`, `plugins`, `workspaces`, `clustering_data_planes`, `consumer_group_consumers`, `consumer_group_plugins`, `consumer_groups`, `credentials`, `document_objects`, `event_hooks`, `files`, `group_rbac_roles`, `groups`, `keyring_meta`, `legacy_files`, `login_attempts`, `parameters`, `rbac_role_endpoints`, `rbac_role_entities`, `rbac_roles`, `rbac_users`, and `snis`.[#10400](https://github.com/Kong/kong/pull/10400)",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "The `/upstreams/<upstream>/health?balancer_health=1` endpoint always shows the balancer health through a new attribute: `balancer_health`. This always returns `HEALTHY` or `UNHEALTHY`, reporting the true state of the balancer, even if the overall upstream health status is `HEALTHCHECKS_OFF`. This is useful for debugging.[#5885](https://github.com/Kong/kong/pull/5885)",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "**Beta** : OpenAPI specs are now available for the Kong Gateway Admin API: \n- [Kong Gateway Admin API - OSS spec](https://docs.konghq.com/gateway/api/admin-oss/3.3.x/)\n- [Kong Gateway Admin API - Enterprise spec](https://docs.konghq.com/gateway/api/admin-ee/3.3.0.x/)",
        "type": "feature",
        "scope": "Admin API"
      },
      {
        "message": "The `status_listen` server has been enhanced with the addition of the`/status/ready` API for monitoring Kong Gateway’s health. This endpoint provides a `200` response upon receiving a `GET` request, but only if a valid, non-empty configuration is loaded and Kong Gateway is prepared to process user requests.\n\nLoad balancers frequently utilize this functionality to ascertain Kong Gateway’s availability to distribute incoming requests. [#10610](https://github.com/Kong/kong/pull/10610)[#10787](https://github.com/Kong/kong/pull/10787)",
        "type": "feature",
        "scope": "status-api"
      },
      {
        "message": "**Beta** : An OpenAPI spec is now available for the [Kong Gateway Status API](https://docs.konghq.com/gateway/api/status/v1/).",
        "type": "feature",
        "scope": "status-api"
      },
      {
        "message": "The PDK now supports getting a plugin’s ID with `kong.plugin.get_id`.[#9903](https://github.com/Kong/kong/pull/9903)",
        "type": "feature",
        "scope": "PDK"
      },
      {
        "message": "Tracing module: Renamed spans to simplify filtering on tracing backends. See [`kong.tracing`](https://docs.konghq.com/gateway/latest/plugin-development/pdk/kong.tracing/) for details. [#10577](https://github.com/Kong/kong/pull/10577)",
        "type": "feature",
        "scope": "PDK"
      },
      {
        "message": "**ACME**: This plugin now supports configuring an `account_key` in `keys` and `key_sets`.[#9746](https://github.com/Kong/kong/pull/9746)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**ACME**: This plugin now supports configuring a `namespace` for Redis storage, which defaults to an empty string for backwards compatibility.[#10562](https://github.com/Kong/kong/pull/10562)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Proxy Cache**: Added the configuration parameter `ignore_uri_case` to allow handling the cache key URI as lowercase.[#10453](https://github.com/Kong/kong/pull/10453)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Proxy Cache Advanced**: Added wildcard and parameter match support for `content_type`.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Proxy Cache Advanced**: Added the configuration parameter `ignore_uri_case` to allow handling the cache key URI as lowercase.[#10453](https://github.com/Kong/kong/pull/10453)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**HTTP Log**: Added the `application/json; charset=utf-8` option for the `Content-Type` header to support log collectors that require that character set declaration.[#10533](https://github.com/Kong/kong/pull/10533)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Datadog**: The `host` configuration parameter is now referenceable.[#10484](https://github.com/Kong/kong/pull/10484)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Zipkin** and **OpenTelemetry**: These plugins now convert `traceid` in HTTP response headers to hex format.[#10534](https://github.com/Kong/kong/pull/10534)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OpenTelemetry**: Spans are now correctly correlated in downstream Datadog traces.[10531](https://github.com/Kong/kong/pull/10531)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OpenTelemetry**: Added the `header_type` field. Previously, the `header_type` was hardcoded to `preserve`. Now it can be set to one of the following values: `preserve`, `ignore`, `b3`, `b3-single`,`w3c`, `jaeger`, or `ot`.[#10620](https://github.com/Kong/kong/pull/10620)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OpenTelemetry**: Added the new span attribute `http.client_ip` to capture the client IP when behind a proxy.[#10723](https://github.com/Kong/kong/pull/10723)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OpenTelemetry**: Added the `http_response_header_for_traceid` configuration parameter. Setting a string value in this field sets a corresponding header in the response.[#10379](https://github.com/Kong/kong/pull/10379)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**AWS Lambda**: Added the configuration parameter `disable_https` to support scheme configuration on the lambda service API endpoint.[#9799](https://github.com/Kong/kong/pull/9799)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Request Transformer Advanced**: The plugin now honors the following Kong Gateway configuration parameters: `untrusted_lua`, `untrusted_lua_sandbox_requires`, `untrusted_lua_sandbox_environment`. These parameters apply to advanced templates (Lua expressions).",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Request Validator**: Errors are now logged for validation failures.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**JWT Signer**: Added the configuration field `add_claims`, which lets you add extra claims to JWT.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "The Kong Enterprise systemd unit was incorrectly renamed to `kong.service` in 3.2.x.x versions. It has now been reverted back to `kong-enterprise-edition.service` to keep consistent with previous releases.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where Kong Gateway failed to generate a keyring when RBAC was enabled.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed `lua_ssl_verify_depth` in FIPS mode to match the same depth of normal mode.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Removed the email field from the developer registration response.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Websocket requests now generate balancer spans when tracing is enabled.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where management of licenses via the `/licenses/` endpoint would fail if the current license is not valid.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Resolved an issue with the plugin iterator where sorting would become mixed up when dynamic reordering was applied. This fix ensures proper sorting behavior in all scenarios.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Kong Manager: \n- Fixed an issue where changing the vault name in Kong Manager would throw an error.\n- Fixed an issue with tabs, where vertical tab content became blank when selecting a tab that is currently active.\n- Fixed an issue where the `/register` route occasionally jumped to `/login` instead.\n- Removed the **Custom Identifier** field from the StatsD plugin. This field appeared in Kong Manager under Metrics, but the field doesn’t exist in the plugin’s schema.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "The standard expired license notification no longer appears in logs for data planes running in Konnect mode (`konnect_mode=on`), as it does not apply to them.",
        "type": "bugfix",
        "scope": "kong-gateway-with-konnect"
      },
      {
        "message": "New license alert behavior for data planes running in Konnect mode: \n- If there are at least 16 days left before expiration, no alerts are issued.\n- If the license expires within 16 days, a warning level alert is issued every day.\n- If the license is expired, a critical level alert is issued every day.",
        "type": "bugfix",
        "scope": "kong-gateway-with-konnect"
      },
      {
        "message": "Fixed an issue where the upstream keepalive pool had a CRC32 collision.[#9856](https://github.com/Kong/kong/pull/9856)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Hybrid mode: \n- Fixed an issue where the control plane didn’t downgrade configuration for the AWS Lambda and Zipkin plugins for older versions of data planes.[#10346](https://github.com/Kong/kong/pull/10346)\n- Fixed an issue where the control plane didn’t rename fields correctly for the Session plugin for older versions of data planes.[#10352](https://github.com/Kong/kong/pull/10352)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where validation of regex routes was occasionally skipped when the old-fashioned config style was used for DB-less Kong Gateway.[#10348](https://github.com/Kong/kong/pull/10348)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where tracing could cause unexpected behavior.[#10364](https://github.com/Kong/kong/pull/10364)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where balancer passive healthchecks would use the wrong status code when Kong Gateway changed the status code from the upstream in the `header_filter` phase. [#10325](https://github.com/Kong/kong/pull/10325)[#10592](https://github.com/Kong/kong/pull/10592)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where schema validations failing in a nested record did not propagate the error correctly.[#10449](https://github.com/Kong/kong/pull/10449)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where dangling Unix sockets would prevent Kong Gateway from restarting in Docker containers if it was not cleanly stopped.[#10468](https://github.com/Kong/kong/pull/10468)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the sorting function for traditional router sources or destinations led to `invalid order function for sorting` errors.[#10514](https://github.com/Kong/kong/pull/10514)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed the UDP socket leak in `resty.dns.client` caused by frequent DNS queries.[#10691](https://github.com/Kong/kong/pull/10691)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a typo in the mlcache option `shm_set_tries`.[#10712](https://github.com/Kong/kong/pull/10712)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where a slow startup of the Go plugin server caused a deadlock.[#10561](https://github.com/Kong/kong/pull/10561)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Tracing: \n- Fixed an issue that caused the `sampled` flag of incoming propagation headers to be handled incorrectly and only affect some spans.[#10655](https://github.com/Kong/kong/pull/10655)\n- Fixed an issue that was preventing `http_client` spans from being created for OpenResty HTTP client requests.[#10680](https://github.com/Kong/kong/pull/10680)\n- Fixed an approximation issue that resulted in reduced precision of the balancer span start and end times.[#10681](https://github.com/Kong/kong/pull/10681)\n- `tracing_sampling_rate` now defaults to 0.01 (trace one of every 100 requests) instead of the previous 1 (trace all requests). Tracing all requests causes unnecessary resource drain for most production systems.[#10774](https://github.com/Kong/kong/pull/10774)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue with vault references, which caused Kong Gateway to error out when trying to stop.[#10775](https://github.com/Kong/kong/pull/10775)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where vault configuration stayed sticky and cached even when configurations were changed.[#10776](https://github.com/Kong/kong/pull/10776)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed the following PostgreSQL TTL clean-up timer issues: \n- Timers will now only run on traditional and control plane nodes that have enabled the Admin API.[#10405](https://github.com/Kong/kong/pull/10405)\n- Kong Gateway now runs a batch delete loop on each TTL-enabled table with a number of `50.000` rows per batch.[#10407](https://github.com/Kong/kong/pull/10407)\n- The cleanup job now runs every 5 minutes instead of every 60 seconds.[#10389](https://github.com/Kong/kong/pull/10389)\n- Kong Gateway now deletes expired rows based on the database server-side timestamp to avoid potential problems caused by the differences in clock time between Kong Gateway and the database server.[#10389](https://github.com/Kong/kong/pull/10389)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where an empty value for the URI argument `custom_id` crashed the `/consumer` API.[#10475](https://github.com/Kong/kong/pull/10475)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "`request.get_uri_captures` now returns the unnamed part tagged as an array for jsonification.[#10390](https://github.com/Kong/kong/pull/10390)",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "Fixed an issue for tracing PDK where the sampling rate didn’t work.[#10485](https://github.com/Kong/kong/pull/10485)",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "**JWE Decrypt**, **OAS Validation**, and **Vault Authentication**: Added the missing schema field `protocols` for `jwe-decrypt`, `oas-validation`, and `vault-auth`.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: The `redis` rate limiting strategy now returns an error when Redis Cluster is down.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Fixed an issue where the rate limiting `cluster_events` broadcast the wrong data in traditional cluster mode.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: The control plane no longer creates namespace or syncs.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**StatsD Advanced**: Changed the plugin’s name to `statsd-advanced` instead of `statsd`.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**LDAP Authentication Advanced**: The plugin now performs authentication before authorization, and returns a 403 HTTP code when a user isn’t in the authorized groups.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**LDAP Authentication Advanced**: The plugin now supports setting the groups to an empty array when groups are not empty.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenTelemetry**: Fixed an issue where reconfiguring the plugin didn’t take effect.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenTelemetry**: Fixed an issue that caused spans to be propagated incorrectly resulting in the wrong hierarchy being rendered on tracing backends.[#10663](https://github.com/Kong/kong/pull/10663)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Request Validator**: Fixed an issue where the validation function for the `allowed_content_types` parameter was too strict, making it impossible to use media types that contained a `-` character.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Forward Proxy**: Fixed an issue which caused the wrong `latencies.proxy` to be used in the logging plugins. This plugin now evaluates `ctx.WAITING_TIME` in the forward proxy instead of doing it in the subsequent phase.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Request Termination**: Fixed an issue with the `echo` option, which caused the plugin to not return the `uri-captures`.[#10390](https://github.com/Kong/kong/pull/10390)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Request Transformer**: Fixed an issue where requests would intermittently be proxied with incorrect query parameters.[10539](https://github.com/Kong/kong/pull/10539)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Request Transformer**: The plugin now honors the value of the `untrusted_lua` configuration parameter.[#10327](https://github.com/Kong/kong/pull/10327)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAuth2**: Fixed an issue where the OAuth2 token was being cached as `nil` if the wrong service was accessed first.[#10522](https://github.com/Kong/kong/pull/10522)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAuth2**: This plugin now prevents an authorization code created by one plugin instance from being exchanged for an access token created by a different plugin instance.[#10011](https://github.com/Kong/kong/pull/10011)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**gRPC Gateway**: Fixed an issue where having a `null` value in the JSON payload caused an uncaught exception to be thrown during `pb.encode`.[#10687](https://github.com/Kong/kong/pull/10687)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**gRPC Gateway**: Fixed an issue where empty arrays in JSON were incorrectly encoded as `\"{}\"`. They are now encoded as `\"[]\"` to comply with standards.[#10790](https://github.com/Kong/kong/pull/10790)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Updated the datafile library dependency to fix the following issues: \n- Kong Gateway didn’t work when installed on a read-only file system.\n- Kong Gateway didn’t work when started from systemd.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lua-resty-session` from 4.0.2 to 4.0.3[#10338](https://github.com/Kong/kong/pull/10338)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lua-protobuf` from 0.3.3 to 0.5.0[#10137](https://github.com/Kong/kong/pull/10413)[#10790](https://github.com/Kong/kong/pull/10790)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lua-resty-timer-ng` from 0.2.3 to 0.2.5[#10419](https://github.com/Kong/kong/pull/10419)[#10664](https://github.com/Kong/kong/pull/10664)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lua-resty-openssl` from 0.8.17 to 0.8.20[#10463](https://github.com/Kong/kong/pull/10463)[#10476](https://github.com/Kong/kong/pull/10476)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lua-resty-http` from 0.17.0.beta.1 to 0.17.1[#10547](https://github.com/Kong/kong/pull/10547)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lua-resty-aws` from 1.1.2 to 1.2.2",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lua-resty-gcp` from 0.0.11 to 0.0.12",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `LuaSec` from 1.2.0 to 1.3.1[#10528](https://github.com/Kong/kong/pull/10528)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lua-resty-acme` from 0.10.1 to 0.11.0[#10562](https://github.com/Kong/kong/pull/10562)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lua-resty-events` from 0.1.3 to 0.1.4[#10634](https://github.com/Kong/kong/pull/10634)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lua-kong-nginx-module` from 0.5.1 to 0.6.0[#10288](https://github.com/Kong/kong/pull/10288)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lua-resty-lmdb` from 1.0.0 to 1.1.0[#10766](https://github.com/Kong/kong/pull/10766)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `kong-openid-connect` from 2.5.4 to 2.5.5",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Due to known issues, Kong recommends not enabling page-level LMDB encryption in versions 3.0.x-3.3.x.\n\nDon’t set `declarative_config_encryption_mode`; leave it at its default value of `off`. Continue relying on disk-level encryption to encrypt the configuration on disk.",
        "type": "known-issues",
        "scope": "Core"
      },
      {
        "message": "When sending an invalid configuration to the `/config` endpoint while running in DB-less mode and with `flatten_errors=1` set, Kong Gateway incorrectly returns a 500. This should be a 400 because the configuration is invalid.",
        "type": "known-issues",
        "scope": "Core"
      },
      {
        "message": "When the OpenID Connect (OIDC) plugin is configured to reference HashiCorp Vault in the `config.client_secret` field (for example, `{vault://hcv/clientSecret}`), it does not look up the secret correctly.",
        "type": "known-issues",
        "scope": "Core"
      },
      {
        "message": "Plugin batch queuing: [HTTP Log](/plugins/http-log/), [StatsD](/plugins/statsd/), [OpenTelemetry](/plugins/opentelemetry/), and [Datadog](/plugins/datadog/) \n\nThe queuing system has been reworked, causing some plugin parameters to not function as expected anymore. If you use queues in these plugins, new parameters must be configured. See each plugin’s documentation for details.",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**Zipkin**: This plugin now uses queues for internal buffering. The standard queue parameter set is available to control queuing behavior.[#10753](https://github.com/Kong/kong/pull/10753)",
        "type": "breaking_change",
        "scope": "Plugin"
      },
      {
        "message": "**Pre-function** and **Post-function**: `kong.cache` now points to a cache instance that is dedicated to the Serverless Functions plugins. It does not provide access to the global Kong Gateway cache. Access to certain fields in `kong.conf` has also been restricted.[#10417](https://github.com/Kong/kong/pull/10417)",
        "type": "breaking_change",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": []
  },
  "3.2.1.0": {
    "kong-ee": [
      {
        "message": "Deprecated Alpine Linux images and packages.\n\nKong is announcing our intent to remove support for Alpine images and packages later this year. These images and packages are available in 3.2 and will continue to be available in 3.3. We will stop building Alpine images and packages in Kong Gateway 3.4.",
        "type": "deprecation",
        "scope": "Core"
      },
      {
        "message": "The default PostgreSQL SSL version has been bumped to TLS 1.2. In `kong.conf`:\n\n- The default [`pg_ssl_version`](https://docs.konghq.com/gateway/latest/reference/configuration/#postgres-settings) is now `tlsv1_2`.\n- Constrained the valid values of this configuration option to only accept the following: `tlsv1_1`, `tlsv1_2`, `tlsv1_3` or `any`.\n\nThis mirrors the setting `ssl_min_protocol_version` in PostgreSQL 12.x and onward. See the [PostgreSQL documentation](https://postgresqlco.nf/doc/en/param/ssl_min_protocol_version/) for more information about that parameter.\n\nTo use the default setting in `kong.conf`, verify that your Postgres server supports TLS 1.2 or higher versions, or set the TLS version yourself. TLS versions lower than `tlsv1_2` are already deprecated and considered insecure from PostgreSQL 12.x onward.",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "Added the [`allow_debug_header`](https://docs.konghq.com/gateway/latest/reference/configuration/#allow_debug_header) configuration property to `kong.conf` to constrain the `Kong-Debug` header for debugging. This option defaults to `off`.\n\nIf you were previously relying on the `Kong-Debug` header to provide debugging information, set `allow_debug_header: on` to continue doing so.",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "[**JWT plugin**](/plugins/jwt/) (`jwt`)\n\n- The JWT plugin now denies any request that has different tokens in the JWT token search locations.[#9946](https: The JWT plugin now denies any request that has different tokens in the JWT token search locations.[#9946](https://github.com/Kong/kong/pull/9946)",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "Sessions library upgrade [#10199](https://github.com/Kong/kong/pull/10199):\n\n- The [`lua-resty-session`](https://github.com/bungle/lua-resty-session) library has been upgraded to v4.0.0. This version includes a full rewrite of the session library, and is not backwards compatible.<br>This library is used by the following plugins: [**Session**](/plugins/session/), [**OpenID Connect**](/plugins/openid-connect/), and [**SAML**](/plugins/saml/). This also affects any session configuration that uses the Session or OpenID Connect plugin in the background, including sessions for Kong Manager and Dev Portal.<br>All existing sessions are invalidated when upgrading to this version. For sessions to work as expected in this version, all nodes must run Kong Gateway 3.2.x or later. For that reason, we recommend that during upgrades, proxy nodes with mixed versions run for as little time as possible. During that time, the invalid sessions could cause failures and partial downtime.\n\n- Parameters:\n\n  - The new parameter `idling_timeout`, which replaces `cookie_lifetime`, now has a default value of 900. Unless configured differently, sessions expire after 900 seconds (15 minutes) of idling.\n  - The new parameter `absolute_timeout` has a default value of 86400. Unless configured differently, sessions expire after 86400 seconds (24 hours).\n  - Many session parameters have been renamed or removed. Although your configuration will continue to work as previously configured, we recommend adjusting your configuration to avoid future unexpected behavior. Refer to the [upgrade guide for 3.2](https://docs.konghq.com/gateway/latest/upgrade/#session-library-upgrade) for all session configuration changes and guidance on how to convert your existing session configuration.",
        "type": "breaking_change",
        "scope": "Core"
      },
      {
        "message": "Changed the underlying operating system (OS) for our convenience Docker tags (for example, `latest`, `3.2.1.0`, `3.2`) from Debian to Ubuntu.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "When `router_flavor` is set to`traditional_compatible`, Kong Gateway verifies routes created using the expression router instead of the traditional router to ensure created routes are compatible.[#9987](https://github.com/Kong/kong/pull/9987)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "In DB-less mode, the `/config` API endpoint can now flatten all schema validation errors into a single array using the optional `flatten_errors` query parameter.[#10161](https://github.com/Kong/kong/pull/10161)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "The upstream entity now has a new load balancing algorithm option: [`latency`](https://docs.konghq.com/gateway/latest/how-kong-works/load-balancing/#balancing-algorithms). This algorithm chooses a target based on the response latency of each target from prior requests.[#9787](https://github.com/Kong/kong/pull/9787)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "The Nginx `charset` directive can now be configured with Nginx directive injections. Set it in Kong Gateway’s configuration with [`nginx_http_charset`](https://docs.konghq.com/gateway/latest/reference/configuration/#nginx_http_charset)[#10111](https://github.com/Kong/kong/pull/10111)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "The services upstream TLS configuration is now extended to the stream subsystem.[#9947](https://github.com/Kong/kong/pull/9947)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added the new configuration parameter [`ssl_session_cache_size`](https://docs.konghq.com/gateway/latest/reference/configuration/#ssl_session_cache_size), which lets you set the Nginx directive `ssl_session_cache`. This configuration parameter defaults to `10m`. Thanks [Michael Kotten](https://github.com/michbeck100) for contributing this change.[#10021](https://github.com/Kong/kong/pull/10021)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "[`status_listen`](https://docs.konghq.com/gateway/latest/reference/configuration/#status_listen) now supports HTTP2. [#9919](https://github.com/Kong/kong/pull/9919)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "The shared Redis connector now supports username + password authentication for cluster connections, improving on the existing single-node connection support. This automatically applies to all plugins using the shared Redis configuration.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**FIPS Support**: \n- The OpenID Connect, Key Authentication - Encrypted, and JWT Signer plugins are now [FIPS 140-2 compliant](https://docs.konghq.com/gateway/latest/kong-enterprise/fips-support/).\nIf you are migrating from Kong Gateway 3.1 to 3.2 in FIPS mode and are using the `key-auth-enc` plugin, you should send [PATCH or POST requests](/plugins/key-auth-enc/#create-a-key) to all existing `key-auth-enc` credentials to re-hash them in SHA256.\n\n- FIPS-compliant Kong Gateway packages now support PostgreSQL SSL connections.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**Plugin entity**: Added an optional `instance_name` field, which identifies a particular plugin entity.[#10077](https://github.com/Kong/kong/pull/10077): ",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Zipkin**: Added support for setting the durations of Kong phases as span tags through the configuration property `phase_duration_flavor`.[#9891](https://github.com/Kong/kong/pull/9891)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**HTTP Log**: The `headers` configuration parameter is now referenceable, which means it can be securely stored in a vault.[#9948](https://github.com/Kong/kong/pull/9948)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**AWS Lambda**: Added the configuration parameter `aws_imds_protocol_version`, which lets you select the IMDS protocol version. This option defaults to `v1` and can be set to `v2` to enable IMDSv2.[#9962](https://github.com/Kong/kong/pull/9962)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OpenTelemetry**: This plugin can now be scoped to individual services, routes, and consumers.[#10096](https://github.com/Kong/kong/pull/10096)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**StatsD**: Added the `tag_style` configuration parameter, which allows the plugin to send metrics with [tags](https://github.com/prometheus/statsd_exporter#tagging-extensions). The parameter defaults to `nil`, which means that no tags are added to the metrics.[#10118](https://github.com/Kong/kong/pull/10118)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Session**, **OpenID Connect**, and **SAML**: These plugins now use `lua-resty-session` v4.0.0.\n\nThis update includes new session functionalities such as configuring audiences to manage multiple sessions in a single cookie, global timeout, and persistent cookies.\n\nDue to this update, there are also a number of deprecated and removed parameters in these plugins. See the invidividual plugin documentation for the full list of changed parameters in each plugin.\n\n- [Session changelog](/plugins/session/#changelog)\n- [OpenID Connect changelog](/plugins/openid-connect/#changelog)\n- [SAML changelog](/plugins/saml/#changelog)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Session**, **OpenID Connect**, and **SAML**: [Session changelog](/plugins/session/#changelog)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Session**, **OpenID Connect**, and **SAML**: [OpenID Connect changelog](/plugins/openid-connect/#changelog)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Session**, **OpenID Connect**, and **SAML**: [SAML changelog](/plugins/saml/#changelog)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**GraphQL Rate Limiting Advanced** and **Rate Limiting Advanced**: In hybrid and DB-less modes, these plugins now support `sync_rate = -1` with any strategy, including the default `cluster` strategy.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OPA**: This plugin can now handle custom messages from the OPA server.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Canary**: Added a default value for the `start` field in the canary plugin. If not set, the start time defaults to the current timestamp.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Improved Plugin Documentation**: Split the plugin compatibility table into a technical compatibility page.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Improved Plugin Documentation**: Updated the plugin compatibility information for more clarity on supported network protocols and on entity scopes.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Improved Plugin Documentation**: Revised docs for the following plugins to include examples: \n- [CORS](/plugins/cors/)\n- [File Log](/plugins/file-log/)\n- [HTTP Log](/plugins/http-log/)\n- [JWT Signer](/plugins/jwt-signer/)\n- [Key Auth](/plugins/key-auth/)\n- [OpenID Connect](/plugins/openid-connect/)\n- [Rate Limiting Advanced](/plugins/rate-limiting-advanced/)\n- [SAML](/plugins/saml/)\n- [StatsD](/plugins/statsd/)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Improved Plugin Documentation**: [CORS](/plugins/cors/)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Improved Plugin Documentation**: [File Log](/plugins/file-log/)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Improved Plugin Documentation**: [HTTP Log](/plugins/http-log/)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Improved Plugin Documentation**: [JWT Signer](/plugins/jwt-signer/)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Improved Plugin Documentation**: [Key Auth](/plugins/key-auth/)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Improved Plugin Documentation**: [OpenID Connect](/plugins/openid-connect/)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Improved Plugin Documentation**: [Rate Limiting Advanced](/plugins/rate-limiting-advanced/)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Improved Plugin Documentation**: [SAML](/plugins/saml/)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Improved Plugin Documentation**: [StatsD](/plugins/statsd/)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Added back PostgreSQL `FLOOR` function when calculating `ttl`, so `ttl` is always returned as a whole integer.[#9960](https://github.com/Kong/kong/pull/9960)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Exposed PostreSQL connection pool configuration.[#9603](https://github.com/Kong/kong/pull/9603)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Nginx template** : The default charset is no longer added to the `Content-Type` response header when the upstream response doesn’t contain it.[#9905](https://github.com/Kong/kong/pull/9905)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where, after a valid declarative configuration was loaded, the configuration hash was incorrectly set to the value `00000000000000000000000000000000`.[#9911](https://github.com/Kong/kong/pull/9911)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Updated the batch queues module so that queues no longer grow without bounds if their consumers fail to process the entries. Instead, old batches are now dropped and an error is logged.[#10247](https://github.com/Kong/kong/pull/10247)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where `X-Kong-Upstream-Status` couldn’t be emitted when a response was buffered.[#10056](https://github.com/Kong/kong/pull/10056)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Improved the error message for invalid JWK entries.[#9904](https://github.com/Kong/kong/pull/9904)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the `#` character wasn’t parsed correctly from environment variables and vault references.[10132](https://github.com/Kong/kong/pull/10132)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where control plane didn’t downgrade configuration for the AWS Lambda and Zipkin plugins for older versions of data planes.[#10346](https://github.com/Kong/kong/pull/10346)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue in DB-less mode, where validation of regex routes could be skipped when using a configuration format older than `3.0`.[#10348](https://github.com/Kong/kong/pull/10348)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the forward proxy between the data plane and the control plane didn’t support telemetry port 8006.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fix the PostgreSQL mTLS error `bad client cert type`.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed issues with the Admin API’s `/licenses` endpoint: \n- The Enterprise license wasn’t being picked up by other nodes in a cluster.\n- Vitals routes weren’t accessible.\n- Vitals wasn’t showing up in hybrid mode.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed RBAC issues: \n- Fixed an issue where workspace admins couldn’t add rate limiting policies to consumer groups.\n- Fixed an issue where workspace admins in one workspace would have admin rights in other workspaces. Workspace admins are now correctly restricted to their own workspaces.\n- Fixed a role precedence issue with RBAC. RBAC rules involving deny (negative) rules now correctly take precedence over allow (non-negative) roles.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Zipkin**: Fixed an issue where the global plugin’s sample ratio overrode the route-specific ratio.[#9877](https://github.com/Kong/kong/pull/9877)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Zipkin**: Fixed an issue where `trace-id` and `parent-id` strings with decimals were not processed correctly.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**JWT**: This plugin now denies requests that have different tokens in the JWT token search locations.\n\nThanks Jackson ‘Che-Chun’ Kuo from Latacora for reporting this issue.[#9946](https://github.com/Kong/kong/pull/9946)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Datadog**,**OpenTelemetry**, and **StatsD**: Fixed an issue in these plugins’ batch queue processing, where metrics would be published multiple times. This caused a memory leak, where memory usage would grow without limit.[#10052](https://github.com/Kong/kong/pull/10052) [#10044](https://github.com/Kong/kong/pull/10044)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenTelemetry**: Fixed non-compliances to specification: \n- For `http.uri` in spans, the field is now the full HTTP URI. [#10036](https://github.com/Kong/kong/pull/10036)\n- `http.status_code` is now present on spans for requests that have a status code. [#10160](https://github.com/Kong/kong/pull/10160)\n- `http.flavor` is now a string value, not a double. [#10160](https://github.com/Kong/kong/pull/10160)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenTelemetry**: For `http.uri` in spans, the field is now the full HTTP URI. [#10036](https://github.com/Kong/kong/pull/10036)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenTelemetry**: `http.status_code` is now present on spans for requests that have a status code. [#10160](https://github.com/Kong/kong/pull/10160)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenTelemetry**: `http.flavor` is now a string value, not a double. [#10160](https://github.com/Kong/kong/pull/10160)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenTelemetry**: Fixed an issue with getting the traces of other formats, where the trace ID reported and propagated could be of incorrect length. This caused traces originating from Kong Gateway to incorrectly connect with the target service, causing Kong Gateway and the target service to submit separate traces.[#10332](https://github.com/Kong/kong/pull/10332)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OAuth2**: `refresh_token_ttl` is now limited to a range between `0` and `100000000` by the schema validator. Previously, numbers that were too large caused requests to fail.[#10068](https://github.com/Kong/kong/pull/10068)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID Connect**: Fixed an issue where it was not possible to specify an anonymous consumer by name.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID Connect**: Fixed an issue where the `authorization_cookie_httponly` and `session_cookie_httponly` parameters would always be set to `true`, even if they were configured as `false`.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Matched the plugin’s behavior to the Rate Limiting plugin. When an `HTTP 429` status code was returned, rate limiting related headers were missed from the PDK module `kong.response.exit()`. This made the plugin incompatible with other Kong components like the Exit Transformer plugin.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Response Transformer**: Fixed an issue where the `allow.json` configuration parameter couldn’t use nested JSON object and array syntax.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Mocking**: Fixed UUID pattern matching.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**SAML**: Fixed an issue where the `session_cookie_httponly` parameter would always be set to `true`, even if it was configured as `false`.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Key Authentication Encrypted**: Fixed the `ttl` parameter. You can now set `ttl` for an encrypted key.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Key Authentication Encrypted**: Fixed an issue where this plugin didn’t accept tags.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Bumped`lua-resty-openssl` from 0.8.15 to 0.8.17",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `libexpat` from 2.4.9 to 2.5.0",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `kong-openid-connect` from v2.5.0 to v2.5.2",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `openssl` from 1.1.1q to 1.1.1t",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "`libyaml` is no longer built with Kong Gateway. System `libyaml` is used instead.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `luarocks` from 3.9.1 to 3.9.2[#9942](https://github.com/Kong/kong/pull/9942)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `atc-router` from 1.0.1 to 1.0.5[#9925](https://github.com/Kong/kong/pull/9925)[#10143](https://github.com/Kong/kong/pull/10143)[#10208](https://github.com/Kong/kong/pull/10208)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lua-resty-openssl` from 0.8.15 to 0.8.17[#9583](https://github.com/Kong/kong/pull/9583)[#10144](https://github.com/Kong/kong/pull/10144)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lua-kong-nginx-module` from 0.5.0 to 0.5.1[#10181](https://github.com/Kong/kong/pull/10181)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `lua-resty-session` from 3.10 to 4.0.0[#10199](https://github.com/Kong/kong/pull/10199)[#10230](https://github.com/Kong/kong/pull/10230)",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped `libxml` from 2.10.2 to 2.10.3 to resolve [CVE-2022-40303](https://nvd.nist.gov/vuln/detail/cve-2022-40303) and [CVE-2022-40304](https://nvd.nist.gov/vuln/detail/cve-2022-40304)",
        "type": "dependency",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "3.1.0.0": {
    "kong-ee": [
      {
        "message": "You can now specify the namespaces of HashiCorp Vaults for secrets management.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added support for HashiCorp Vault backends to retrieve a vault token from a Kubernetes service account. See the following configuration parameters: \n- [`keyring_vault_auth_method`](https://docs.konghq.com/gateway/latest/reference/configuration/#keyring_vault_auth_method)\n- [`keyring_vault_kube_role`](https://docs.konghq.com/gateway/latest/reference/configuration/#keyring_vault_kube_role)\n- [`keyring_vault_kube_api_token_file`](https://docs.konghq.com/gateway/latest/reference/configuration/#keyring_vault_kube_api_token_file)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "FIPS 140-2 packages: \n- Kong Gateway Enterprise now provides [FIPS 140-2 compliant packages for Red Hat Enterprise 8 and Ubuntu 22.04](https://docs.konghq.com/gateway/latest/kong-enterprise/fips-support/).\n- Kong Gateway FIPS distributions now support TLS connections to the PostgreSQL database.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "You can now [delete consumer group configurations](https://docs.konghq.com/gateway/latest/kong-enterprise/consumer-groups/#delete-consumer-group-configurations) without deleting the group or the consumers in it.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**Kong Manager** : \n- You can now configure the base path for Kong Manager, for example: `localhost:8445/manager`. This allows you to proxy all traffic through Kong Gateway. For example, you can proxy both API and Kong Manager traffic from one port. In addition, using the new Kong Manager base path allows you to add plugins to control access to Kong Manager. For more information, see [Enable Kong Manager](https://docs.konghq.com/gateway/latest/kong-manager/enable/).\n- You can now create consumer groups in Kong Manager. This allows you to define any number of rate limiting tiers and apply them to subsets of consumers instead of managing each consumer individually. For more information, see [Create Consumer Groups in Kong Manager](https://docs.konghq.com/gateway/latest/kong-manager/consumer-groups/).\n- You can now add `key-auth-enc` credentials to a consumer.\n- OpenID Connect plugin: More authorization variables have been added to the **Authorization** tab.\n- The Kong Manager overview tab has been optimized for performance.\n- You can now configure vaults for managing secrets through Kong Manager. Use the new Vaults menu to set up and manage any vaults that Kong Gateway supports. See the [Vault Backends references](https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/backends/)for descriptions of all the configuration options.\n- Added support for interfacing with dynamic plugin ordering.\n- Added the ability to view details about certificates.\n- Added tooltips to plugin UI with field descriptions.\n- Added support for persisting the page size of lists across pages and provided more options for page sizes.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Allow `kong.conf` SSL properties to be stored in vaults or environment variables. Allow such properties to be configured directly as content or base64 encoded content.[#9253](https://github.com/Kong/kong/pull/9253)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added support for full entity transformations in schemas.[#9431](https://github.com/Kong/kong/pull/9431)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "The schema `map` type field can now be marked as referenceable.[#9611](https://github.com/Kong/kong/pull/9611)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added support for [dynamically changing the log level](https://docs.konghq.com/gateway/latest/production/logging/update-log-level-dynamically/).[#9744](https://github.com/Kong/kong/pull/9744)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added support for the `keys` and `key-sets` entities. These are used for managing asymmetric keys in various formats (JWK, PEM). For more information, see [Key management](https://docs.konghq.com/gateway/latest/reference/key-management/).[#9737](https://github.com/Kong/kong/pull/9737)",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Data plane node IDs will now persist across restarts.[#9067](https://github.com/Kong/kong/pull/9067)",
        "type": "feature",
        "scope": "hybrid-mode"
      },
      {
        "message": "Added HTTP CONNECT forward proxy support for hybrid mode connections. New configuration options `cluster_use_proxy`, `proxy_server` and `proxy_server_ssl_verify` are added. For more information, see [CP/DP Communication through a Forward Proxy](https://docs.konghq.com/gateway/latest/production/networking/cp-dp-proxy/).[#9758](https://github.com/Kong/kong/pull/9758)[#9773](https://github.com/Kong/kong/pull/9773)",
        "type": "feature",
        "scope": "hybrid-mode"
      },
      {
        "message": "Increase the default value of `lua_regex_cache_max_entries`. A warning will be thrown when there are too many regex routes and `router_flavor` is `traditional`.[#9624](https://github.com/Kong/kong/pull/9624)",
        "type": "feature",
        "scope": "Performance"
      },
      {
        "message": "Add batch queue into the Datadog and StatsD plugins to reduce timer usage.[#9521](https://github.com/Kong/kong/pull/9521)",
        "type": "feature",
        "scope": "Performance"
      },
      {
        "message": "Kong Gateway now supports Amazon Linux 2022 with Enterprise packages.",
        "type": "feature",
        "scope": "os-support"
      },
      {
        "message": "Kong Gateway now supports Ubuntu 22.04 with both open-source and Enterprise packages.",
        "type": "feature",
        "scope": "os-support"
      },
      {
        "message": "Extend `kong.client.tls.request_client_certificate` to support setting the Distinguished Name (DN) list hints of the accepted CA certificates.[#9768](https://github.com/Kong/kong/pull/9768)",
        "type": "feature",
        "scope": "PDK"
      },
      {
        "message": "**AppDynamics**: Integrate Kong Gateway with the AppDynamics APM Platform.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**JWE Decrypt**: Allows you to decrypt an inbound token (JWE) in a request.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OAS Validation**: Validate HTTP requests and responses based on an OpenAPI 3.0 or Swagger API Specification.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**SAML**: Provides SAML v2.0 authentication and authorization between a service provider (Kong Gateway) and an identity provider (IdP).",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**XML Threat Protection**: This new plugin allows you to reduce the risk of XML attacks by checking the structure of XML payloads. This validates maximum complexity (depth of the tree), maximum size of elements and attributes.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**ACME**: Added support for Redis SSL, through configuration properties`config.storage_config.redis.ssl`, `config.storage_config.redis.ssl_verify`, and `config.storage_config.redis.ssl_server_name`.[#9626](https://github.com/Kong/kong/pull/9626)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**AWS Lambda**: Added `requestContext` field into `awsgateway_compatible` input data[#9380](https://github.com/Kong/kong/pull/9380)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "[**Authentication plugins**](/plugins/#authentication): The `anonymous` field can now be configured as the username of the consumer. This field allows you to configure a string to use as an “anonymous” consumer if authentication fails.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OpenTelemetry**: Added referenceable attribute to the `headers` field that could be stored in vaults.[#9611](https://github.com/Kong/kong/pull/9611)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Forward Proxy**: `x_headers` field added. This field indicates how the plugin handles the headers`X-Real-IP`, `X-Forwarded-For`, `X-Forwarded-Proto`, `X-Forwarded-Host`, and `X-Forwarded-Port`.\n\nThe field can take one of the following options:\n\n- `append`: append information from this hop in the chain to those headers. This is the default setting.\n- `transparent`: leave the headers unchanged, as if the the Kong Gateway was not a proxy.\n- `delete`: remove all the headers, as if the Kong Gateway was the originating client.\n\nNote that all options respect the trusted IP setting, and will ignore headers from the last hop in the chain if they are not from clients with trusted IPs.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Forward Proxy**: `append`: append information from this hop in the chain to those headers. This is the default setting.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Forward Proxy**: `transparent`: leave the headers unchanged, as if the the Kong Gateway was not a proxy.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Forward Proxy**: `delete`: remove all the headers, as if the Kong Gateway was the originating client.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Mocking**: Added the `included_status_codes` and `random_status_code` fields. These allow you to configure the HTTP status codes for the plugin.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Mocking**: The plugin now lets you auto-generate a random response based on the schema definition without defining examples.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Mocking**: You can now control behavior or obtain a specific response by sending behavioral headers: `X-Kong-Mocking-Delay`, `X-Kong-Mocking-Example-Id`, and `X-Kong-Mocking-Status-Code`.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Mocking**: This plugin now supports: \n- MIME types priority match\n- All HTTP codes\n- `$ref`",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Mocking**: MIME types priority match",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Mocking**: All HTTP codes",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Mocking**: `$ref`",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**mTLS Authentication**: Added the `config.send_ca_dn` configuration parameter to support sending CA DNs in the `CertificateRequest` message during SSL handshakes.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**mTLS Authentication**: Added the `allow_partial_chain` configuration parameter to allow certificate verification with only an intermediate certificate.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**OPA**: Added the `include_uri_captures_in_opa_input` field. When this field is set to true, the [regex capture groups](https://docs.konghq.com/gateway/latest/reference/proxy/#using-regex-in-paths) captured on the Kong Gateway route’s path field in the current request (if any) are included as input to OPA.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Proxy Cache Advanced**: Added support for integrating with Redis clusters through the `config.redis.cluster_addresses` configuration property.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting**: The HTTP status code and response body for rate-limited requests can now be customized. Thanks, [@utix](https://github.com/utix)! [#8930](https://github.com/Kong/kong/pull/8930)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Added support for deleting customer groups using the API.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: Added `config.disable_penalty` to control whether to count `429` or not in sliding window mode.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Request Transformer Advanced**: Added support for navigating nested JSON objects and arrays when transforming a JSON payload.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Request Transformer Advanced**: The plugin now supports vault references.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Request Validator**: The plugin now supports the `charset` option for the`config.allowed_content_types` parameter.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Response Rate Limiting**: Added support for Redis SSL through configuration properties`redis_ssl` (can be set to `true` or `false`), `ssl_verify`, and `ssl_server_name`. Thanks, [@dominikkukacka](https://github.com/dominikkukacka)! [#8595](https://github.com/Kong/kong/pull/8595)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Route Transformer Advanced**: Added the `config.escape_path` configuration parameter, which lets you escape the transformed path.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Vault Authentication**: Added support for KV Secrets Engine v2.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Zipkin**: Added the `response_header_for_traceid` field in Zipkin plugin. The plugin sets the corresponding header in the response if the field is specified with a string value.[#9173](https://github.com/Kong/kong/pull/9173)",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "WebSocket service/route support was added for logging plugins: http-log",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "WebSocket service/route support was added for logging plugins: file-log",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "WebSocket service/route support was added for logging plugins: udp-log",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "WebSocket service/route support was added for logging plugins: tcp-log",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "WebSocket service/route support was added for logging plugins: loggly",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "WebSocket service/route support was added for logging plugins: syslog",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "WebSocket service/route support was added for logging plugins: kafka-log",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "With Dynamic log levels, if you set log-level to `alert` you will still see `info` and `error` entries in the logs.",
        "type": "known-issues",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the RBAC token was not re-hashed after an update on the `user_token` field.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where `admin_gui_auth_conf` wouldn’t accept a JSON-formatted value, and was therefore unable to use vault references to secrets.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where Admin GUI logs were not stored in the correct log file.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where Kong Gateway was unable to start in free Enterprise mode while using vaults.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Updated the response body for the `TRACE` method request.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Targets with a weight of `0` are no longer included in health checks, and checking their status via the `upstreams/<upstream>/health` endpoint results in the status `HEALTHCHECK_OFF`. Previously, the `upstreams/<upstream>/health` endpoint was incorrectly reporting targets with `weight=0` as `HEALTHY`, and the health check was reporting the same targets as `UNDEFINED`.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Updated the Admin API response status code from `500` to `200` when the database is down.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue when passing a license from the control plane to the data plane using the Admin API `/licenses` endpoint.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "In hybrid mode, fixed a license issue where entity validation would fail when the license entity was not processed first.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a Websockets issue with redirects. Now, Kong Gateway redirects `ws`requests to `wss` for `wss`-only routes for parity with HTTP/HTTPS.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Kong Manager** : \n- Added logging for all Kong Manager access logs.\n- Fixed an issue where the **New Workspace** button was occasionally unusable.\n- Fixed the name display of plugin configurations in Kong Manager.\n- Fixed an issue where some items were missing from the suggestion list when there were many items present.\n- Removed the deprecated Vitals Reports feature from Kong Manager.\n- Fixed an issue where admins with permissions to interact with scoped entities, such as routes and services, couldn’t perform operations as expected.\n- Fixed an issue where admins with the `/admins` permission were forced to log out after signing in.\n- Fixed a performance issue where admins with a large number of workspace permissions caused Kong Manager to load slowly.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where external plugins crashing with unhandled exceptions would cause high CPU utilization after the automatic restart.[#9384](https://github.com/Kong/kong/pull/9384)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Added `use_srv_name` options to upstream for balancer.[#9430](https://github.com/Kong/kong/pull/9430)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue in `header_filter` instrumentation where the span was not correctly created.[#9434](https://github.com/Kong/kong/pull/9434)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue in router building in `traditional_compatible` mode. When the field contained an empty table, the generated expression was invalid.[#9451](https://github.com/Kong/kong/pull/9451)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue in router rebuilding where when the `paths` field is invalid, the router’s mutex is not released properly.[#9480](https://github.com/Kong/kong/pull/9480)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where `kong docker-start` would fail if `KONG_PREFIX` was set to a relative path.[#9337](https://github.com/Kong/kong/pull/9337)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue with error-handling and process cleanup in `kong start`.[#9337](https://github.com/Kong/kong/pull/9337)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed issue with prefix path normalization.[#9760](https://github.com/Kong/kong/pull/9760)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Increased the maximum request argument number of the Admin API from 100 to 1000. The Admin API now returns a `400` error if request parameters reach the limitation instead of truncating any parameters over the limit.[#9510](https://github.com/Kong/kong/pull/9510)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Paging size parameter is now propagated to next page if specified in current request.[#9503](https://github.com/Kong/kong/pull/9503)",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed a race condition that could cause configuration push events to be dropped when the first data plane connection was established with a control plane worker.[#9616](https://github.com/Kong/kong/pull/9616)",
        "type": "bugfix",
        "scope": "hybrid-mode"
      },
      {
        "message": "Fixed slow CLI performance due to pending timer jobs.[#9536](https://github.com/Kong/kong/pull/9536)",
        "type": "bugfix",
        "scope": "cli"
      },
      {
        "message": "Added support for `kong.request.get_uri_captures`(`kong.request.getUriCaptures`)[#9512](https://github.com/Kong/kong/pull/9512)",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "Fixed parameter type of `kong.service.request.set_raw_body`(`kong.service.request.setRawBody`), return type of`kong.service.response.get_raw_body`(`kong.service.request.getRawBody`), and body parameter type of `kong.response.exit` to bytes. Note that the old version of the go PDK is incompatible after this change.[#9526](https://github.com/Kong/kong/pull/9526)",
        "type": "bugfix",
        "scope": "PDK"
      },
      {
        "message": "Added the missing `protocols` field to the following plugin schemas: Azure Functions (`azure-functions`)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Added the missing `protocols` field to the following plugin schemas: gRPC Gateway (`grpc-gateway`)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Added the missing `protocols` field to the following plugin schemas: gRPC Web (`grpc-web`)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Added the missing `protocols` field to the following plugin schemas: Serverless pre-function (`pre-function`)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Added the missing `protocols` field to the following plugin schemas: Prometheus (`prometheus`)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Added the missing `protocols` field to the following plugin schemas: Proxy Caching (`proxy-cache`)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Added the missing `protocols` field to the following plugin schemas: Request Transformer (`request-transformer`)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Added the missing `protocols` field to the following plugin schemas: Session (`session`)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Added the missing `protocols` field to the following plugin schemas: Zipkin (`zipkin`)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**AWS Lambda**: Fixed an issue that was causing inability to read environment variables in ECS environment.[#9460](https://github.com/Kong/kong/pull/9460)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**AWS Lambda**: Specifying a null value for the `isBase64Encoded` field in lambda output now results in a more obvious error log entry with a `502` code.[#9598](https://github.com/Kong/kong/pull/9598)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Azure Functions**: Fixed an issue where calls made by this plugin would fail in the following situations: \n- The plugin was associated with a route that had no service.\n- The route’s associated service had a `path` value.[#9177](https://github.com/Kong/kong/pull/9177)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Azure Functions**: The plugin was associated with a route that had no service.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Azure Functions**: The route’s associated service had a `path` value.[#9177](https://github.com/Kong/kong/pull/9177)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**HTTP Log**: Fixed an issue where queue ID serialization did not include `queue_size` and `flush_timeout`.[#9789](https://github.com/Kong/kong/pull/9789)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Mocking**: Fixed an issue with `accept` headers not being split and not working with wildcards. The `;q=` (q-factor weighting) of `accept` headers is now supported.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OPA**: Removed redundant deprecated code from the plugin.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenTelemetry**: Fixed an issue that the default propagation header was not configured to `w3c` correctly.[#9457](https://github.com/Kong/kong/pull/9457)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenTelemetry**: Replaced the worker-level table cache with`BatchQueue` to avoid data race.[#9504](https://github.com/Kong/kong/pull/9504)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenTelemetry**: Fixed an issue that the `parent_id` was not set on the span when propagating w3c traceparent.[#9628](https://github.com/Kong/kong/pull/9628)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Proxy Cache Advanced**: The plugin now catches the error when Kong Gateway connects to Redis SSL port `6379` with `config.ssl=false`.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced**: The plugin now ensures that shared dict TTL is higher than `config.sync_rate`, otherwise Kong Gateway would lose all request counters in shared dict.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Request Transformer**: Fixed a bug when header renaming would override the existing header and cause unpredictable results.[#9442](https://github.com/Kong/kong/pull/9442)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Request Termination**: The plugin no longer allows setting `status_code` to `null`.[#9400](https://github.com/Kong/kong/pull/9400)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Response Transformer**: Fixed the bug that the plugin would break when receiving an unexpected body.[#9463](https://github.com/Kong/kong/pull/9463)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Zipkin**: Fixed an issue where Zipkin plugin couldn’t parse OT baggage headers due to an invalid OT baggage pattern.[#9280](https://github.com/Kong/kong/pull/9280)",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "The legacy hybrid configuration protocol has been removed in favor of the wRPC protocol introduced in 3.0.0.0. Rolling upgrades from 2.8.x.y to 3.1.0.0 are not supported. Operators must upgrade to 3.0.x.x before they can perform a rolling upgrade to 3.1.0.0. For more information, see [Upgrade Kong Gateway 3.1.x](https://docs.konghq.com/gateway/3.1.x/upgrade/).[#9740](https://github.com/Kong/kong/pull/9740)",
        "type": "breaking_change",
        "scope": "hybrid-mode"
      },
      {
        "message": "**Session**: Added new config `cookie_persistent`, which allows the browser to persist cookies even if the browser is closed. This defaults to `false` which means cookies are not persisted across browser restarts. Thanks [@tschaume](https://github.com/tschaume)for this contribution! [#8187](https://github.com/Kong/kong/pull/8187)",
        "type": "feature",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": []
  },
  "3.4.3.19": {
    "kong": [],
    "kong-ee": [
      {
        "message": "Fixed an issue where `debug_listen` incorrectly used the SSL-related configuration of `status_listen`.\n",
        "type": "bugfix",
        "scope": "Configuration"
      },
      {
        "message": "Added a new configuration, `route_match_calculation`, which included bug fixes for the `traditional_compatible` router flavor.\nThe default value `original` retained the current `3.x` router matching behavior without changes. The value `strict` enforced the router matching behavior with corrected calculation as follows:\n1. The weight (priority point) of a route was incorrectly\n   downgraded.\n2. A route of HTTPS-only protocol with SNIs incorrectly captured\n   requests over HTTP routes.\n3. A route of TLS-only protocol with SNIs incorrectly captured\n   requests over TCP or UDP routes.",
        "type": "bugfix",
        "scope": "Core"
      }
    ]
  },
  "3.4.3.20": {
    "kong": [],
    "kong-ee": [
      {
        "message": "Bumped luarocks from 3.11.1 to 3.12.1. This fixes the error `main function has more than 65536 constants`, which was preventing rocks from being published or installed.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**openid-connect**: Fixed an `500` error caused by receiving a JSON `null` from the request body when parsing bearer tokens or client IDs.",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": []
  },
  "3.11.0.0": {
    "kong": [
      {
        "message": "**AWS-Lambda**: A warning message was added during schema validation on those plugins that contain a function name that does not comply with AWS Lambda's FunctionName pattern.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Bumped lua-kong-nginx-module from 0.15.1 to 0.15.2.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped OpenResty from 1.27.1.1 to 1.27.1.2.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**Wasm**: removed ngx_wasm_module from default builds.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**ai**: Added support for transforming, introspecting, and collecting metrics for image and audio generation requests, Responses API, and Realtime API. Added support for proxying Files, Batches, and Assistants API.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**AI Plugins**: Added new config field genai_category 'text/embeddings' and new route_type 'llm/v1/embeddings'",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy**: Fixed an issue where large request payload was not logged.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**AI Plugins**: Fixed an issue where the Gemini provider could not use Anthropic 'rawPredict' endpoint models hosted in Vertex.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy**: Fixed an issue where latency metric was not implemented for streaming responses.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed several issues that `kong start` and `kong stop` command throw error when the configuration contains vault reference and a prefix directory exists.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**cors**: Fixed an issue where requests with empty `origin` headers would cause empty reply from server.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where upstream connection pooling failed when pool names exceeded 32 characters  by applying a patch from upstream OpenResty.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**jwt**: Fixed an issue where the WWW-Authenticate header used an incorrect delimiter, now using a comma as specified by RFC 7235.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where `ca_certificate` cache was not invalidated when incremental sync was enabled.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**ai-proxy**: Fixed an issue where SSE terminator may not have correct ending characters.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy**: Fixed an issue where the response body for observability may be larger than the real one because of the stale data.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Improved the performance of string splitting functions in Kong's core.",
        "type": "performance",
        "scope": "Core"
      },
      {
        "message": "Reverted removal of `translate_backwards` from plugins' metaschema in order to maintain backward compatibility.",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-ee": [
      {
        "message": "**ai**: Added support for the `cohere` LLM format in the ai related plugins. This allows users can directly use the `cohere` rerank API.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**graphql-rate-limiting-advanced**: Added support for passing all downstream headers to GraphQL upstream servers in introspection requests.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**kafka-log**: Added support for Kafka 4.0.\n**kafka-upstream**: Added support for Kafka 4.0.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**ai-prompt-compressor**: Added a new plugin that compresses prompt information in requests before they are proxied by the AI Proxy or AI Proxy Advanced plugin.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**forward-proxy**: Marked the `auth_password` in the `forward_proxy` plugin as an `encrypted` field.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**request-callout**: Marked the `auth_password` as an `encrypted` field.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**ai**: add support for the `huggingface` LLM Native format in the ai related plugins.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where debug level logs for incremental sync were insufficient, making debugging more difficult.\n",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "**ai-rate-limiting-advanced**: Added support for the `namespace` field in the AI Rate Limiting Advanced plugin. This allows users to specify a ratelimiting namespace for the plugin, Similar to the existing `namespace` field in the `rate-limiting-advanced` plugin.\n",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy-advanced**: Add `tried_targets` field in serialized analytics logs for record of all tried ai targets.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai**: added `model.options.bedrock.performance_config_latency` config parameter, to allow administrators to enforce performanceConfig 'latency' for all AWS Bedrock requests.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**ai**: maps performanceConfig 'latency' field from client requests, for AWS Bedrock requests.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Bumped lua-kong-nginx-module from 0.15.2 to 0.15.3.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Bumped luarocks from 3.11.1 to 3.12.1. This fixes the error `main function has more than 65536 constants`, which was preventing rocks from being published or installed.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**ai**: changed a description for the max_request_body_size schema field to clarify relation to the request body size limit.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Bumped lua-resty-azure from 1.6.1 to 1.7.0.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "ai-proxy, ai-proxy-advanced: Deprecated the `preserve` route_type. You are encouraged to use new route_types added in version 3.11.x.x and onwards.",
        "type": "deprecation",
        "scope": "Plugin",
        "plugins": [
          "ai-proxy",
          "ai-proxy-advanced"
        ]
      },
      {
        "message": "Added support for OpenTelemetry formatted logs to the (tech preview) Active\nTracing feature\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**prometheus**: added `consumer` label for ai metrics and added metrics for ai-rag-injector plugin.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**llm**: Added support for Bedrock agent SDK, including rerand, converse, converse-stream, retrieveAndGenerate, and retrieveAndGenerate-stream.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Solace Upstream (beta)**: Added a new plugin which allows to transform requests into Solace messages in a Solace queue or topic.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Added an optional configuration parameter `admin_gui_hide_konnect_cta` that controls the visibility of the Konnect call-to-action in the Admin GUI.",
        "type": "feature",
        "scope": "Configuration"
      },
      {
        "message": "Logged license model_hours exceeded warning when LLM model usage exceeded the limit.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**ai**: Change sales counter sync per hour instead of per week.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**ai-aws-guardrails**: Added a new AI plugin that can protect requests and responses to/from AI LLM.\n",
        "scope": "Plugin",
        "type": "feature"
      },
      {
        "message": "**confluent**: Added support for sending messages with dynamic keys to determine partitions.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**Conjur Vault**: Added support for CyberArk Conjur Vault.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**datakit**: Added new datakit plugin",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where the delta type was not being validated during incremental sync.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Added certificate-based authentication to the Hashicorp vault backend.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**jwe**: Supported more encryption algorithms for jwe, including A128KW, A192KW, A256KW, ECDH-ES+A128KW, ECDH-ES+A192KW, ECDH-ES+A256KW, A128GCMKW, A192GCMKW, A256GCMKW.",
        "type": "feature",
        "scope": "PDK"
      },
      {
        "message": "**kafka-log**: Added support for sending messages with dynamic keys to determine partitions.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**kafka-upstream**: Added support for sending messages with dynamic keys to determine partitions.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Created internal JSON Object Signing and Encryption (JOSE) library to improve performance, features and security of several plugins.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where some logs are missing when incremental sync is enabled on the Data Plane side.\n",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "**oas-validation**: Added support for validating `multipart/form-data` requests.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**opentelemetry**: Added a new configuration field `sampling_strategy` to the plugin. The field allowed you to specify the sampling strategies for OTLP `traces`.\nSet `parent_drop_probability_fallback` if you want parent-based sampling when the parent span contains a `false` sampled flag, and fallback to probability-based sampling otherwise.\nSet `parent_probability_fallback` if you want parent-based sampling when the parent span contains a valid sampled flag (`true` or `false`), and fallback to probability-based sampling otherwise.\nThe default value is `parent_drop_probability_fallback` and keeps the instrumentation, sampling and exporting behaviour as before.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Added a new `kong.request.get_raw_forwarded_path()` function for returning non-normalized `forwarded_path`.\n",
        "type": "feature",
        "scope": "PDK"
      },
      {
        "message": "Added support for reporting whether `new_dns_client` and `incremental_sync` were enabled in anonymous reports.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**request-callout**: The plugin now logs the request URL, response code, and request latency (in milliseconds).",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**request-callout**: The plugin now sends a custom User-Agent header if one isn't provided. The default value is `kong/<kong_version>/request-callout`.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**request-validator**: Added support for specifying JSON schema draft versions.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "**kafka-log**: Added support for Schema Registry integration with Confluent Schema Registry for AVRO and JSON schemas.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Added an optional configuration parameter `service.tls_sans`. This allows to specify additional entries (either DNS names or URIs) for Subject Alternative Names validation of a TLS-based upstream.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**Core**: Provided more granular and valuable latency metrics in Kong Gateway, aligning with our Active Tracing measurements.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added the sticky-sessions load-balancer algorithm.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**vault**: Added support to decode base64 secrets before using them.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "**kafka-consume**: Added WebSocket support to the kafka-consume plugin for consuming Kafka messages.",
        "type": "feature",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where the Active Tracing total time was not including connection and handshake times.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Added a new configuration, `route_match_calculation`, which included bug fixes for the `traditional_compatible` and the `expressions` router flavors.\nThe default value `original` retained the current `3.x` router matching behavior without changes. The value `strict` enforced the router matching behavior with corrected calculation as follows:\n1. The weight (priority point) of a route was incorrectly\n   downgraded.\n2. A route of HTTPS-only protocol with SNIs incorrectly captured\n   requests over HTTP routes.\n3. A route of TLS-only protocol with SNIs incorrectly captured\n   requests over TCP or UDP routes.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**AI plugins**: Fixed an issue where some of ai metrics was missed in analytics",
        "scope": "Plugin",
        "type": "bugfix"
      },
      {
        "message": "**ai-aws-guardrails**: Fixed an issue where the plugin did not support inspecting responses in non-stream mode.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**prometheus**: Fixed an issue where AI latency histogram might miss some calculation.",
        "scope": "Plugin",
        "type": "bugfix"
      },
      {
        "message": "**ai-proxy**: Fixed an issue where patterns using multiple capture groups (e.g., `$(group1)/$(group2)`) failed to extract expected matches.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-rate-limiting-advanced**: Fixed an issue where AI rate limiting advanced plugin might panic when use redis strategy and sync_rate is set to 0.",
        "scope": "Plugin",
        "type": "bugfix"
      },
      {
        "message": "**request-callout**: Fix issue where a callout response would not be available to response `by_lua` code",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**request-callout**: Fixed an issue where caching options modified via `by_lua` would apply to all subsequent callouts.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**request-callout**: Fixed an issue where callouts with the same name would be accepted.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**request-callout**: Query parameters specified via `callout.request.query` will now correctly replace those in the callout URL.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where the LMDB database file was created with incorrect permission when running kong cli command with root privileges.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where events mechanism of clustering might be initialized repeatedly.\n",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Fixed an issue where the delta coalescing logic on the CP side might work inefficiently.",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Fixed an issue where modifying x-forwarded-for header before access phase may not take effect\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**degraphql**: Fixed an issue where the degraphql handle type Boolean was not being assigned correctly in the degraphql router.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where validation incorrectly passed for mis-matched deprecated and new fields if the new field value\nwas false. \n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the error logs generated during router rebuilding might be excessively noisy.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where with small chance DP might repeatedly full sync when incremental sync is enabled.",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Fixed an issue where the RPC framework might handle connections incorrectly on the data plane.\n",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "**ai-proxy**: Fixed an issue where model name did not escape when using AWS Bedrock inference profile.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where crud event was triggered multiple times by event_hooks.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**key-auth**: Fixed an issue where external consumers could not be used with traditional Kong deployments, such as with KIC.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where an external Python plugin cannot receive the updated value for its referenceable configuration fields.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**request-callout**: Fixed an issue where values in `custom` would not accept explicit null values for removal of fields",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where the data plane (DP) may report healthy before it is actually ready to accept traffic.",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "Fixed an issue where sometimes the paginated sync incorrectly reports \"history lost\" and fails.",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "**jwt-signer**: Fixed an issue where data planes didn't use the keys passed from the control plane to sign/re-sign.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**kafka**: Fixed an issue where the Kafka SCRAM authentication did not send the server nonce.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the log lines might be incorrectly logged.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**AI**: Fixed an issue where the password for the pgvector strategy was not being set correctly in the database.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**oas-validation**: Fixed an issue where the plugin raises \"path not found error\" when include_base_path is set to true and the server url is \"/\".\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**oas-validation**: Fixed an issue where the plugin throws an error for responses without a Content-Type header.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**oas-validation**: Fixed an issue where query parameters with explode=false couldn't be validated.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID-Connect**: Fixed an issue where caused IdP to report invalid redirect_uri errors when `config.redirect_uri` was not configured and the uri path contained spaces.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**openid-connect**: Fixed an issue where the OIDC plugin caused the third-party IDP to throw an error during logout attempts if the session had already been invalidated.\nAdded the `client_id` to the logout URL to ensure the logout request is sent to the correct client, preventing such errors.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where new custom plugin creation during a full sync with incremental enabled would cause inconsistency. It now fails and reinitiating the sync in such case.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where a change to a Partial in a custom workspace caused a communication issue between CP and DP on Incremental Config Sync mode.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where Plugins were not exported correctly when using Partials in a custom workspace in Hybrid Mode.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where Pgvector index failed when using special characters in the name.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the /schemas/plugins/validate endpoint returned a validation error\nwhen a plugin was linked to a partial containing a vault key.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the IAM Authentication for RDS failed due to token not being refreshed under certain conditions.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**key-auth**: Fixed an issue where region was not permitted to be null for remote identity realms.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**request-callout**: Fixed an issue where callout and upstream request body customizations were not performed when an empty request body was provided; now, an empty JSON body is used and content-type JSON is added to the request.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**request-callout**: Fixed an issue where callout plugin failed with timeout when `callouts.request.body.custom` is null and `callouts.request.headers.forward` is true.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**request-callout**: Fixed an issue where the client request body is forwarded to upstream when `upstream.body.forward` is false.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**request-validator**: Fixed an issue where multipart/form-data content type was rejected.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where rate-limiting library could cause deadlock with Postgres.",
        "type": "bugfix",
        "scope": "Performance"
      },
      {
        "message": "Fixed an issue where RPC calls miss the retry mechanism in the clustering system for resilience against transient network issues.\n",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Schema map values can now assume null values.",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Fix issue where schema library would fail with a nil reference if configurations are set via both deprecated and new names with diverging values",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**ai-semantic-cache**: Fixed an issue where SSE terminator may not have correct ending characters.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where the Lua VM memory size returned by status API is not accurate on the control plane.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where error logs were excessive when changing routes.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where dataplane nodes sometimes did not recover from sync failures, leading to recursive retries and failures.\n",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Fixed an issue where validation required all of `timeout` fields (`connect_timeout`, `read_timeout`, `send_timeout`)\nto have the same value. In reality only `connect_timeout` has to have the same value since that is the value used for\ngenerating the `timeout` field in the response if it is missing in the request.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where newly spawned workers used outdated router data because the `init` phase was skipped.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where updating an entity in a non-default workspace during incremental sync\nmay not have been applied correctly.\n",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Fixed an issue where the send request time was incorrectly calculated, now it should be more accurate.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**upstream-timeout**: Fixed an issue where `read_timeout`, `write_timeout`, and `connect_timeout` were set to 0, causing a runtime error.  After this release, any existing upstream-timeout plugin with these fields set to 0 will automatically update them to the default value of 60000.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where full configuration sync caused data plane to stop proxying when incremental config sync is enabled.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**ldap-auth-advanced**: Fixed an issue that caused browsers to automatically pop up dialog boxes when authentication failed while `ldap-auth-advanced` was enabled in the Kong Manager.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where the Admin API returned a 500 error instead of a 401 error when an empty string was provided for the `Kong-Admin-Token` header.\n",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "AI Azure Content Safety: Fixed an issue where Blocklist breaches are not correctly parsed.\n",
        "type": "bugfix",
        "scope": "Plugin",
        "plugins": [
          "ai-azure-content-safety"
        ]
      },
      {
        "message": "**AI Plugins**: Fixed unable to use Titan Text Embeddings models.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Blocked plugins to execute retry logic. Also improve testing functions\n",
        "type": "bugfix",
        "scope": "Plugin",
        "plugins": [
          "ai-prompt-compressor",
          "ai-sanitizer",
          "ai-semantic-cache",
          "ai-rag-injector"
        ]
      },
      {
        "message": "Fixed an issue where the `ai-prompt-decorator` plugin prompt field was too short.\n",
        "type": "feature",
        "scope": "Plugin",
        "plugins": [
          "ai-prompt-decorator"
        ]
      },
      {
        "message": "**ai-prompt-decorator**: Fixed an issue where the plugin would miss the model, temperature, and other user-defined fields.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**AI Proxy Advanced**: Fixed an issue where AI Proxy Advanced can't failover from other provider to Bedrock.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy-advanced**: Fix consistent-hashing algorithm not using correct value to hash.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**AI Proxy Advanced**: Fixed an issue where the stale semantic key vector may not be refreshed after the plugin config is updated.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where AI Proxy and AI Proxy Advanced would use corrupted plugin config.\n",
        "type": "bugfix",
        "scope": "Plugin",
        "plugins": [
          "ai-proxy",
          "ai-proxy-advanced"
        ]
      },
      {
        "message": "**ai-proxy**: Fixed an issue where AI Proxy returns 403 using gemini provider.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ollama**: Fixed an issue where 'tools' and 'RAG' decoration did not work for Ollama (llama2) provider.\n",
        "type": "bugfix",
        "scope": "Plugin",
        "plugins": [
          "ai-rag-injector"
        ]
      },
      {
        "message": "Fixed an issue where data plane (DP) might receive incorrect data if the control plane's (CP) configuration version was older than the DP's version.\n",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Fixed an issue where the CLI command `kong runner` crashes if using off strategy.\n",
        "type": "bugfix",
        "scope": "CLI Command"
      },
      {
        "message": "Fixed an issue where the control plane might not send RPC calls to the data plane correctly in some corner cases.\n",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Fixed an issue where CP may send sync notifications too frequently when incremental sync is enabled.\n",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Fixed an issue where the field `user_token_ident` was not being disallowed for update in the Admin API.\n",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "Fixed an issue where the Control Plane (CP) would send duplicate sync notifications when configuration changes occurred.\n",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "**header-cert-auth**: Fixed an issue where Header Cert Authentication plugin failed to validate revocation using OCSP when the downstream connection wasn't an SSL connection.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where users encountered duplicate key violation errors on `rbac_role_entities_pkey` while using the `deck sync` command.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where validation might not report error message correctly when incremental sync was enabled.\n",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "**mocking**: Fixed an issue where an empty array set in the mocking plugin returned an object type instead of an array type in the response body.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**mtls-auth**: Fixed an issue where uselss interface is called when doing the OCSP client cert verification.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Prometheus**: Fixed an issue where the control plane failed to expose the `db_entities_total` metric.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**prometheus**: Fixed an issue where the metric `data_plane_config_hash` might not work correctly for incremental sync.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where the rate limiting plugins can't handle decimal numbers when using Redis strategy.\n",
        "type": "bugfix",
        "scope": "Plugin",
        "plugins": [
          "rate-limiting",
          "rate-limiting-advanced",
          "graphql-rate-limiting-advanced",
          "ai-rate-limiting-advanced"
        ]
      },
      {
        "message": "Fixed an issue where deleting an RBAC user would also delete a non-default role with the same name.\n",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "Fixed an issue where adding the `hash_subject` and `store_metadata` fields to the `portal_session_conf` in the Dev Portal was not working as expected.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the admin API might not fetch the workspace correctly during batch updates.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**Rate-Limiting-Advanced**: Limited the length of the bucket identifier to prevent using strings longer than 256 characters for cache indexing, which could lead to high memory consumption in high-traffic scenarios.",
        "type": "performance",
        "scope": "Plugin"
      },
      {
        "message": "Visiting kconfig.js from the Kong Manager UI no longer triggers warnings for vitals and portal deprecation.\n",
        "type": "bugfix",
        "scope": "Admin API"
      },
      {
        "message": "Bumped page size for cluster sync to improve performance of full syncs.",
        "type": "performance",
        "scope": "Clustering"
      },
      {
        "message": "**JWT**: refactored plugin code to be more performant (measured to be at least three times faster).",
        "type": "performance",
        "scope": "Plugin"
      },
      {
        "message": "**oas-validation**: Improved performance for OpenAPI 3.1.",
        "type": "performance",
        "scope": "Plugin"
      },
      {
        "message": "**openid-connect**: improved the performance of signature verification.",
        "type": "performance",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy**: Implemented a faster SSE parser.",
        "type": "performance",
        "scope": "Plugin"
      },
      {
        "message": "Improved performance by removing the n+1 query problem for plugins.\nPlugins are now fetched in bulk with plugins_partials and partials.\n",
        "type": "performance",
        "scope": "Core"
      },
      {
        "message": "Improved RPC message queue responsiveness.",
        "type": "performance",
        "scope": "Clustering"
      },
      {
        "message": "Optimized query of the default workspace by directly accessing LMDB, improving performance.\n",
        "type": "performance",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where LMDB operation failures during incremental sync were not reported.\n",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Added a configuration option `vault_secrets_lazy_load` to control how vault\nsecrets are loaded. When enabled, plugin options stored as vault secrets are\nloaded only when needed. This can save memory and reduce startup time but may\nincrease latency the first time a secret is accessed or after it expires. The\ndefault value is `off`, preserving the behavior of previous releases.\n",
        "type": "feature",
        "scope": "Configuration"
      },
      {
        "message": "Fixed an issue where some of ai metrics was missed in analytics",
        "scope": "Plugin",
        "plugins": [
          "ai-prompt-compressor",
          "ai-rag-injector",
          "ai-semantic-cache",
          "ai-sanitizer"
        ],
        "type": "bugfix"
      },
      {
        "message": "Fixed an issue where sometimes the paginated sync incorrectly reports \"history lost\" and fails.",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Fixed an issue where newly spawned workers used outdated router data because the `init` phase was skipped.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "If any [AI Gateway plugin](/plugins/?category=ai) has been enabled in a self-managed Kong Gateway deployment for more than a week, upgrades from 3.10 versions to 3.11.0.0 will fail due to a license migration issue. This does not affect Konnect deployments.\n\nA fix will be provided in 3.11.0.1.\n\nSee [breaking changes in 3.11](/gateway/breaking-changes/#known-issues-in-3-11-0-0) for a temporary workaround.",
        "type": "known-issues",
        "scope": "Plugin",
        "plugins": [
          "ai-proxy",
          "ai-proxy-advanced",
          "ai-azure-content-safety",
          "ai-prompt-decorator",
          "ai-prompt-guard",
          "ai-prompt-template",
          "ai-rag-injector",
          "ai-rate-limiting-advanced",
          "ai-request-transformer",
          "ai-response-transformer",
          "ai-sanitizer",
          "ai-semantic-cache",
          "ai-semantic-prompt-guard"
        ]
      },
      {
        "message": "The Brotli module is missing from all of the following ARM64 Kong Gateway Docker images:\n* RHEL 9\n* Debian 12\n* Amazon Linux 2\n* Amazon Linux 2023\n",
        "type": "known-issues",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "Added a feature to persist the configuration format preference.",
        "type": "feature",
        "githubs": [
          3907
        ],
        "scope": "Core"
      },
      {
        "message": "Added a new UI for the Request Callout plugin.",
        "type": "feature",
        "githubs": [
          3839
        ],
        "scope": "Core"
      },
      {
        "message": "Improved the Route configuration form for a better user experience.",
        "type": "feature",
        "githubs": [
          3886
        ],
        "scope": "Core"
      },
      {
        "message": "Improved the user experience in Kong Manager by fixing various UI-related issues.",
        "type": "bugfix",
        "githubs": [
          3863,
          3888,
          3894,
          3897,
          3898,
          3899,
          3901,
          3905,
          3908,
          3912,
          3916
        ],
        "scope": "Core"
      }
    ]
  },
  "3.8.1.2": {
    "kong": [],
    "kong-ee": [
      {
        "message": "Bumped luarocks from 3.11.1 to 3.12.1.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Added a new `kong.request.get_raw_forwarded_path()` function for returning non-normalized `forwarded_path`.\n",
        "type": "feature",
        "scope": "PDK"
      },
      {
        "message": "Added support for reporting whether `new_dns_client` was enabled in anonymous reports.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added a new configuration, `route_match_calculation`, which included bug fixes for the `traditional_compatible` and the `expressions` router flavors.\nThe default value `original` retained the current `3.x` router matching behavior without changes. The value `strict` enforced the router matching behavior with corrected calculation as follows:\n1. The weight (priority point) of a route was incorrectly\n   downgraded.\n2. A route of HTTPS-only protocol with SNIs incorrectly captured\n   requests over HTTP routes.\n3. A route of TLS-only protocol with SNIs incorrectly captured\n   requests over TCP or UDP routes.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**oas-validation**: Fixed an issue where the plugin throws an error for responses without a Content-Type header.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**openid-connect**: Fixed an `500` error caused by JSON `null` from the request body when parsing bearer tokens or client IDs.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID-Connect**: Fixed an issue where caused IdP to report invalid redirect_uri errors when `config.redirect_uri` was not configured and the uri path contained spaces.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where rate-limiting library could cause deadlock with Postgres.",
        "type": "bugfix",
        "scope": "Performance"
      },
      {
        "message": "Fixed an issue where newly spawned workers used outdated router data because the `init` phase was skipped.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where users encountered duplicate key violation errors on `rbac_role_entities_pkey` while using the `deck sync` command.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**mocking**: Fixed an issue where an empty array set in the mocking plugin returned an object type instead of an array type in the response body.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**Rate Limiting Advanced** Fixed an issue where RLA stores long expiration time items cause `no memory` errors.",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": []
  },
  "3.10.0.3": {
    "kong": [
      {
        "message": "**ai-proxy**: Fixed an issue where large request payload was not logged.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy**: Fixed an issue where SSE terminator may not have correct ending characters.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy**: Fixed an issue where the response body for observability may be larger than the real one because of the stale data.\n",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-ee": [
      {
        "message": "Bumped luarocks from 3.11.1 to 3.12.1.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Added support for reporting whether `new_dns_client` and `incremental_sync` were enabled in anonymous reports.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added a new configuration, `route_match_calculation`, which included bug fixes for the `traditional_compatible` and the `expressions` router flavors.\nThe default value `original` retained the current `3.x` router matching behavior without changes. The value `strict` enforced the router matching behavior with corrected calculation as follows:\n1. The weight (priority point) of a route was incorrectly\n   downgraded.\n2. A route of HTTPS-only protocol with SNIs incorrectly captured\n   requests over HTTP routes.\n3. A route of TLS-only protocol with SNIs incorrectly captured\n   requests over TCP or UDP routes.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where some of ai metrics was missed in analytics",
        "scope": "Plugin",
        "type": "bugfix"
      },
      {
        "message": "**prometheus**: Fixed an issue where AI latency histogram might miss some calculation.",
        "scope": "Plugin",
        "type": "bugfix"
      },
      {
        "message": "**ai-proxy**: Fixed an issue where patterns using multiple capture groups (e.g., `$(group1)/$(group2)`) failed to extract expected matches.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where events mechanism of clustering might be initialized repeatedly.\n",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Fixed an issue where the incremental sync might not generate correct deltas\nfor non-default workspaces.\n",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Fixed an issue where the RPC framework might handle connections incorrectly on the data plane.\n",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "**key-auth**: Fixed an issue where external consumers could not be used with traditional Kong deployments, such as with KIC.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "-> Fixed an issue where sometimes the paginated sync incorrectly reports \"history lost\" and fails.",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "**oas-validation**: Fixed an issue where the plugin throws an error for responses without a Content-Type header.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where new custom plugin creation during a full sync with incremental enabled would cause inconsistency. It now fails and reinitiating the sync in such case.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where Pgvector index failed when using special characters in the name.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where the IAM Authentication for RDS failed due to token not being refreshed under certain conditions.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where RPC calls miss the retry mechanism in the clustering system for resilience against transient network issues.\n",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "**ai-semantic-cache**: Fixed an issue where SSE terminator may not have correct ending characters.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where error logs were excessive when changing routes.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where dataplane nodes sometimes did not recover from sync failures, leading to recursive retries and failures.\n",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "-> Fixed an issue where newly spawned workers used outdated router data because the `init` phase was skipped.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where updating an entity in a non-default workspace during incremental sync\nmay not have been applied correctly.\n",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Fixed an issue where the send request time was incorrectly calculated, now it should be more accurate.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**AI Plugins**: Fixed unable to use Titan Text Embeddings models.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-prompt-decorator**: Fixed an issue where the plugin would miss the model, temperature, and other user-defined fields.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**AI Proxy Advanced**: Fixed an issue where the stale semantic key vector may not be refreshed after the plugin config is updated.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-proxy**: Fixed an issue where AI Proxy returns 403 using gemini provider.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ollama**: Fixed an issue where 'tools' and 'RAG' decoration did not work for Ollama (llama2) provider.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where the CLI command `kong runner` crashes if using off strategy.\n",
        "type": "bugfix",
        "scope": "CLI Command"
      },
      {
        "message": "Fixed an issue where the control plane might not send RPC calls to the data plane correctly in some corner cases.\n",
        "type": "bugfix",
        "scope": "Clustering"
      },
      {
        "message": "Fixed an issue where users encountered duplicate key violation errors on `rbac_role_entities_pkey` while using the `deck sync` command.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**mocking**: Fixed an issue where an empty array set in the mocking plugin returned an object type instead of an array type in the response body.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where the admin API might not fetch the workspace correctly during batch updates.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Bumped page size for cluster sync to improve performance of full syncs.",
        "type": "performance",
        "scope": "Clustering"
      },
      {
        "message": "Improved RPC message queue responsiveness.",
        "type": "performance",
        "scope": "Clustering"
      },
      {
        "message": "Fixed an issue where LMDB operation failures during incremental sync were not reported.\n",
        "type": "bugfix",
        "scope": "Clustering"
      }
    ],
    "kong-manager-ee": []
  },
  "3.9.1.2": {
    "kong": [],
    "kong-ee": [
      {
        "message": "Bumped luarocks from 3.11.1 to 3.12.1.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "Added a new `kong.request.get_raw_forwarded_path()` function for returning non-normalized `forwarded_path`.\n",
        "type": "feature",
        "scope": "PDK"
      },
      {
        "message": "Added support for reporting whether `new_dns_client` was enabled in anonymous reports.\n",
        "type": "feature",
        "scope": "Core"
      },
      {
        "message": "Added a new configuration, `route_match_calculation`, which included bug fixes for the `traditional_compatible` and the `expressions` router flavors.\nThe default value `original` retained the current `3.x` router matching behavior without changes. The value `strict` enforced the router matching behavior with corrected calculation as follows:\n1. The weight (priority point) of a route was incorrectly\n   downgraded.\n2. A route of HTTPS-only protocol with SNIs incorrectly captured\n   requests over HTTP routes.\n3. A route of TLS-only protocol with SNIs incorrectly captured\n   requests over TCP or UDP routes.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**ldap-auth-advanced**: Fixed an issue where binary string was truncated at the first null character.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**oas-validation**: Fixed an issue where the plugin throws an error for responses without a Content-Type header.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**OpenID-Connect**: Fixed an issue where caused IdP to report invalid redirect_uri errors when `config.redirect_uri` was not configured and the uri path contained spaces.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where rate-limiting library could cause deadlock with Postgres.",
        "type": "bugfix",
        "scope": "Performance"
      },
      {
        "message": "-> Fixed an issue where newly spawned workers used outdated router data because the `init` phase was skipped.",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "Fixed an issue where AI Proxy and AI Proxy Advanced would use corrupted plugin config.\n",
        "type": "bugfix",
        "scope": "Plugin",
        "plugins": [
          "ai-proxy",
          "ai-proxy-advanced"
        ]
      },
      {
        "message": "Fixed an issue where users encountered duplicate key violation errors on `rbac_role_entities_pkey` while using the `deck sync` command.\n",
        "type": "bugfix",
        "scope": "Core"
      },
      {
        "message": "**mocking**: Fixed an issue where an empty array set in the mocking plugin returned an object type instead of an array type in the response body.\n",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "Fixed an issue where adding the `hash_subject` and `store_metadata` fields to the `portal_session_conf` in the Dev Portal was not working as expected.\n",
        "type": "bugfix",
        "scope": "Core"
      }
    ],
    "kong-manager-ee": []
  },
  "3.11.0.1": {
    "kong": [],
    "kong-ee": [
      {
        "message": "Bumped luarocks from 3.11.1 to 3.12.2. This fixes the error `main function has more than 65536 constants`, which was preventing rocks from being published or installed.",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**lua-resty-lmdb**: updated to version 1.6.1.\n",
        "type": "dependency",
        "scope": "Core"
      },
      {
        "message": "**llm**: Fixed an issue where the llm license migration could fail if the license counter contained more than one week of data.",
        "scope": "Plugin",
        "type": "bugfix",
        "plugins": [
          "ai-proxy",
          "ai-proxy-advanced",
          "ai-azure-content-safety",
          "ai-prompt-decorator",
          "ai-prompt-guard",
          "ai-prompt-template",
          "ai-rag-injector",
          "ai-rate-limiting-advanced",
          "ai-request-transformer",
          "ai-response-transformer",
          "ai-sanitizer",
          "ai-semantic-cache",
          "ai-semantic-prompt-guard"
        ]
      },
      {
        "message": "**request-callout**: Fixed an issue where `untrusted_lua_sandbox_requires` option was not respected.",
        "type": "bugfix",
        "scope": "Plugin"
      },
      {
        "message": "**ai-semantic-cache**: Fixed an issue where SSE terminator may not have correct ending characters.\n",
        "type": "bugfix",
        "scope": "Plugin"
      }
    ],
    "kong-manager-ee": [
      {
        "message": "Fixed an issue where the vault picker was missing in the Request Callout plugin.",
        "type": "bugfix",
        "githubs": [
          3967
        ],
        "scope": "Core"
      }
    ]
  }
}