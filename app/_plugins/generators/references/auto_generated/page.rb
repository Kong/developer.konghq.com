# frozen_string_literal: true

require 'active_support'
require 'active_support/core_ext/object/deep_dup'

module Jekyll
  module ReferencePages
    module AutoGenerated
      class Page # rubocop:disable Style/Documentation
        include Jekyll::SiteAccessor

        def initialize(doc)
          @doc = doc
          @release_info = release_info
        end

        def dir
          @dir ||= url
        end

        def url
          @url ||= "#{base_url}#{page_release}/"
        end

        def data
          @data ||= @doc
                    .data
                    .merge!(
                      'base_url' => base_url,
                      'latest?' => page_release == @release_info.latest_available_release,
                      'release' => page_release,
                      'seo_noindex' => true
                    ).merge!(metadata)
        end

        def relative_path
          @relative_path ||= @doc.relative_path
        end

        def content
          @content ||= @doc.content.deep_dup
        end

        def to_jekyll_page
          CustomJekyllPage.new(site: @doc.site, page: self)
        end

        private

        def metadata
          @metadata ||= site.config.dig('reference_metadata', key)
        end

        def releases
          @releases ||= @release_info.releases.reject(&:label?)
        end

        def base_url
          @base_url ||= @doc.url.gsub(%r{/\d+\.\d+/}, '/').gsub('index/', '')
        end

        def page_release
          @page_release ||= @release_info.releases.detect do |r|
            r['release'] == release_from_url
          end
        end

        def release_from_url
          @release_from_url ||= @doc.url[/\d+\.\d+/]
        end

        def key
          @key ||= @doc.url.split('/')[1]
        end

        def release_info
          @release_info ||= ReleaseInfo::Product.new(
            site:,
            product: metadata['products'].first,
            min_version: {},
            max_version: {}
          )
        end
      end
    end
  end
end
